{
	"application": {
		"title": "AuditTool",
		"meta_description": "AuditTool",
		"meta_title": "AuditTool",
		"theme": "bootswatch-spacelab",
		"animate": true,
		"footer_text": "AuditTool Banca IFIS - Copyright (c) 2017, MIT License, release 0.0.5",
		"roles": [
			"admin",
			"user"
		],
		"default_role": "user",
		"collections": [
			{
				"name": "activities",
				"type": "collection",
				"fields": [
					{
						"name": "status",
						"title": "Status",
						"type": "string",
						"default": "Avviato",
						"exportable": true,
						"input": "select",
						"input_items": [
							{
								"value": "Avviato",
								"title": "Avviato"
							},
							{
								"value": "In corso",
								"title": "In corso"
							},
							{
								"value": "Completato",
								"title": "Completato"
							},
							{
								"value": "Archiviato",
								"title": "Archiviato"
							}
						],
						"array_item_type": "object",
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "tipo",
						"title": "Tipo attività",
						"type": "string",
						"exportable": true,
						"input": "radio",
						"input_items": [
							{
								"value": "Audit Filiale",
								"title": "Audit Filiale"
							},
							{
								"value": "Audit",
								"title": "Audit"
							},
							{
								"value": "Informativa",
								"title": "Informativa"
							},
							{
								"value": "Altre attività",
								"title": "Altre attività"
							}
						],
						"array_item_type": "object",
						"show_in_update_form": false
					},
					{
						"name": "titolo",
						"title": "Titolo",
						"type": "string",
						"exportable": true,
						"show_in_insert_form": false
					},
					{
						"name": "data",
						"title": "Data avvio attività",
						"type": "date",
						"default": "today",
						"format": "DD/MM/YYYY",
						"exportable": true,
						"input": "datepicker",
						"show_in_insert_form": false
					},
					{
						"name": "auditors",
						"title": "Auditors",
						"type": "array",
						"default": "{{userFullName}}",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "auditors_all",
						"lookup_key": "auditor",
						"lookup_field": "auditor",
						"show_in_insert_form": false
					},
					{
						"name": "obiettivo",
						"title": "Obiettivi dell'attività",
						"type": "string",
						"exportable": true,
						"input": "textarea",
						"show_in_insert_form": false
					},
					{
						"name": "areeRischio",
						"title": "Aree di rischio (ICAAP)",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "rischi_all",
						"lookup_key": "ICAAP",
						"lookup_field": "ICAAP",
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "rischiEsaminati",
						"title": "Principali rischi esaminati",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "rischi_all",
						"lookup_key": "rischio",
						"lookup_field": "rischio",
						"show_in_insert_form": false
					},
					{
						"name": "strutture",
						"title": "Strutture coinvolte",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "strutture_all",
						"lookup_key": "uo",
						"lookup_field": "uo",
						"show_in_insert_form": false
					},
					{
						"name": "numero",
						"title": "Numero",
						"type": "string",
						"exportable": true,
						"show_in_insert_form": false
					},
					{
						"name": "normativeint",
						"title": "Riferimenti normativa interna",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "normativeext",
						"lookup_key": "norma",
						"lookup_field": "norma",
						"show_in_insert_form": false
					},
					{
						"name": "normativeext",
						"title": "Riferimenti normativa esterna",
						"type": "array",
						"input": "select-multiple",
						"show_in_insert_form": false
					},
					{
						"name": "processi",
						"title": "Processi",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "processi",
						"lookup_key": "processo",
						"lookup_field": "processo",
						"show_in_insert_form": false
					},
					{
						"name": "sottoprocessi",
						"title": "SottoProcessi",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "sottoprocessi",
						"lookup_key": "sottoprocesso",
						"lookup_field": "sottoprocesso",
						"show_in_insert_form": false
					},
					{
						"name": "memo",
						"title": "Executive Summary",
						"type": "string",
						"input": "textarea",
						"show_in_insert_form": false
					},
					{
						"name": "filiale",
						"title": "Filiale",
						"type": "string",
						"input": "select",
						"lookup_query_name": "filiali_all",
						"lookup_key": "filiale",
						"lookup_field": "filiale",
						"show_in_insert_form": false
					},
					{
						"name": "sci",
						"title": "Valutazione SCI",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "Positiva",
								"title": "Positiva"
							},
							{
								"value": "Parzialmente positiva +",
								"title": "Parzialmente positiva +"
							},
							{
								"value": "Parzialmente positiva",
								"title": "Parzialmente positiva"
							},
							{
								"value": "Parzialmente positiva -",
								"title": "Parzialmente positiva -"
							},
							{
								"value": "Negativa",
								"title": "Negativa"
							}
						],
						"show_in_insert_form": false
					},
					{
						"name": "rischioResiduo",
						"title": "Valutazione rischio residuo",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "Alto",
								"title": "Alto"
							},
							{
								"value": "Medio",
								"title": "Medio"
							},
							{
								"value": "Basso",
								"title": "Basso"
							},
							{
								"value": "Non significativo",
								"title": "Non significativo"
							}
						],
						"show_in_insert_form": false
					},
					{
						"name": "datachiusura",
						"title": "Data chiusura attività",
						"type": "date",
						"default": "today",
						"format": "DD/MM/YYYY",
						"input": "datepicker",
						"show_in_insert_form": false
					},
					{
						"name": "nextreadystatus",
						"type": "bool",
						"default": "false",
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					}
				],
				"owner_field": "ownerId",
				"roles_allowed_to_read": [
					"admin",
					"owner"
				],
				"roles_allowed_to_insert": [
					"admin",
					"user"
				],
				"roles_allowed_to_delete": [
					"admin",
					"user"
				],
				"update_rule": "userId && (doc.ownerId == userId || Users.isInRoles(userId, [\"admin\"]) || _.contains(doc.auditors, Users.findOne({_id:userId},{}).profile.name))",
				"before_update_code": "var checkCompleted = function() {\n\t\tvar CKdatachiusura =  (modifier.$set.datachiusura === undefined) ? doc.datachiusura : modifier.$set.datachiusura;\n\t\tvar CKmemo = (modifier.$set.memo === undefined) ? doc.memo : modifier.$set.memo;\n      //===========================\n        /*\n\t\tvar carenzaNumbers = Carenze.find({activityId: doc._id},{fields: {carenzaId: 1 }}).fetch();  \n        var x = _.each(carenzaNumbers, function(doc){return parseInt(doc.carenzaId.split('_')[3]);});\n        var x1= x.sort(function (a, b) {  return a - b;  });\n        var x2= _.uniq(x1);\n        var CKnumCarenze = ((x1.lenght() === _x2.lenght()) && (_.last(x2) === x1.lenght())) ? true : false;\n      */\n      // ===============================  \n\t\tconsole.log(\"VERIFICARE LA PRESENZA DI BUCHI NELLA NUMERAZIONE DELLE CARENZE\");\n\t\tconsole.log(\"VERIFICARE CHE TUTTE LE VERIFICHE HANNO UNA VALUTAZIONE\");\n\t\tconsole.log(\"VERIFICARE CHE TUTTE LE VERIFICHE FAIL SIANO INDIRIZZATE AD UNA CARENZA\");\n\t\t\t\t\t\t\t\t\n\t//\tif (!!CKdatachiusura && !!CKmemo && !!CKnumCarenze) { modifier.$set.nextreadystatus = true;} else { modifier.$set.nextreadystatus = false;}  \n        if (!!CKdatachiusura && !!CKmemo) { modifier.$set.nextreadystatus = true;} else { modifier.$set.nextreadystatus = false;}\n};\n\nif(( doc.status === \"In corso\")) {checkCompleted();}\n\n\nif(( modifier.$set.status !== \"Approvato\" && doc.status === \"Completato\")) {\n\t\t\t\t\t\t\t\t\tmodifier.$set.status = \"In corso\";\n\t\t\t\t\t\t\t\t\tcheckCompleted();}\n\n\n\nif(( modifier.$set.status !== \"Archiviato\" && doc.status === \"Approvato\")) {\n\t\t\t\t\t\t\t\t\tmodifier.$set.status = \"In corso\"; \n\t\t\t\t\t\t\t\t\tcheckCompleted();} \n\n\nif( modifier.$set.status === \"Approvato\") {                 \n  \t\t// Inserisce il numero di audit automaticamente\n\t\t\tvar max = 0;\n            var auditNumbers = Activities.find({status: { \"$in\" : [\"Approvato\",\"Archivato\"]}},{ fields: { numero: 1 }}).fetch();\n\t\t\t_.each(auditNumbers, function(doc)\t{var intNum = parseInt(doc.numero.split('/')[0]);if(!isNaN(intNum) && intNum > max) max = intNum;});\n\t\t\tmodifier.$set.numero =  (max + 1)+\"/\"+moment().format('YYYY');\n  \t\t// Aggiornare la numerazione delle carenze\n            console.log(\"Assegnato numero verbale di audit\",(max + 1)+\"/\"+moment().format('YYYY'));\n  \n                                                  }\n\n\nif( doc.status === \"Avviato\") {modifier.$set.status = \"In corso\";}\nif( doc.status === \"Archiviato\") {throw new Meteor.Error(403, \"Audit Archiviato: Non più modificabile !\");}\n\n\n",
				"before_remove_code": "if( doc.status === \"Archiviato\") {throw new Meteor.Error(403, \"Audit Archiviato: Non più modificabile !\");}",
				"after_remove_code": "//ToDo: dopo la rimozione di Activities vanno rimosse \"carenze\", \"fieldwork\", file."
			},
			{
				"name": "rischi",
				"type": "collection",
				"fields": [
					{
						"name": "rischio",
						"title": "Principali aree di rischio",
						"type": "string",
						"show_in_insert_form": false
					},
					{
						"name": "ICAAP",
						"title": "Principali rischi ICAAP",
						"type": "string",
						"show_in_insert_form": false,
						"show_in_update_form": false
					}
				]
			},
			{
				"name": "strutture",
				"type": "collection",
				"fields": [
					{
						"name": "uo",
						"title": "Unità organizzative",
						"type": "string",
						"input": "select-multiple"
					},
					{
						"name": "livello",
						"title": "Livello U.O.",
						"type": "string"
					}
				]
			},
			{
				"name": "carenze",
				"type": "collection",
				"fields": [
					{
						"name": "activityId",
						"title": "Activity Id",
						"type": "string",
						"required": true,
						"searchable": false,
						"sortable": false,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "carenzaId",
						"title": "Numero carenza",
						"type": "string",
						"default": "{{nextCarenzaNumber}}",
						"required": true,
						"exportable": true,
						"show_in_update_form": false
					},
					{
						"name": "titolo",
						"title": "Titolo carenza",
						"type": "string",
						"required": true
					},
					{
						"name": "data",
						"title": "Data carenza",
						"type": "date",
						"default": "today",
						"required": true,
						"format": "DD-MM-YYYY",
						"exportable": true,
						"input": "datepicker"
					},
					{
						"name": "descrizione",
						"title": "Descrizione carenza",
						"type": "string",
						"required": true,
						"exportable": true,
						"input": "textarea",
						"show_in_dataview": false
					},
					{
						"name": "livello",
						"title": "Livello criticità",
						"type": "string",
						"required": true,
						"exportable": true,
						"input": "select",
						"input_items": [
							{
								"value": "ridotto",
								"title": "Ridotto"
							},
							{
								"value": "medio",
								"title": "Medio"
							},
							{
								"value": "alto",
								"title": "Alto"
							},
							{
								"value": "moltoalto",
								"title": "Molto Alto"
							}
						],
						"lookup_query_params": [
							{
								"name": "Ridotto",
								"value": "Ridotto"
							},
							{
								"name": "Basso",
								"value": "Basso"
							},
							{
								"name": "Medio",
								"value": "Medio"
							},
							{
								"name": "Alto",
								"value": "Alto"
							},
							{
								"name": "MoltoAlto",
								"value": "MoltoAlto"
							}
						]
					},
					{
						"name": "owner",
						"title": "U.O. responsabile",
						"type": "string",
						"required": true,
						"exportable": true
					},
					{
						"name": "tipo",
						"title": "Natura della carenza",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"title": "null"
							},
							{
								"value": "Errore Umano",
								"title": "Errore Umano"
							},
							{
								"value": "Carenza Documentale",
								"title": "Carenza Documentale"
							},
							{
								"value": "Natura",
								"title": "Natura"
							}
						]
					},
					{
						"name": "dbi",
						"title": "Banca d'Italia",
						"type": "bool",
						"input": "checkbox"
					}
				],
				"owner_field": "ownerId",
				"before_insert_code": "Meteor.call(\"activitiesUpdate\", doc.activityId,{});",
				"before_update_code": "\nMeteor.call(\"activitiesUpdate\", doc.activityId,{});\n",
				"before_remove_code": "Meteor.call(\"activitiesUpdate\", doc.activityId,{});",
				"after_update_code": "if(( modifier.$set.numero !== undefined)) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"RIASSEGNARE L'ID ALLE CARENZE\");\n\t\t\t\t\t\t\t\t\t}"
			},
			{
				"name": "files",
				"type": "file_collection",
				"storage_adapters": [
					"gridfs"
				],
				"owner_field": "ownerId"
			},
			{
				"name": "fieldworks",
				"type": "collection",
				"fields": [
					{
						"name": "numero",
						"title": "Numero",
						"type": "string",
						"default": "{{nextVerificaNumber}}",
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "titolo",
						"title": "Titolo verifica",
						"type": "string",
						"default": "{{titleVerifica}}"
					},
					{
						"name": "obiettivo",
						"title": "Obiettivo verifica",
						"type": "string",
						"default": "{{descriptionVerifica}}",
						"input": "textarea"
					},
					{
						"name": "descrizione",
						"title": "Descrizione Verifica",
						"type": "string",
						"input": "textarea",
						"show_in_dataview": false,
						"show_in_insert_form": false
					},
					{
						"name": "activityId",
						"title": "ActivityId",
						"type": "string",
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "esito",
						"title": "Esito",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "null"
							},
							{
								"value": "fail",
								"title": "FAIL"
							},
							{
								"value": "pass",
								"title": "PASS"
							}
						],
						"show_in_insert_form": false
					}
				],
				"owner_field": "ownerId",
				"before_insert_code": "Meteor.call(\"activitiesUpdate\", doc.activityId,{});",
				"before_update_code": "Meteor.call(\"activitiesUpdate\", doc.activityId,{});",
				"before_remove_code": "Meteor.call(\"activitiesUpdate\", doc.activityId,{});"
			},
			{
				"name": "normative",
				"type": "collection",
				"fields": [
					{
						"name": "norma",
						"title": "Normativa",
						"type": "string"
					},
					{
						"name": "descrizione",
						"title": "Descrizione",
						"type": "string"
					}
				]
			},
			{
				"name": "libtest",
				"type": "collection",
				"fields": [
					{
						"name": "libreria",
						"title": "Libreria",
						"type": "string",
						"searchable": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "descrizione",
						"title": "Descrizione",
						"type": "string",
						"searchable": false,
						"sortable": false,
						"input": "textarea",
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "area",
						"title": "Area",
						"type": "string",
						"searchable": false,
						"sortable": false,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					}
				]
			},
			{
				"name": "filiali",
				"type": "collection",
				"fields": [
					{
						"name": "filiale",
						"title": "Filiale",
						"type": "string",
						"input": "select"
					}
				],
				"owner_field": "ownerId"
			},
			{
				"name": "monitoringcontrol",
				"type": "collection",
				"fields": [
					{
						"name": "numero",
						"title": "Cod. Interno controllo",
						"type": "string"
					},
					{
						"name": "ambito",
						"title": "Ambito di intervento",
						"type": "string"
					},
					{
						"name": "titolo",
						"title": "Titolo controllo",
						"type": "string"
					},
					{
						"name": "periodicita",
						"title": "Periodicità",
						"type": "string",
						"input": "radio",
						"input_items": [
							{
								"value": "trimestrale",
								"title": "trimestrale"
							},
							{
								"value": "semestrale",
								"title": "semestrale"
							},
							{
								"value": "annuale",
								"title": "annuale"
							}
						]
					},
					{
						"name": "referente",
						"title": "Referente",
						"type": "string"
					},
					{
						"name": "descrizione",
						"title": "Descrizione controllo",
						"type": "string"
					},
					{
						"name": "strumenti",
						"title": "Strumenti",
						"type": "string"
					}
				]
			},
			{
				"name": "monitoring",
				"type": "collection",
				"fields": [
					{
						"name": "idcontrollo",
						"title": "Numero controllo",
						"type": "string"
					},
					{
						"name": "annomese",
						"title": "Data",
						"type": "string"
					},
					{
						"name": "verificaeffettuata",
						"title": "Si-No",
						"type": "string"
					},
					{
						"name": "note",
						"title": "Note",
						"type": "string"
					}
				]
			},
			{
				"name": "auditors",
				"type": "collection",
				"fields": [
					{
						"name": "auditor",
						"title": "Auditor",
						"type": "string",
						"input": "select-multiple",
						"lookup_query_name": "auditors_all",
						"lookup_key": "auditor",
						"lookup_field": "auditor"
					},
					{
						"name": "ruolo",
						"title": "Ruolo",
						"type": "string"
					}
				]
			},
			{
				"name": "processi",
				"type": "collection",
				"fields": [
					{
						"name": "settore",
						"title": "Settore",
						"type": "string"
					},
					{
						"name": "processo",
						"title": "Processo",
						"type": "string"
					},
					{
						"name": "sottoprocesso",
						"title": "Sotto processo",
						"type": "string"
					},
					{
						"name": "fase",
						"title": "Fase",
						"type": "string"
					}
				]
			},
			{
				"name": "profili",
				"type": "collection"
			}
		],
		"queries": [
			{
				"name": "admin_users",
				"collection": "users",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "admin_user",
				"collection": "users",
				"find_one": true,
				"filter": "{ \"_id\": \":userId\" }",
				"options": "{}"
			},
			{
				"name": "users_null",
				"collection": "users",
				"find_one": true,
				"filter": "{ \"_id\": null }",
				"options": "{}"
			},
			{
				"name": "current_user_data",
				"collection": "users",
				"find_one": true,
				"filter": "{ \"_id\": \"Meteor.userId()\" }",
				"options": "{}"
			},
			{
				"name": "files_all",
				"collection": "files",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "strutture_all",
				"collection": "strutture",
				"filter": "{}",
				"options": "{\"sort\":{\"uo\":1}}"
			},
			{
				"name": "rischi_all",
				"collection": "rischi",
				"filter": "{}",
				"options": "{\"sort\":{\"rischio\":1}}"
			},
			{
				"name": "carenza_all",
				"collection": "carenze",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "carenza_null",
				"collection": "carenze",
				"find_one": true,
				"filter": "{\"_Id\":null}",
				"options": "{}"
			},
			{
				"name": "carenza",
				"collection": "carenze",
				"find_one": true,
				"filter": "{\"_id\":\":carenzaId\"}",
				"options": "{}"
			},
			{
				"name": "activities_list",
				"collection": "activities",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "activities_null",
				"collection": "activities",
				"find_one": true,
				"filter": "{\"_id\":null}",
				"options": "{}"
			},
			{
				"name": "activity",
				"collection": "activities",
				"find_one": true,
				"filter": "{\"_id\":\":activityId\"}",
				"options": "{}"
			},
			{
				"name": "carenze",
				"collection": "carenze",
				"filter": "{\"activityId\":\":activityId\"}",
				"options": "{}"
			},
			{
				"name": "normativeext",
				"collection": "normative",
				"filter": "{\"descrizione\":\"normativa esterna\"}",
				"options": "{\"sort\":{\"norma\":1}}"
			},
			{
				"name": "singola_attivita_list",
				"collection": "fieldworks",
				"filter": "{\"activityId\":\":singolaAttivitaId\"}",
				"options": "{}"
			},
			{
				"name": "tutte_attivita_null",
				"collection": "fieldworks",
				"find_one": true,
				"filter": "{\"_id\":null}",
				"options": "{}"
			},
			{
				"name": "singola_attivita",
				"collection": "fieldworks",
				"find_one": true,
				"filter": "{\"_id\":\":singolaAttivitaId\"}",
				"options": "{}"
			},
			{
				"name": "libtest",
				"collection": "libtest",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "filiali_all",
				"collection": "filiali",
				"filter": "{}",
				"options": "{\"sort\":{\"filiale\":1}}"
			},
			{
				"name": "auditors_all",
				"collection": "auditors",
				"filter": "{}",
				"options": "{\"sort\":{\"auditor\":1}}"
			},
			{
				"name": "activity_all",
				"collection": "activities",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "normativeint",
				"collection": "normative",
				"filter": "{\"descrizione\":\"normativa interna\"}",
				"options": "{\"sort\":{\"norma\":1}}"
			},
			{
				"name": "processi",
				"collection": "processi",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "sottoprocessi",
				"collection": "processi",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "verifiche_all",
				"collection": "fieldworks",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "activities_no_archived",
				"collection": "activities",
				"filter": "{\"status\":{\"$ne\":\"archived\"}}",
				"options": "{}"
			},
			{
				"name": "all_profili",
				"collection": "processi",
				"filter": "{}",
				"options": "{}"
			}
		],
		"public_zone": {
			"type": "zone",
			"components": [
				{
					"name": "left_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav",
					"title_icon_class": "fa fa-home",
					"items": [
						{
							"title": "Dashboard",
							"route": "dashboard",
							"icon_class": "fa fa-tachometer"
						},
						{
							"title": "Profile",
							"route": "profile",
							"icon_class": "fa fa-address-card-o"
						},
						{
							"title": "Docs",
							"route": "docs",
							"icon_class": "fa fa-book"
						}
					],
					"object_type": "menu"
				},
				{
					"name": "right_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav navbar-right",
					"items": [
						{
							"title": "Register",
							"route": "register"
						},
						{
							"title": "Login",
							"route": "login"
						}
					],
					"object_type": "menu"
				}
			],
			"pages": [
				{
					"name": "home_public",
					"type": "page",
					"components": [
						{
							"name": "jumbotron",
							"type": "jumbotron",
							"title": "Audit Tool",
							"text": "Web Application for audits, the main function are:<br />- Track audits activities<br />- Monitoring progress<br />- Archiving documentation<br /><br /> This application is implemented with the support of Group Banca IFIS Internal Audit. The application is realized with the Meteor-Kitchen framework.<br />",
							"button_title": "Continue &raquo;",
							"button_route": "dashboard",
							"object_type": "jumbotron"
						}
					]
				},
				{
					"name": "login",
					"type": "page",
					"template": "login"
				},
				{
					"name": "register",
					"type": "page",
					"template": "register"
				},
				{
					"name": "verify_email",
					"type": "page",
					"template": "verify_email",
					"route_params": [
						"verifyEmailToken"
					]
				},
				{
					"name": "forgot_password",
					"type": "page",
					"template": "forgot_password"
				},
				{
					"name": "reset_password",
					"type": "page",
					"template": "reset_password",
					"route_params": [
						"resetPasswordToken"
					]
				},
				{
					"name": "docs",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-pills nav-stacked",
							"items": [
								{
									"title": "Audit Tool",
									"route": "docs.audit_tool"
								},
								{
									"title": "Workflow",
									"route": "docs.audit_execution"
								},
								{
									"title": "Audit Framework",
									"route": "docs.framework"
								},
								{
									"title": "Controlli continuativi",
									"route": "docs.controlli_continuativi"
								},
								{
									"title": "IT notes",
									"route": "docs.it_notes"
								}
							],
							"object_type": "menu"
						}
					],
					"pages": [
						{
							"name": "audit_tool",
							"type": "page",
							"components": [
								{
									"name": "audit_tool",
									"type": "markdown",
									"source": "### Attività di audit\n\nL'AuditTool supporta la formalizzazione delle principali attività svolte dall'Internal Audit con specifici workflow distinti:\n\n\t\t*\tAudit\n\t\t*\tAudit di filiali\n\t\t*\tInformativa\n\t\t*\tAltro\n\nLo strumento implementa inoltre allert inerenti alla profilazione degli utenti.\n\n\n### Requisiti base\n\nGli obiettivi di alto livello dell'applicativo sono:\n\n* Automatizzazione del piano di audit (release 1.0.0)\n* Strutturazione delle informazioni, oggi destrutturate all’interno in documenti word.\n* Per gli audit di filiale automatizzare la sezione Verifiche con le casistiche da esaminare secondo le estrazioni di “Alessandro”.\n* Classificare gli interventi di audit, secondo specifici attributi (anno, area/processo ricoperto, autore,…)\n* Fornire lo stato avanzamento delle attività in corso\n* Archiviazione ordinata dei verbali di audit e delle carte di lavoro a supporto;\n\nCiò detto le funzionalità attese sono:\n\n* Dashboard SAL attività in corso\n* Stampa del verbale di audit\n* Strumenti di ricerca delle attività di audit secondo determinati campi\n* Sistema per tracciare lo status della singola attività di audit più rilevanti (started, WIP, completed, reviewed, archived)\n* Meccanismo di approvazione delle attività svolte e “congelamento” delle carte di lavoro.\n* Area di amministrazione per manutenere l’applicativo;\n* Applicazione web, user friendly;\n* Integrazione con altri sistemi (ad es. Car.sci, Active Directory).\n\n\n### Release 0.0.6\n in fase di rilascio\n\n*\tDONE\tHIGH - BUG: automatic audit-number\n*\tDONE\tMEDIUM - Utilizzare la numerazione car.sci per le verifiche\n*\tDONE\tMEDIUM - Automatismo numerazione audit con il cambio di status \"approvato\".\n* \tDONE \tAggiornamento template verbale pdf\n\n### To Do List\n\nAttività di sviluppo in corso:\n\n*\tLOW - Aggiungere alla Dashboard libreria documentazione utile (TDB, audit compliance)\n* \tLOW - BUG: quando si preme sul tasto stampa non deve essere caricata la pagina di dettaglio della carenza.\n*\tLOW\t- All in english language for more visibility\n*\tLOW - Verifica assenza di buchi nella numerazione delle verifiche. (CONTROLLO preliminare per diamante verde)\n* \tMEDIUM - Verifica assegnazione dell'esito per ciascuna verifica (CONTROLLO preliminare per diamante verde)\n*\tMEDIUM - Verifica assenza di buchi nella numerazione delle carenze (CONTROLLO preliminare per diamante verde)\n*\tMEDIUM - Verificare che ogni verifica FAIL sia stata indirizzata ad una carenza (CONTROLLO preliminare per diamante verde)\n* \tLOW - bypassare la fase di insert anche per gli audit di filiale\n*\tLOW - creare variabili di sessioni persistenti (ad es: activityId)\n*\tLOW - meccanismo di upload automatico delle carenze Car.sci\n*\tMEDIUM - analizzare impostazione test di filiale\n*\tLOW - In caso di elminazione di oggetti a cascata vanno eliminati quelli non più necessari\n*\tLOW - utilizzare lo skeen office 2013 per ckeditor\n* \tMEDIUM - bug mancata aggregazione dati importati processo -sottoprocesso.\n*\tMEDIUM - rivedere la sezione VALUTAZIONE (si deve richiedere la valutazione per ciascun rischio esaminato)\n*\tLOW - Migliorare layout di stampa. Integrare la componente server JSreport direttamente nell'AuditTool  \n*\tLOW - funzionalità di ricerca delle attività\n*\tLOW - pubblicare in docs indicazioni sullo svolgimento dei test.\n*\tLOW - arrichire funzionalità dell'admin per:\n        -\teliminare/aggiungere/modificare elementi delle librerie\n        \n \n ### Possibile migliorie (Chiara)\n \n *\tPossibilità di inserire in autonomia la normativa interna.\n\n \n### Analisi funzionale Audit profilazione utenti\n\n Fonti dati:\n\n- Inquadramento del personale in tempo reale (nome cognome e unità organizzativa)\n- Struttura della Banca (unità organizzative e loro relazione)\n- Active Directory (nome utente, enable, ultimo accesso, groups,...)\n\nVerifiche da implementare:\n- tempestivo inquadramento del personale in una u.o.\n- completezza delle informazioni (num. tel., indirizzo mail, ...)\n- tempestiva disabilitazione AD del personale dimesso",
									"object_type": "markdown"
								}
							]
						},
						{
							"name": "audit_execution",
							"type": "page",
							"title": "Workflow attività di audit",
							"components": [
								{
									"name": "audit_execution_menu",
									"type": "menu",
									"class": "nav nav-tabs",
									"items": [
										{
											"title": "Ambito",
											"route": "docs.audit_execution.ambito"
										},
										{
											"title": "Verifiche",
											"route": "docs.audit_execution.verifiche"
										},
										{
											"title": "Carenze",
											"route": "docs.audit_execution.carenze"
										},
										{
											"title": "Executive Summary",
											"route": "docs.audit_execution.ex_summary"
										},
										{
											"title": "Valutazioni",
											"route": "docs.audit_execution.valutazioni"
										}
									],
									"object_type": "menu"
								}
							],
							"text": "Di seguito sono rappresentate diverse le fasi di svolgimento della singola attività di \"Audit\".",
							"pages": [
								{
									"name": "ambito",
									"type": "page",
									"components": [
										{
											"name": "plan",
											"type": "markdown",
											"source": "In questa sezione vengono registrate le informazioni preliminari dell'attività ad esempio:\n    \n    Titolo\n    Numero identiifcazioned dell'attività\n    Auditors\n    Data inizio\n    ....\n    \n     \n\n    \n\n\n    \n    \n\n\n\n\n\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "verifiche",
									"type": "page",
									"components": [
										{
											"name": "fieldwork",
											"type": "markdown",
											"source": "In questa sezione sono inserite le singole attività di verifica svolte, definendo per ciascuna il relativo esito\n\nIl tool fornisce una libreria di potenziali attività da svolgere.\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "carenze",
									"type": "page",
									"components": [
										{
											"name": "issues",
											"type": "markdown",
											"source": "In questa sezione sono registrate le carenze. Il tool consente inoltre di:\n\n    allegare le documenti\n    classificare le carenze  \n    ....\n    \n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "ex_summary",
									"type": "page",
									"components": [
										{
											"name": "executive_summary",
											"type": "markdown",
											"source": "In questa sezione l'auditor è chiamato a formalizzare l'executive summary con la possibilità di allegare evenutali documenti.\n    \n\n\n\n\n\n\n     \n     \n\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "valutazioni",
									"type": "page",
									"components": [
										{
											"name": "scorring",
											"type": "markdown",
											"source": "In questa sezione viene formalizzata la valutazione sintetica dell'attività svolta.\n\n",
											"object_type": "markdown"
										}
									]
								}
							]
						},
						{
							"name": "framework",
							"type": "page",
							"title": "Framework metodologico",
							"components": [
								{
									"name": "framework_menu",
									"type": "menu",
									"class": "nav nav-tabs",
									"items": [
										{
											"title": "Audit universe",
											"route": "docs.framework.audit_universe"
										},
										{
											"title": "Risk Assessmnet",
											"route": "docs.framework.risk_assessmnet"
										},
										{
											"title": "Audit Plan",
											"route": "docs.framework.audit_plan"
										},
										{
											"title": "Esecuzione Audit",
											"route": "docs.framework.esecuzione_audit"
										},
										{
											"title": "Gestione Carenze",
											"route": "docs.framework.gestione_carenze"
										}
									],
									"object_type": "menu"
								}
							],
							"text": "Di seguito sono accenati i punti cardine della metodologia di Audit.",
							"pages": [
								{
									"name": "audit_universe",
									"type": "page",
									"components": [
										{
											"name": "audit_universe_mkdown",
											"type": "markdown",
											"source": "### Audit Universe\n\nLa struttura organizzativa contiene tutti gli elementi operativi, geografici, legali e di prodotto oggetto di audit.\n\nIl perimetro dell’audit è la base dal quale sono sviluppati il risk assessment, il piano di audit annuale e le attività di audit.\n\n** Ruoli coinvolti: RIA **\n\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "risk_assessmnet",
									"type": "page",
									"components": [
										{
											"name": "risk_universe_mkdown",
											"type": "markdown",
											"source": "### Risk Universe\n\nL’attività top-down di Risk Assessment e svolta per valutare il rischio inerente, il sistema dei controlli interni e il rischio residuo di tutti gli elementi individuati nel perimetro di audit.\nIl risultato dell’attività di Risk Assessment è necessario per definire il piano di audit annuale. \n\n** Ruoli coinvolti: RIA **",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "audit_plan",
									"type": "page",
									"components": [
										{
											"name": "audit_plan_markdown",
											"type": "markdown",
											"source": "### Piano di Audit\n\nIl piano di audit annuale è predisposto in base ai risultati dell’attività di Risk Assessment, sulla copertura degli audit passati, le attività dei controlli continuativi e il confronto con le altre strutture di controllo della Banca\n\nIl processo di pianificazione è svolto durante il quarto trimestre ed è finalizzato prima dell’inizio dell’anno successivo.\n\nIl piano di audit consiste di tutti gli audit da svolgersi per ciascuna entità “auditabile” durante il successivo. Auditors e managers sono assegnati con le relative responsabilità.  \n\n** Ruoli coinvolti: RIA **",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "esecuzione_audit",
									"type": "page",
									"components": [
										{
											"name": "esecuzione_audit_markdown",
											"type": "markdown",
											"source": "### Esecuzione audit\n\nLo svolgimento dell’audit si divide in quattro sotto-fasi:\n\n1.\tnotifica dell’audit, \n2.\tpianificazione, \n3.\tlavoro sul campo\n4.\treporting. \n\n** Ruoli coinvolti: Auditor **\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "gestione_carenze",
									"type": "page",
									"components": [
										{
											"name": "gestione_carenze_markdown",
											"type": "markdown",
											"source": "### Gestione Carenze\n\nDurante l’attività di audit, le carenze sono identificate e discusse con il business. Se concordate le carenze sono registrate e documentate nelle carte di lavoro. L’auditor è responsabile per assicurare che le carenze aperte siano risolte in coerenza con l’action plan approvato. L’auditor aggiorna il sistema delle carenze con le attività di follow-up.\n\nNon appena il business chiude la carenza e ne fornisce adeguata evidenza, l’auditor dovrebbe schedulare del tempo per rivedere la documentazione e validare che la carenza è stata rimediata, attraverso addizionali attività di test. Una volta che la carenza è validata l’auditor chiude definitivamente la carenza. \n\n** Ruoli coinvolti: Auditor **\n",
											"object_type": "markdown"
										}
									]
								}
							]
						},
						{
							"name": "controlli_continuativi",
							"type": "page",
							"components": [
								{
									"name": "controlli_continuativi",
									"type": "markdown",
									"source": "# Controlli continuativi\n\nL’attività di monitoraggio / controllo continuativo ha l’obiettivo di contribuire a fornire all’Internal Audit una visione aggiornata di eventuali situazioni problematiche, anche qualora le stesse risultino già note e seguite dalle competenti strutture aziendali.\nIn tale ambito l’Internal Audit valuta eventuali interventi diretti riconducibili a approfondimenti su singole situazioni che, ove è il caso, possono dar luogo a specifiche verifiche di audit (nell’ambito di quanto già programmato, anticipando attività, o effettuando attività non programmate).\n",
									"object_type": "markdown"
								}
							]
						},
						{
							"name": "it_notes",
							"type": "page",
							"components": [
								{
									"name": "it_notes",
									"type": "markdown",
									"source": "### Getting Started on Linux Server (Centos)\n\n1. Installazione distribuzione Linux (Ubunt, Centos,..)\n\n2. Obtain sudo privileges for your accounts. As root Add the following line in /etc/sudoers:\n\t\t<account> ALL=(ALL)   NOPASSWD: ALL\n\n3. Install meteor (curl https://install.meteor.com/ | sh)\n\n4. Install meteor-kitchen (curl https://www.meteorkitchen.com/install | /bin/sh)\n\n5. Install GIT:\n\t\tsudo yum install git\n\n6. Configure Git:\n\t\tgit config --global user.name \"Your Name\"\n\t\tgit config --global user.email \"you@example.com\"\n        \n7. Clone the project:\n\t\tgit clone https://github.com/mttstt/AuditTool.git\n\n8. In order to connect from outside stop the firewall\n\t\tsudo systemctl stop firewalld.service\n\n9. Install node-gyp (non mandatory !):\n\t\tsudo npm install -g node-gyp\n                \n10. Install node (non mandatory !):\n\tfor centos:\n    \tsu\n\t\tcurl --silent --location https://rpm.nodesource.com/setup_8.x | bash -\n\t\tyum -y install nodej\n    \n\n### Getting Started JSReport\n\nJsreport is the application for the PDF file creation.\n\n\n\n1. Install jsreport:\n\t\tsudo npm install jsreport-cli -g\n\n\n2. Configure Jsreport (not required in production enviroment)\n\t\tcd /home/mtt/node_modules/jsreport\n        cp example.config.json dev.config.json\n        nano dev.config.json => \n        \n\t\t    \"tasks\": {\n        \t\t\"strategy\": \"dedicated-process\",\n        \t\t\"timeout\": 10000,\n        \t\t\"allowedModules\": [*]\n    \t\t},\n    \t\t\"scripts\": {\n        \t\t\"allowedModules\": [*],\n        \t\t\"timeout\": 60000\n                \n3. Start Jsreport\n\t\tjsreport init\n\t\tjsreport start\n\n\n4. Connetersi alla porta 5488 fare import del file ZIP di configurazione.\n\n\n    \n\n    \n",
									"object_type": "markdown"
								}
							]
						}
					]
				},
				{
					"name": "dashboard",
					"type": "page",
					"class": "rows",
					"components": [
						{
							"name": "activities",
							"type": "div",
							"class": "col-sm-8 col-md-9 dashboard",
							"components": [
								{
									"name": "activities",
									"type": "data_view",
									"query_name": "activity_all",
									"details_route": "dashboard.detailactivity",
									"details_route_params": [
										{
											"name": "activityId",
											"value": "this._id"
										}
									],
									"item_actions": [
										{
											"name": "print",
											"title": "Stampa PDF",
											"icon_class": "fa fa-print",
											"action_code": "e.preventDefault();\n       \nvar jsreport = require(\"jsreport-browser-client-dist\");\nvar activity = Activities.findOne({_id: this._id});\nvar verifiche = Fieldworks.find({activityId: this._id}).fetch();\nvar carenze = Carenze.find({activityId: this._id}).fetch();\nvar carenzejson = {carenze: []};\n      \ncarenze.map(function(item) {carenzejson.carenze.push(item);});\n      \nvar verifichejson = {verifiche: []};\nverifiche.map(function(item) {verifichejson.verifiche.push(item);});\n           \nvar data =  $.extend(activity,carenzejson);\nvar data =  $.extend(data,verifichejson);\n\nconsole.log('Stampa pdf. Dati:',data);\n      \n        \nMeteor.call('server-ip', function(error, ip) {\n  var ip1='172.17.0.2';\n  console.log(ip1);         \n\nvar request = {\n    template:{\"name\":\"VerbaleAudit\"},\n    \"data\":activity             \n};\n\n//display report in the new tab\njsreport.render('_blank', request);      \n// download\n//jsreport.download('verbale.pdf', request);\n\n           \n// Meteor.call('Print', this._id, function(error, url) {window.open(response); });         \n\t\nreturn false;\n});\n\nreturn false;\n"
										}
									],
									"fields": [
										{
											"name": "numero",
											"title": "Numero",
											"type": "string",
											"default": "*",
											"exportable": true,
											"show_in_insert_form": false
										},
										{
											"name": "tipo",
											"title": "Tipo attività",
											"type": "string",
											"required": true,
											"exportable": true,
											"input": "radio",
											"input_items": [
												{
													"value": "Audit Filiale",
													"title": "Audit Filiale"
												},
												{
													"value": "Audit",
													"title": "Audit"
												},
												{
													"value": "Informativa",
													"title": "Informativa"
												},
												{
													"value": "Altre attività",
													"title": "Altre attività"
												}
											],
											"array_item_type": "object",
											"show_in_update_form": false
										},
										{
											"name": "titolo",
											"title": "Titolo",
											"type": "string",
											"required": true,
											"exportable": true
										},
										{
											"name": "data",
											"title": "Data avvio",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker"
										},
										{
											"name": "auditors",
											"title": "Auditors",
											"type": "array",
											"default": "{{userFullName}}",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "auditors_all",
											"lookup_key": "auditor",
											"lookup_field": "auditor"
										},
										{
											"name": "rischiEsaminati",
											"title": "Principali rischi esaminati",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "rischi_all",
											"lookup_key": "rischio",
											"lookup_field": "rischio",
											"show_in_insert_form": false
										},
										{
											"name": "sci",
											"title": "Valutazione SCI",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "Positiva",
													"title": "Positiva"
												},
												{
													"value": "Parzialmente positiva +",
													"title": "Parzialmente positiva +"
												},
												{
													"value": "Parzialmente positiva",
													"title": "Parzialmente positiva"
												},
												{
													"value": "Parzialmente positiva -",
													"title": "Parzialmente positiva -"
												},
												{
													"value": "Negativa",
													"title": "Negativa"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "datachiusura",
											"title": "Data fine",
											"type": "date",
											"default": "today",
											"format": "DD-MM-YYYY",
											"input": "datepicker",
											"show_in_insert_form": false
										},
										{
											"name": "status",
											"title": "Status",
											"type": "string",
											"default": "Avviato",
											"exportable": true,
											"input": "select",
											"input_items": [
												{
													"value": "Avviato",
													"title": "Avviato"
												},
												{
													"value": "In corso",
													"title": "In corso"
												},
												{
													"value": "Completato",
													"title": "Completato"
												},
												{
													"value": "Archiviato",
													"title": "Archiviato"
												}
											],
											"array_item_type": "object",
											"show_in_insert_form": false,
											"show_in_update_form": false
										}
									],
									"object_type": "data_view"
								}
							],
							"object_type": "div"
						},
						{
							"name": "controlli_continuativi",
							"type": "div",
							"class": "col-sm-4 col-md-3 dashboard",
							"text": "Controlli continuativi - Working in progress",
							"object_type": "div"
						}
					],
					"pages": [
						{
							"name": "detailactivity",
							"type": "page",
							"query_params": [
								{
									"name": "activityId"
								}
							],
							"components": [
								{
									"name": "detailactivity",
									"type": "form",
									"query_name": "activity",
									"mode": "read_only",
									"close_route": "dashboard",
									"object_type": "form"
								}
							],
							"route_params": [
								"activityId"
							]
						}
					],
					"related_queries": [
						{
							"name": "carenza_all"
						},
						{
							"name": "verifiche_all"
						}
					]
				},
				{
					"name": "profile",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-pills nav-stacked",
							"items": [
								{
									"title": "A D Users",
									"route": "profile.a_d_users"
								},
								{
									"title": "Ad Groups",
									"route": "profile.ad_groups"
								}
							],
							"object_type": "menu"
						}
					],
					"pages": [
						{
							"name": "a_d_users",
							"type": "page",
							"components": [
								{
									"name": "profili_view",
									"type": "custom_component",
									"query_name": "all_profili",
									"html": "<template name=\"TEMPLATE_NAME\">\n\t<h1>\n\t\tLista users  Active Directory\n\t</h1>\n\t{{#if all_profili}}\n\t\t{{#each all_profili}}\n\t\t\t<h5>\n\t\t\t\t {{user}} \n\t\t\t</h5>\n\t\t{{/each}}\n\t{{else}}\n\t\t<h3>\n\t\t\tNessun profilo qui :(\n\t\t</h3>\n\t{{/if}}\n\t<button class=\"btn btn-default\" id=\"users\">\n\t\tUsers\n\t</button>\n</template>\n\n",
									"js": "\n\nTemplate.TEMPLATE_NAME.events({\n\t\"click #users\": function(e, t) {\n\t\tMeteor.call(\"ldapquery\", {}, function(e, r) {\n\t\t    if(e) console.log(\"errore:\",e); \n\t\t\tconsole.log(\"query OK\");\n\t\t});      \n\t\t            \n\t}\n});\n\nTemplate.TEMPLATE_NAME.helpers({\n\n});",
									"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\tadusers(e) {\n\t\tMeteor.call(\"ldapquery\", {}, function(e, r) {\n\t\t    if(e) console.log(\"errore:\",e); \n\t\t\tconsole.log(\"query OK\");\n\t\t});      \n\t\t            \n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>\n\t\t\t\t\tLista users  Active Directory\n\t\t\t\t</h1>\n\t\t\t\t{this.all_profili() ? (\n\t\t\t\t\t{\n\t\t\t\t\t\tall_profili.map(function(item, itemIndex) {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<h5 key={itemIndex}>\n\t\t\t\t\t\t\t\t\t {item.user} \n\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t) : (\n\t\t\t\t\t<h3>\n\t\t\t\t\t\tNessun profilo qui :(\n\t\t\t\t\t</h3>\n\t\t\t\t)}\n\t\t\t\t<button className=\"btn btn-default\" id=\"users\" onClick={this.adusers}>\n\t\t\t\t\tUsers\n\t\t\t\t</button>\n\n\t\t\t</div>\n\t\t);\n\t}\n}",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"children": [
													{
														"children": [
															{
																"type": "text",
																"text": "Lista users  Active Directory",
																"object_type": "gas_text"
															}
														],
														"type": "html",
														"element": "h1",
														"object_type": "gas_html"
													},
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"type": "text",
																						"text": " {{user}} ",
																						"object_type": "gas_text"
																					}
																				],
																				"type": "html",
																				"element": "h5",
																				"object_type": "gas_html"
																			}
																		],
																		"type": "loop",
																		"dataset": "all_profili",
																		"object_type": "gas_loop"
																	}
																],
																"type": "condition-true",
																"object_type": "gas_condition_true"
															},
															{
																"children": [
																	{
																		"children": [
																			{
																				"type": "text",
																				"text": "Nessun profilo qui :(",
																				"object_type": "gas_text"
																			}
																		],
																		"type": "html",
																		"element": "h3",
																		"object_type": "gas_html"
																	}
																],
																"type": "condition-false",
																"object_type": "gas_condition_false"
															}
														],
														"type": "condition",
														"condition": "all_profili",
														"object_type": "gas_condition"
													},
													{
														"children": [
															{
																"type": "text",
																"text": "Users",
																"object_type": "gas_text"
															}
														],
														"type": "html",
														"element": "button",
														"attributes": [
															{
																"name": "class",
																"value": "btn btn-default"
															},
															{
																"name": "id",
																"value": "users"
															}
														],
														"events": [
															{
																"type": "event",
																"event": "onclick",
																"handler": "adusers"
															}
														],
														"object_type": "gas_html"
													}
												],
												"type": "template",
												"handlers": [
													{
														"name": "adusers",
														"type": "handler",
														"code": "Meteor.call(\"ldapquery\", {}, function(e, r) {\n    if(e) console.log(\"errore:\",e); \n\tconsole.log(\"query OK\");\n});      \n            "
													}
												]
											}
										]
									},
									"use_gasoline": true,
									"object_type": "custom_component"
								}
							]
						},
						{
							"name": "ad_groups",
							"type": "page"
						}
					]
				}
			]
		},
		"private_zone": {
			"type": "zone",
			"components": [
				{
					"name": "left_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav",
					"items": [
						{
							"title": "Home",
							"route": "home_private",
							"icon_class": "fa fa-home"
						},
						{
							"title": "Controlli continuativi",
							"route": "controlli_continuativi"
						}
					],
					"object_type": "menu"
				},
				{
					"name": "right_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav navbar-right",
					"items": [
						{
							"title": "Admin",
							"route": "admin",
							"icon_class": "fa fa-wrench"
						},
						{
							"title": "{{userEmail}}",
							"icon_class": "fa fa-cog",
							"items": [
								{
									"title": "Settings",
									"route": "user_settings"
								},
								{
									"title": "Logout",
									"route": "logout"
								}
							]
						}
					],
					"object_type": "menu"
				}
			],
			"pages": [
				{
					"name": "home_private",
					"type": "page",
					"title": "Welcome {{userFullName}}!",
					"components": [
						{
							"name": "audit_view",
							"type": "data_view",
							"title": "Elenco attività",
							"query_name": "activities_list",
							"insert_route": "audits.workflow",
							"edit_route": "audit_filiale.workflow",
							"details_route_params": [
								{
									"name": "activityId",
									"value": "this._id"
								}
							],
							"edit_route_params": [
								{
									"name": "activityId",
									"value": "this._id"
								}
							],
							"insert_button_title": "Crea nuova attività",
							"on_item_clicked_code": "Session.set(\"activityId\",this._id);console.log(\"sessione corrente:\",this._id,\" - \",this.tipo);switch(this.tipo) { case \"Audit\": Router.go(\"audits.workflow\", { id: this._id, tipo: this.tipo}); break; case \"Informativa\": Router.go(\"informativa.workflow\", { id: this._id, tipo: this.tipo}); break; case \"Audit Filiale\": Router.go(\"audit_filiale.workflow\", { id: this._id, tipo: this.tipo}); break; }",
							"fields": [
								{
									"name": "titolo",
									"title": "Titolo Audit",
									"type": "string",
									"required": true,
									"exportable": true
								},
								{
									"name": "numero",
									"title": "Numero Audit",
									"type": "string",
									"default": "{{nextAuditNumber}}",
									"exportable": true,
									"show_in_update_form": false
								},
								{
									"name": "auditors",
									"title": "Lista auditors",
									"type": "string",
									"default": "{{userMeteor}}",
									"exportable": true
								},
								{
									"name": "data",
									"title": "Data avvio audit",
									"type": "date",
									"default": "today",
									"format": "DD/MM/YYYY",
									"exportable": true,
									"input": "datepicker"
								},
								{
									"name": "status",
									"title": "Status",
									"type": "string",
									"exportable": true,
									"input": "select",
									"array_item_type": "object",
									"show_in_insert_form": false,
									"show_in_update_form": false
								},
								{
									"name": "filiale",
									"title": "Filiale",
									"type": "string",
									"exportable": true
								}
							],
							"object_type": "data_view"
						}
					],
					"text": "Questa è la tua home page personale, da qui puoi:\n\n1) Avviare un nuovo audit/informativa...\n2) Accedere alle altre attività in corso\n3) altro...",
					"render_subpages": "never"
				},
				{
					"name": "admin",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-stacked nav-pills",
							"items": [
								{
									"title": "Users",
									"route": "admin.users"
								},
								{
									"title": "Config",
									"route": "admin.config"
								}
							],
							"object_type": "menu"
						}
					],
					"roles": [
						"admin"
					],
					"pages": [
						{
							"name": "users",
							"type": "page",
							"components": [
								{
									"name": "view",
									"type": "data_view",
									"title": "Users",
									"query_name": "admin_users",
									"text_if_empty": "No users yet",
									"insert_route": "admin.users.insert",
									"details_route": "admin.users.details",
									"edit_route": "admin.users.edit",
									"details_route_params": [
										{
											"name": "userId",
											"value": "this._id"
										}
									],
									"edit_route_params": [
										{
											"name": "userId",
											"value": "this._id"
										}
									],
									"fields": [
										{
											"name": "profile.name",
											"title": "Name",
											"type": "string"
										},
										{
											"name": "profile.email",
											"title": "E-mail",
											"type": "string"
										},
										{
											"name": "roles",
											"title": "Role",
											"type": "string"
										}
									],
									"object_type": "data_view"
								}
							],
							"pages": [
								{
									"name": "details",
									"type": "page",
									"components": [
										{
											"name": "details_form",
											"type": "form",
											"title": "User details",
											"query_name": "admin_user",
											"mode": "read_only",
											"close_route": "admin.users",
											"back_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string"
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email"
												},
												{
													"name": "roles",
													"title": "Role",
													"type": "string"
												}
											],
											"object_type": "form"
										}
									],
									"route_params": [
										"userId"
									]
								},
								{
									"name": "insert",
									"type": "page",
									"components": [
										{
											"name": "insert_form",
											"type": "form",
											"title": "Add new user",
											"query_name": "users_null",
											"mode": "insert",
											"submit_route": "admin.users",
											"cancel_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string",
													"required": true
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email",
													"required": true
												},
												{
													"name": "password",
													"title": "Password",
													"type": "string",
													"required": true,
													"input": "password"
												}
											],
											"object_type": "form"
										}
									]
								},
								{
									"name": "edit",
									"type": "page",
									"components": [
										{
											"name": "edit_form",
											"type": "form",
											"title": "Edit user",
											"query_name": "admin_user",
											"mode": "update",
											"submit_route": "admin.users",
											"cancel_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string",
													"required": true
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email",
													"required": true
												},
												{
													"name": "roles",
													"title": "Role",
													"type": "array",
													"input": "radio",
													"input_items": [
														{
															"value": "user",
															"title": "User"
														},
														{
															"value": "admin",
															"title": "Admin"
														},
														{
															"value": "blocked",
															"title": "Blocked"
														}
													]
												}
											],
											"object_type": "form"
										}
									],
									"route_params": [
										"userId"
									]
								}
							]
						},
						{
							"name": "config",
							"type": "page",
							"components": [
								{
									"name": "link",
									"type": "div",
									"components": [
										{
											"name": "link_markdown",
											"type": "markdown",
											"source": "\n### Modifica l'editor avanzato (CKEDITOR)\n\nhttp://localhost:5000/samples/index.html\n\n### Modifica Template PDF(JSrepot)\n\nhttp://localhost:5488/",
											"object_type": "markdown"
										}
									],
									"object_type": "div"
								}
							],
							"html": "Modifica l'editor avanzato (CKEDITOR)\n\nhttp://localhost:5000/samples/index.html\n\nModifica Template PDF(JSrepot)\n\nhttp://localhost:5488/",
							"text": "Qui l'amministratore può:\n\n- modificare attività le già archiviate\n\n- modificare le librerie\n\n- ...\n",
							"pages": [
								{
									"name": "page",
									"type": "page",
									"html": "<template name=\"TEMPLATE_NAME\">\n\t<div class=\"page-container\" id=\"content\">\n\t\t<button class=\"btn btn-default\">\n\t\t\tTemplate report Pdf\n\t\t</button>\n\t\t<div>\n\t\t\t<button class=\"btn btn-default\">\n\t\t\t\tConfigura Editor\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</template>\n\n",
									"js": "\n\nTemplate.TEMPLATE_NAME.events({\n\t\"click .btn.btn-default, click #content\": function(e, t) {\n\t\tvar ipserver= onClickButton1;\n\t\tconsole.log ('oo', Meteor.call('server-ip'));\n\t},\n\n\t\"click div\": function(e, t) {\n\t\t\n\t}\n});\n\nTemplate.TEMPLATE_NAME.helpers({\n\n});",
									"jsx": "/*IMPORTS*/\n\nexport class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\ttemplatePdf(e) {\n\t\tvar ipserver= onClickButton1;\n\t\tconsole.log ('oo', Meteor.call('server-ip'));\n\t}\n\n\tckeditor(e) {\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"page-container\" id=\"content\" onClick={this.templatePdf}>\n\t\t\t\t<button className=\"btn btn-default\" onClick={this.templatePdf}>\n\t\t\t\t\tTemplate report Pdf\n\t\t\t\t</button>\n\t\t\t\t<div onClick={this.ckeditor}>\n\t\t\t\t\t<button className=\"btn btn-default\">\n\t\t\t\t\t\tConfigura Editor\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport const TEMPLATE_NAMEContainer = createContainer(function(props) {\n\t/*SUBSCRIPTIONS*/\n}, TEMPLATE_NAME);",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"type": "text",
																		"text": "Template report Pdf",
																		"object_type": "gas_text"
																	}
																],
																"type": "html",
																"element": "button",
																"attributes": [
																	{
																		"name": "class",
																		"value": "btn btn-default"
																	}
																],
																"events": [
																	{
																		"type": "event",
																		"event": "onclick",
																		"handler": "templatePdf"
																	}
																],
																"object_type": "gas_html"
															},
															{
																"children": [
																	{
																		"children": [
																			{
																				"type": "text",
																				"text": "Configura Editor",
																				"object_type": "gas_text"
																			}
																		],
																		"type": "html",
																		"element": "button",
																		"attributes": [
																			{
																				"name": "class",
																				"value": "btn btn-default"
																			}
																		],
																		"object_type": "gas_html"
																	}
																],
																"type": "html",
																"events": [
																	{
																		"type": "event",
																		"event": "onclick",
																		"handler": "ckeditor"
																	}
																],
																"object_type": "gas_html"
															}
														],
														"type": "html",
														"attributes": [
															{
																"name": "class",
																"value": "page-container"
															},
															{
																"name": "id",
																"value": "content"
															}
														],
														"events": [
															{
																"type": "event",
																"event": "onclick",
																"handler": "templatePdf"
															}
														],
														"object_type": "gas_html"
													}
												],
												"type": "template",
												"handlers": [
													{
														"name": "templatePdf",
														"type": "handler",
														"code": "var ipserver= onClickButton1;\nconsole.log ('oo', Meteor.call('server-ip'));"
													},
													{
														"name": "ckeditor",
														"type": "handler"
													}
												]
											}
										]
									},
									"use_gasoline": true,
									"user_defined_template": true
								}
							]
						}
					]
				},
				{
					"name": "user_settings",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-stacked nav-pills",
							"items": [
								{
									"title": "Profile",
									"route": "user_settings.profile"
								},
								{
									"title": "Change password",
									"route": "user_settings.change_pass"
								}
							],
							"object_type": "menu"
						}
					],
					"roles": [
						"user",
						"admin"
					],
					"pages": [
						{
							"name": "profile",
							"type": "page",
							"components": [
								{
									"name": "edit_form",
									"type": "form",
									"title": "Edit your profile",
									"query_name": "current_user_data",
									"mode": "update",
									"submit_route": "user_settings.profile",
									"fields": [
										{
											"name": "profile.name",
											"title": "Name",
											"type": "string",
											"required": true
										},
										{
											"name": "profile.email",
											"title": "E-mail",
											"type": "email",
											"required": true
										},
										{
											"name": "profile.facebook",
											"title": "Facebook URL",
											"type": "string"
										},
										{
											"name": "profile.google",
											"title": "Google+ URL",
											"type": "string"
										},
										{
											"name": "profile.twitter",
											"title": "Twitter ID",
											"type": "string"
										},
										{
											"name": "profile.website",
											"title": "Website URL",
											"type": "string"
										}
									],
									"object_type": "form"
								}
							]
						},
						{
							"name": "change_pass",
							"type": "page",
							"template": "change_pass"
						}
					]
				},
				{
					"name": "logout",
					"type": "page",
					"template": "logout"
				},
				{
					"name": "audits",
					"type": "page",
					"template_rendered_code": "//console.log('audits==>', Session.get( \"activityId\")); \n",
					"html": "<template name=\"TEMPLATE_NAME\">\n\n <ul class=\"list-group\">\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-hourglass-start fa-fw\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-cogs fa-fw\" aria-hidden=\"true\"></i></a></li> \n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-diamond fa-3x\" style=\"color:blue;\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-check fa-fw\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-lock fa-fw\" aria-hidden=\"true\"></i></a></li>  \n</ul>\n  \n</template>\n\n",
					"pages": [
						{
							"name": "workflow",
							"type": "page",
							"query_params": [
								{
									"name": "activityId",
									"value": "Session.get('activityId');"
								}
							],
							"components": [
								{
									"name": "side_menu",
									"type": "menu",
									"class": "nav nav-stacked nav-pills",
									"items": [
										{
											"title": "Ambito",
											"route": "audits.workflow.ambito"
										},
										{
											"title": "Verifiche",
											"route": "audits.workflow.verifiche"
										},
										{
											"title": "Carenze",
											"route": "audits.workflow.carenze"
										},
										{
											"title": "Ex. summary",
											"route": "audits.workflow.exsummary"
										},
										{
											"title": "Valutazioni",
											"route": "audits.workflow.valutazioni"
										}
									],
									"object_type": "menu"
								},
								{
									"name": "status",
									"type": "custom_component",
									"dest_position": "top",
									"html": "<template name=\"TEMPLATE_NAME\">\n\n<div class=\"divright\">\n   <ul class=\"list-group\">\n    <li class=\"list-group-item\" title=\"Status: Avviato\"><i class=\"fa fa-hourglass-start {{av}}\" aria-hidden=\"true\"></i></li>\n    <li class=\"list-group-item\" title=\"Status: In corso\"><i class=\"fa fa-cogs {{in}}\" aria-hidden=\"true\"></i></li> \n    <li class=\"list-group-item\" title=\"Status: Completato\"><i class=\"fa fa-diamond {{co}}\" aria-hidden=\"true\"></i></li>\n    <li class=\"list-group-item\" title=\"Status: Approvato\"><i class=\"fa fa-check {{ap}}\" aria-hidden=\"true\"></i></li>\n    <li class=\"list-group-item\" title=\"Status: Archiviato\"><i class=\"fa fa-lock {{ar}}\" aria-hidden=\"true\"></i></li>  \n  </ul>\n </div>  \n</template>\n",
									"js": "Template.TEMPLATE_NAME.events({  \n  \"click .divright\": function(event) {\n    event.preventDefault();\n    \n    //console.log($(event.target).attr(\"class\"));\n    var x = $(event.target).attr(\"class\");\n    if (x == \"fa fa-diamond suggested\") {\n        bootbox.dialog({\n                message: \"Vuoi modificare lo status in Completato? Sei sicuro?\",\n                title: \"Completato\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Si\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Completato\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activityId'),values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }        \n\tif (x == \"fa fa-check suggested\") {\n           bootbox.dialog({\n                message: \"Vuoi modificare lo status in Approvato? Sei sicuro?\",\n                title: \"Approvato\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Si\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Approvato\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activityId'),values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }\n    if (x == \"fa fa-lock suggested\") {\n           bootbox.dialog({\n                message: \"Vuoi archiviare definitiv amente l'audit? Sei sicuro?\",\n                title: \"Approvato\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Si\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Archiviato\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activityId'),values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }    \n    \n  }\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n    \"av\": function() {\n    var x = Activities.findOne({'_id': Session.get('activityId')}).status;\n    return  ( x === \"Avviato\") ? \"selected\" : \"not-selected\";\n    },\n    \"in\": function() {\n    var x = Activities.findOne({'_id': Session.get('activityId')}).status;\n    return ( x === \"In corso\") ? \"selected\" : \"not-selected\";\n    },\n    \"co\": function() {\n    var x = Activities.findOne({'_id': Session.get('activityId')}).status;\n    var val;\n\tif(x == \"Completato\") { val = \"selected\"; } else { val = \"not-selected\"; }\n    if (Activities.findOne({'_id': Session.get('activityId')}).nextreadystatus && x==\"In corso\") { val = \"suggested\"; } \n    return val;\n    },\n    \"ap\": function() {\n    var x = Activities.findOne({'_id': Session.get('activityId')}).status;\n    var val;\n\tif(x == \"Approvato\") { val = \"selected\";} else { val = \"not-selected\"; }\n    if (Activities.findOne({'_id': Session.get('activityId')}).nextreadystatus && x==\"Completato\" && Users.isAdmin(Meteor.userId())) { val = \"suggested\"; } \n    return val;\n    },\n    \"ar\": function() {\n    var x = Activities.findOne({'_id': Session.get('activityId')}).status;\n    var val;\n\tif(x == \"Archiviato\") { val = \"selected\";} else { val = \"not-selected\"; }\n    if (Activities.findOne({'_id': Session.get('activityId')}).nextreadystatus && x==\"Approvato\") { val = \"suggested\"; } \n    return val;\n    }\n});\n",
									"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"type": "template"
											}
										]
									},
									"object_type": "custom_component"
								}
							],
							"html": "<template name=\"TEMPLATE_NAME\">\n\n <ul class=\"list-group\">\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-hourglass-start fa-fw\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-cogs fa-fw\" aria-hidden=\"true\"></i></a></li> \n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-diamond fa-3x\" style=\"color:blue;\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-check fa-fw\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-lock fa-fw\" aria-hidden=\"true\"></i></a></li>  \n</ul>\n  \n</template>\n\n\n",
							"pages": [
								{
									"name": "ambito",
									"type": "page",
									"title": "{{title}}",
									"title_icon_class": "fa fa-university",
									"helpers_code": "'title': function() { if (Activities.findOne({_id: Session.get('activityId')}))  {return Activities.findOne({_id: Session.get('activityId')}).numero + Activities.findOne({_id: Session.get('activityId')}).titolo}}\n",
									"query_name": "activity",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId');"
										}
									],
									"components": [
										{
											"name": "ambito",
											"type": "form",
											"class": "row",
											"query_name": "activity",
											"query_params": [
												{
													"name": "activityId",
													"value": "Session.get('activityId')"
												}
											],
											"mode": "update",
											"submit_route": "audits.workflow.ambito",
											"submit_button_title": "Salva",
											"fields": [
												{
													"name": "status",
													"title": "Status",
													"type": "string",
													"exportable": true,
													"input": "select",
													"input_items": [
														{
															"value": "Avviato",
															"title": "Avviato"
														},
														{
															"value": "In corso",
															"title": "In corso"
														},
														{
															"value": "Completato",
															"title": "Completato"
														},
														{
															"value": "Archiviato",
															"title": "Archiviato"
														}
													],
													"array_item_type": "object",
													"show_in_insert_form": false,
													"show_in_update_form": false
												},
												{
													"name": "tipo",
													"title": "Tipo attività",
													"type": "string",
													"required": true,
													"exportable": true,
													"input": "radio",
													"input_items": [
														{
															"value": "Audit Filiale",
															"title": "Audit Filiale"
														},
														{
															"value": "Audit",
															"title": "Audit"
														},
														{
															"value": "Informativa",
															"title": "Informativa"
														},
														{
															"value": "Altre attività",
															"title": "Altre attività"
														}
													],
													"array_item_type": "object",
													"show_in_update_form": false
												},
												{
													"name": "titolo",
													"title": "Titolo Audit",
													"type": "string",
													"required": true,
													"exportable": true
												},
												{
													"name": "obiettivo",
													"title": "Obiettivo di Audit",
													"type": "string",
													"exportable": true,
													"input": "textarea",
													"show_in_insert_form": false
												},
												{
													"name": "areeRischio",
													"title": "Principali aree di rischio interessate (ICAAP)",
													"type": "array",
													"exportable": true,
													"input": "select-multiple",
													"lookup_query_name": "rischi_all",
													"lookup_key": "ICAAP",
													"lookup_field": "ICAAP",
													"show_in_insert_form": false,
													"show_in_update_form": false
												},
												{
													"name": "rischiEsaminati",
													"title": "Principali rischi esaminati",
													"type": "array",
													"exportable": true,
													"input": "select-multiple",
													"input_group_class": "col-sm-6 col-md-6",
													"lookup_query_name": "rischi_all",
													"lookup_key": "rischio",
													"lookup_field": "rischio",
													"show_in_insert_form": false
												},
												{
													"name": "strutture",
													"title": "Strutture coinvolte",
													"type": "array",
													"exportable": true,
													"input": "select-multiple",
													"input_group_class": "col-sm-6 col-md-6",
													"lookup_query_name": "strutture_all",
													"lookup_key": "uo",
													"lookup_field": "uo",
													"show_in_insert_form": false
												},
												{
													"name": "numero",
													"title": "Numero Audit",
													"type": "string",
													"default": "{{nextAuditNumber}}",
													"exportable": true,
													"show_in_update_form": false
												},
												{
													"name": "normativeint",
													"title": "Riferimenti normativa interna",
													"type": "array",
													"input": "select-multiple",
													"input_group_class": "col-sm-6 col-md-6",
													"lookup_query_name": "normativeint",
													"lookup_key": "norma",
													"lookup_field": "norma",
													"show_in_insert_form": false
												},
												{
													"name": "normativeext",
													"title": "Riferimenti normativa esterna",
													"type": "array",
													"input": "select-multiple",
													"input_group_class": "col-sm-6 col-md-6",
													"lookup_query_name": "normativeext",
													"lookup_key": "norma",
													"lookup_field": "norma",
													"show_in_insert_form": false
												},
												{
													"name": "processi",
													"title": "Processi",
													"type": "array",
													"input": "select-multiple",
													"input_group_class": "col-sm-6 col-md-6",
													"lookup_query_name": "processi",
													"lookup_key": "processo",
													"lookup_field": "processo",
													"show_in_insert_form": false
												},
												{
													"name": "sottoprocessi",
													"title": "Sotto Processi",
													"type": "array",
													"input": "select-multiple",
													"input_group_class": "col-sm-6 col-md-6",
													"lookup_query_name": "sottoprocessi",
													"lookup_key": "sottoprocesso",
													"lookup_field": "sottoprocesso",
													"show_in_insert_form": false
												},
												{
													"name": "auditors",
													"title": "Auditors",
													"type": "array",
													"default": "{{userMeteor}}",
													"required": true,
													"exportable": true,
													"input": "select-multiple",
													"input_group_class": "col-sm-6 col-md-6",
													"lookup_query_name": "auditors_all",
													"lookup_key": "auditor",
													"lookup_field": "auditor"
												},
												{
													"name": "data",
													"title": "Data avvio audit",
													"type": "date",
													"default": "today",
													"format": "DD/MM/YYYY",
													"exportable": true,
													"input": "datepicker",
													"input_group_class": "col-sm-6 col-md-6"
												},
												{
													"name": "filiale",
													"title": "Filiale",
													"type": "string",
													"input": "select",
													"lookup_query_name": "filiali_all",
													"lookup_key": "filiale",
													"lookup_field": "filiale"
												}
											],
											"object_type": "form"
										}
									],
									"template_rendered_code": " ",
									"html": "<template name=\"TEMPLATE_NAME\">\n\n<div class=\"divright\">\n   <ul class=\"list-group\">\n    <li class=\"list-group-item\" title=\"Status: Avviato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-hourglass-start not-selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: In lavorazione\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-cogs not-selected\" aria-hidden=\"true\"></i></a></li> \n    <li class=\"list-group-item\" title=\"Status: Completato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-diamond selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: Approvato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-check not-selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: Archiviato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-lock not-selected\" aria-hidden=\"true\"></i></a></li>  \n  </ul>\n </div>  \n</template>\n"
								},
								{
									"name": "verifiche",
									"type": "page",
									"title": "{{title}}",
									"title_icon_class": "fa fa-database",
									"helpers_code": "'title': function() { return Activities.findOne({_id: Session.get('activityId')}).numero + Activities.findOne({_id: Session.get('activityId')}).titolo}\n",
									"query_name": "activity",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId');"
										}
									],
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"query_name": "singola_attivita_list",
											"query_params": [
												{
													"name": "singolaAttivitaId",
													"value": "Session.get('activityId')"
												}
											],
											"text_if_empty": "Nessuna verifica",
											"insert_route": "audits.workflow.fieldworks.update",
											"details_route": "audits.workflow.fieldworks.update",
											"insert_route_params": [
												{
													"name": "singolaAttivitaId",
													"value": "this._id"
												}
											],
											"details_route_params": [
												{
													"name": "singolaAttivitaId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "singolaAttivitaId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Aggiungi verifica",
											"object_type": "data_view"
										}
									],
									"template_rendered_code": "Session.set('titleVerifica','');\nSession.set('descriptionVerifica','');",
									"pages": [
										{
											"name": "update",
											"type": "page",
											"query_name": "singola_attivita",
											"components": [
												{
													"name": "form",
													"type": "form",
													"class": "col-sm-8 col-md-9",
													"title": "Creazione di una nuova verifica",
													"helpers_code": "\"nextAttivitaNumber\": function() {\n  var max = 0;\n  var attivitaNumbers = Fieldworks.find({activityId: Session.get('activityId')}, {fields: {attivitaId:1}}).fetch();\n  _.each(attivitaNumbers, function(doc) { var intNum = parseInt(doc.attivitaId);\n                                                                               \tif(!isNaN(intNum) && intNum > max) max = intNum; });\n                                                                              return (max + 1);\n                                                                               \t},\n'singola_attivita':  function() { \n\tif (Session.get('titleVerifica'))\n\t\t\t{var x = ({\"titolo\":Session.get('titleVerifica'),\"obiettivo\":Session.get('descriptionVerifica')});return x;}\n\telse {return Fieldworks.findOne({_id:this.params.singolaAttivitaId})};}\n",
													"query_name": "singola_attivita",
													"mode": "update",
													"submit_route": "audits.workflow.verifiche",
													"submit_button_title": "Salva",
													"fields": [
														{
															"name": "numero",
															"title": "Numero",
															"type": "string",
															"default": "{{nextVerificaNumber}}",
															"show_in_dataview": false,
															"show_in_insert_form": false,
															"show_in_update_form": false
														},
														{
															"name": "titolo",
															"title": "Titolo verifica",
															"type": "string",
															"default": "{{titleVerifica}}",
															"required": true
														},
														{
															"name": "obiettivo",
															"title": "Obiettivo verifica",
															"type": "string",
															"default": "{{descriptionVerifica}}",
															"input": "textarea"
														},
														{
															"name": "descrizione",
															"title": "Descrizione verifica",
															"type": "string",
															"input": "textarea",
															"show_in_dataview": false,
															"show_in_insert_form": false
														},
														{
															"name": "activityId",
															"title": "ActivityId",
															"type": "string",
															"show_in_dataview": false,
															"show_in_insert_form": false,
															"show_in_update_form": false,
															"show_in_read_only_form": false
														},
														{
															"name": "esito",
															"title": "Esito",
															"type": "string",
															"input": "select",
															"input_items": [
																{
																	"value": "null"
																},
																{
																	"value": "fail",
																	"title": "FAIL"
																},
																{
																	"value": "pass",
																	"title": "PASS"
																}
															],
															"show_in_insert_form": false
														}
													],
													"object_type": "form"
												},
												{
													"name": "div",
													"type": "div",
													"class": "col-sm-4 col-md-3",
													"components": [
														{
															"name": "attachments",
															"type": "custom_component",
															"query_name": "files_all",
															"html": "<template name=\"TEMPLATE_NAME\">\n <br><br>\n  \n\t<div id=\"dropzone\" class=\"panel panel-default dropzone\">\n\t\t<div class=\"panel-heading no-padding\">\n\t\t\t<h3 class=\"panel-title\">\n\t\t\t\tAllegati\n\t\t\t\t<label>\n\t\t\t\t\t<i class=\"fa fa-cloud-upload fa-2x\" aria-hidden=\"true\">\n\t\t\t\t\t</i>\n\t\t\t\t\t<input name=\"files\" id=\"file\" multiple style=\"display: none;\" />\n\t\t\t\t</label>\n\t\t\t</h3>\n\t\t</div>\n      \n      \n\t<div class=\"panel-body no-padding\">\n\t\t\t<ul class=\"list-group no-padding\">\n\t\t\t\t{{#each allegati}}\n\t\t\t\t<li class=\"list-group-item well well-sm no-padding\">\n\t\t\t\t\t<div class=\"row\">\n\n                        <div class=\"col-md-6 no-padding\">\n                            {{this.name}}\n                        </div>\n\n                        <div class=\"col-md-6 no-padding\"><span class=\"pull-right no-padding\">\n                            <a href=\"{{this.url download=true}}\" class=\"btnDownload\" target=\"_parent\">\n                                <i class=\"fa fa-cloud-download\" aria-hidden=\"true\">\n                                </i>\n                            </a>\n                            <label>\n                                <i class=\"fa fa-trash-o\" style=\"color:red; cursor: pointer;\" aria-hidden=\"true\">\n                                </i>\n                                <input type=\"button\" value=\"Remove\" class=\"btnRemove\" style=\"display: none;\" />\n                            </label>\n                            </span></div>\n                     </div>\n\t\t\t\t</li>\n\t\t\t\t{{else}}No files uploaded. {{/each}}\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n  </template>",
															"js": "Template.TEMPLATE_NAME.created = function() {\n\n};\n\nTemplate.TEMPLATE_NAME.destroyed = function() {\n\n};\n\nTemplate.TEMPLATE_NAME.rendered = function() {\n  // neccesary to overwrite the input-file plugin bootstrap\n  $(\"input[id='file']\").file();\n\n};\n\n\nTemplate.TEMPLATE_NAME.helpers({\n\t\"allegati\": function() {\n     // console.log('=>',Files.find()); \n\treturn Files.find({'metadata.activityId': Session.get('activityId'), 'metadata.section': 'fieldwork', 'metadata.carenza': Fieldworks.findOne()._id}).fetch();\n\t}\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n  'change #files': function(event, temp) {\n      FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);\n        fileObj.metadata = { owner: Meteor.userId(), activityId: Session.get('activityId'), section: 'fieldwork', carenza: Fieldworks.findOne()._id};\n       // console.log(Session.get('activityId'),Meteor.userId());\n        Files.insert(fileObj);\n      });\n    },\n  \n    'dropped #dropzone': function(event, temp) {\n        FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);\n        fileObj.metadata = { owner: Meteor.userId(), activityId: Session.get('activityId'), section: 'fieldwork',carenza: Fieldworks.findOne()._id};\n        var id = Files.insert(fileObj);\n       //console.log(Session.get('activityId'),Meteor.userId());\n      });\n    },\n  \n    'click .btnRemove': function(event, temp) {    \n\t\tevent.preventDefault();\n\t\tvar self = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Elimino l'allegato definitivamente?\",\n\t\t\ttitle: \"Attenzione cancellazione\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Si\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n                      COLLECTION_VAR.remove({ _id: self._id });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n    }\n});\n\n",
															"jsx": "export const TEMPLATE_NAME = React.createClass({\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});\n",
															"object_type": "custom_component"
														},
														{
															"name": "collapse",
															"type": "custom_component",
															"query_name": "libtest",
															"html": "<template name=\"TEMPLATE_NAME\">\n\n \t<div class=\"panel-group\" id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\n      \t{{#each a in area}}\n\t\t<div class=\"panel panel-default\">\n\t\t\t<div class=\"panel-heading\" role=\"tab\" id=\"heading\">\n\t\t\t\t<h4 class=\"panel-title\">\n\t\t\t\t\t<a role=\"button\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#{{a.area}}\" aria-expanded=\"true\" aria-controls=\"{{a.area}}\">\n\t\t\t\t\t\t{{a.area}}\n\t\t\t\t\t</a>\n\t\t\t\t</h4>\n\t\t\t</div>\n\n\t\t\t<div id=\"{{a.area}}\" class=\"panel-collapse collapse\" role=\"tabpanel\" aria-labelledby=\"heading\">\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t{{#each verifica area a.area }}\n\t\t\t\t\t<h6><p class=\"area\" name=\"{{this}}\">\n\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t{{this}}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p></h6>\n\t\t\t\t\t{{/each}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n      \t{{/each}}\n\t</div>\n</template>\n",
															"js": "Template.TEMPLATE_NAME.created = function() {\n\n};\n\nTemplate.TEMPLATE_NAME.destroyed = function() {\n\n};\n\nTemplate.TEMPLATE_NAME.rendered = function() {\n\n};\n\n\nTemplate.TEMPLATE_NAME.helpers({\n\t\"area\": function() {\n\t\tvar myArray = Libtest.find().fetch();\n\t\tvar groupby = _.groupBy(myArray, function(d){ return d.area; });\n\t\tvar map =  _.map(groupby, function(value, key) {return { \"area\": key, \"libreria\": _.pluck(value, 'libreria') }; });\n\t\treturn map;\n\t}\n});\n\n\nTemplate.registerHelper( 'verifica', ( lib, area ) => {\n\t verifiche = _.findWhere(lib,{\"area\": area });\n\t//console.log('verifica',verifiche)\n\treturn verifiche.libreria;\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n\t'click .area': function(e, t) {\n\t\tvar libreria = this.valueOf();\n\t\tSession.set('titleVerifica',libreria);\n\t\tvar description = Libtest.findOne({\"libreria\": libreria}).descrizione;\n\t\tSession.set('descriptionVerifica',description);      \n\t}\n});\n",
															"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});",
															"gasoline": {
																"type": "gasoline",
																"templates": [
																	{
																		"name": "TEMPLATE_NAME",
																		"type": "template"
																	}
																]
															},
															"object_type": "custom_component"
														}
													],
													"object_type": "div"
												}
											],
											"template_rendered_code": "Session.set('titleVerifica','');\nSession.set('descriptionVerifica','');",
											"route_params": [
												"singolaAttivitaId"
											],
											"related_queries": [
												{
													"name": "activity",
													"params": [
														{
															"name": "activityId",
															"value": "Session.get('activityId')"
														}
													]
												}
											],
											"force_yield_subpages": true
										}
									]
								},
								{
									"name": "carenze",
									"type": "page",
									"title": "{{title}}",
									"title_icon_class": "fa fa-bomb",
									"helpers_code": "'title': function() { return Activities.findOne({_id: Session.get('activityId')}).numero +  Activities.findOne({_id: Session.get('activityId')}).titolo}\n",
									"query_name": "activity",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId');"
										}
									],
									"template": "page_subcontent_tabnav",
									"pages": [
										{
											"name": "carenze",
											"type": "page",
											"query_name": "carenza_all",
											"components": [
												{
													"name": "view",
													"type": "data_view",
													"query_name": "carenze",
													"query_params": [
														{
															"name": "activityId",
															"value": "Session.get('activityId');"
														}
													],
													"text_if_empty": "Nessuna carenza",
													"insert_route": "audits.workflow.carenze.insert",
													"details_route": "audits.workflow.carenze.edit",
													"details_route_params": [
														{
															"name": "carenzaId",
															"value": "this._id"
														}
													],
													"edit_route_params": [
														{
															"name": "carenzaId",
															"value": "Session.get('activityId')"
														}
													],
													"insert_button_title": "Aggiungi carenza",
													"object_type": "data_view"
												}
											]
										},
										{
											"name": "insert",
											"type": "page",
											"components": [
												{
													"name": "insert",
													"type": "form",
													"title": "Aggiungi carenza",
													"helpers_code": "\"nextCarenzaNumber\": function() { \n    \n  function pad(num, size) {\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n  };\n  \n  var max = 0;\n  var carenzaNumbers = Carenze.find({activityId: Session.get('activityId')}, {fields: {carenzaId:1}}).fetch();\n  _.each(carenzaNumbers, function(doc)\t{var intNum = parseInt(doc.carenzaId.split('_')[3]);if(!isNaN(intNum) && intNum > max) max = intNum;});                 \n  \t\t\t\t\t\t\t\t\t\tnumAudit = (Activities.findOne({_id:Session.get('activityId')}).numero).split('/')[0];\t\n\t\t\t\t\t\t\t\t\t\treturn \"IA_\"+moment().format('YY')+\"_0\"+pad(numAudit,2)+\"_\"+(max + 1)+\"*\";\n\t\t\t\t\t\t\t\t\t\t}\n",
													"query_name": "carenza_null",
													"mode": "insert",
													"submit_route": "audits.workflow.carenze",
													"cancel_route": "audits.workflow.carenze",
													"submit_button_title": "Crea una nuova carenza",
													"submit_route_params": [
														{
															"name": "activityId",
															"value": "this.params.activityId"
														}
													],
													"cancel_route_params": [
														{
															"name": "activityId",
															"value": "this.params.activityId"
														}
													],
													"hidden_fields": [
														{
															"name": "activityId",
															"value": "Session.get('activityId')"
														}
													],
													"object_type": "form"
												}
											]
										},
										{
											"name": "edit",
											"type": "page",
											"components": [
												{
													"name": "edit",
													"type": "form",
													"query_name": "carenza",
													"mode": "update",
													"submit_route": "audits.workflow.carenze",
													"submit_route_params": [
														{
															"name": "activityId",
															"value": "this._id"
														}
													],
													"object_type": "form"
												}
											],
											"route_params": [
												"carenzaId"
											]
										}
									],
									"force_yield_subpages": true
								},
								{
									"name": "exsummary",
									"type": "page",
									"title": "{{title}}",
									"title_icon_class": "fa fa-edit",
									"helpers_code": "'title': function() { return Activities.findOne({_id: Session.get('activityId')}).numero +  Activities.findOne({_id: Session.get('activityId')}).titolo}\n",
									"query_name": "activity",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId');"
										}
									],
									"components": [
										{
											"name": "edit_div",
											"type": "div",
											"components": [
												{
													"name": "edit",
													"type": "custom_component",
													"query_name": "activities_list",
													"html": "<template name=\"TEMPLATE_NAME\">\n\n\t<script> var CKEDITOR_BASEPATH = '/'; </script>\n    <textarea name=\"exsum\" id=\"exsum\"></textarea>\n\n</template>",
													"js": "Template.TEMPLATE_NAME.created = function() { };\n\nTemplate.TEMPLATE_NAME.destroyed = function() {};\n\nTemplate.TEMPLATE_NAME.rendered = function() {\n\t$.when(\n\t\t$.getScript(\"/ckeditor.js\")\n\t).done(function(){\n      \tCKEDITOR.timestamp= +new Date; //obbliga il browser a fare refresh\n\t\tCKEDITOR.replace( 'exsum', {\n\t\t\ton: {\tinstanceReady: function( evt ) {\n\t\t\t\t\t\tvar exsum = evt.editor.name;\t\t\t\t\t\t\n\t\t\t\t\t\tCKEDITOR.instances.exsum.setData(Activities.findOne({ _id: Session.get('activityId')}).memo);\n\t\t\t\t\t\tCKEDITOR.instances.exsum.focus();\n\t\t\t\t\t\tvar save_timeout;                      \n\n\t\t\t\t\t\tsave_data = function() {                            \n\t\t\t\t\t\t\tclearTimeout(save_timeout);\n   \n\t\t\t\t\t\t\t//Meteor.call(\"ExSumUpdate\", CKEDITOR.instances.exsum.getData(),Session.get('activityId'), function(e, r){if(e){console.log('Error',e);}});\n                            var data = {};\n                          \tdata.memo = CKEDITOR.instances.exsum.getData();\n                          \tMeteor.call(\"activitiesUpdate\", Session.get('activityId'), data, function(e, r){if(e){console.log('Error',e);}});\n\n\t\t\t\t\t\t};\n                      \n\t\t\t\t\t\tCKEDITOR.instances.exsum.on('change',  function() {\n\t\t\t\t\t\t\tclearTimeout(save_timeout);\n\t\t\t\t\t\t\tsave_timeout = setTimeout(save_data, 2000);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});   \n          \n\t});      \n};\n\n\nTemplate.TEMPLATE_NAME.helpers({});\n\n  \nTemplate.TEMPLATE_NAME.events({});\n\n",
													"jsx": "export const TEMPLATE_NAME = React.createClass({\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});\n",
													"object_type": "custom_component"
												}
											],
											"object_type": "div"
										}
									]
								},
								{
									"name": "valutazioni",
									"type": "page",
									"title": "{{title}}",
									"title_icon_class": "fa fa-balance-scale",
									"helpers_code": "'title': function() { return Activities.findOne({_id: Session.get('activityId')}).numero + Activities.findOne({_id: Session.get('activityId')}).titolo}\n",
									"query_name": "activities_list",
									"components": [
										{
											"name": "scoring",
											"type": "form",
											"query_name": "activity",
											"query_params": [
												{
													"name": "activityId",
													"value": "Session.get('activityId');"
												}
											],
											"mode": "update",
											"submit_route": "audits.workflow.valutazioni",
											"submit_button_title": "Salva",
											"fields": [
												{
													"name": "sci",
													"title": "Valutazione SCI",
													"type": "string",
													"input": "select",
													"input_items": [
														{
															"value": "Positiva",
															"title": "Positiva"
														},
														{
															"value": "Parzialmente positiva +",
															"title": "Parzialmente positiva +"
														},
														{
															"value": "Parzialmente positiva",
															"title": "Parzialmente positiva"
														},
														{
															"value": "Parzialmente positiva -",
															"title": "Parzialmente positiva -"
														},
														{
															"value": "Negativa",
															"title": "Negativa"
														}
													],
													"show_in_insert_form": false
												},
												{
													"name": "rischioResiduo",
													"title": "Valutazione rischio residuo",
													"type": "string",
													"input": "select",
													"input_items": [
														{
															"value": "Alto",
															"title": "Alto"
														},
														{
															"value": "Medio",
															"title": "Medio"
														},
														{
															"value": "Basso",
															"title": "Basso"
														},
														{
															"value": "Non significativo",
															"title": "Non significativo"
														}
													],
													"show_in_insert_form": false
												},
												{
													"name": "datachiusura",
													"title": "Data fine Audit",
													"type": "date",
													"default": "today",
													"format": "DD/MM/YYYY",
													"input": "datepicker",
													"show_in_insert_form": false
												}
											],
											"object_type": "form"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "controlli_continuativi",
					"type": "page"
				}
			]
		},
		"server_startup_code": "var fs = require(\"fs\");\n\nvar path = \"/tmp/files/lib/\";\nconsole.log('System:', process.env.OS);\nvar windows = process.env.OS == 'Windows_NT' ? true : false;\nif (windows) {path = \"C://Users//matteo//Documents//GitHub//AuditTool//files//lib//\";}\n\n\n// crea Account iniziale con ruolo admin\nif (Users.find().count() === 0) {\n    var v = {};\n\tvar profile = {};\n\tv.email = \"ruggero.miceli@bancaifis.it\";\n\tprofile.name = \"Ruggero Miceli\";\n\tv.profile = profile;\n    v.roles = [\"user\",\"admin\"];\n\tv.password = \"admin\";\n\tconsole.log (\"Account created:\", Accounts.createUser(v),\"-\", v);\n}\n\n\nif (Activities.find().count() === 0) {\n  \n\tActivities.insert({\n      tipo: \"Audit\",\n      status:\"In corso\",\n      nextreadystatus:false,\n      titolo: \"Liquidità\",\n      obiettivo:\"Confort processo sulla liquidità\",\n      areeRischio: ['Credito', 'Operativo'],\n      rischiEsaminati:['Informatico', 'Liquidità'],\n      strutturaId: \"\",\n      auditors: ['Matteo Setti','Maria Chiara Russo'],\n      data: \"12/12/2017\",\n      numero: \"1/2017\",\n      memo: \"\",\n      sci: \"Parzialmente positivo +\",\n      rischioResiduo:\"medio\"    \n    });\n  \n  \n\tFiliali.insert({\n      filiale: \"--\"   \n    });\n  \n  \n/*\n\tCarenze.insert({\n      activityId: \"1\",\n      carenzaId: \"1\",\n      titolo: \"La procedura del credito NPL non è aggiornata\",\n      tipo:\"lacuna documentale\",\n      data: \"12/12/2018\",\n      descrizione: \"manca la documentazione\",\n      livello: \"ridotto\",\n      owner: \"Organizzazione\"\n    });\n\n*/\n}\n\n\n\nfunction calendar () {\n\tvar now = Math.floor((moment().unix()));\n    console.log('now:',now);\n}\n\n\nvar watt = SyncedCron.add({\n\tname: 'watt',\n\tschedule: function(parser) {return parser.recur().every(20).minute();},\n\tjob: calendar\n});\n\n\nSyncedCron.config({log: false});\n\nSyncedCron.start();\n\n\n\n// ------------------------------------------------------------------------------------------\n// Aggiornamento collections.\n// Non essendoci in Meteoer un API per recuperare la collection a partire dal relativo nome\n// lato server, ho creato funzioni dedicate per importare il contenuto dei file\n//-------------------------------------------------------------------------------------------\nvar Fiber = require('fibers');\nvar csv = require('csv-parser');\n\n\nfunction uploadSync(file) {\n\tvar csvfs = path+file+\".csv\";  \n\tif (fs.existsSync(csvfs)) {\n\t\tvar p = [];\n\t\tfs.createReadStream(csvfs).pipe(csv()).on('data', function (obj) {p.push(obj);});\n      \n\t\tFiber(function(){\n          \t\n\t\t\tMongo.Collection.get(file).remove({});\n            var t = Mongo.Collection.get(file).batchInsert(p);\n            console.log('Data uploaded:',file,' (',t.length,')');\n         }).run();             \n\t} else  {console.log('File not found: ',csvfs);}\n  \n    \n\tfs.watchFile(csvfs, (curr, prev) => {\n\t\tif(curr.mtime != prev.mtime) {\n         \tif (fs.existsSync(csvfs)) {\n\t\t\tvar p = [];\n\t\t\tfs.createReadStream(csvfs).pipe(csv()).on('data', function (obj) {p.push(obj);});              \n\t\t\tFiber(function(){\n\t\t\t\tMongo.Collection.get(file).remove({});\n\t\t\t\tvar t = Mongo.Collection.get(file).batchInsert(p);\n\t\t\t\tconsole.log('Data uploaded:',file,' (',t.length,')');\n            }).run();              \n\t\t\t}\t\t\t\n\t\t}\n\t});\n}\n\nvar fileMonitor= ['filiali','libtest','normative','rischi','strutture','auditors','monitoringcontrol','processi'];\n_.map(fileMonitor, function(f){ uploadSync(f); });\n\n//-----------------------------------------------------------------------------------------------\n\n\n//----------------------------------------------------------------------------------------------\n// GET IP of server\n\n  var os = Npm.require('os');\n  \n  var getIp = function() {\n    // Get interfaces\n    var netInterfaces = os.networkInterfaces();\n    // Result\n    var result = [];\n    for (var id in netInterfaces) {\n      var netFace = netInterfaces[id];\n\n      for (var i = 0; i < netFace.length; i++) {\n        var ip = netFace[i];\n        if (ip.internal === false && ip.family === 'IPv4') {\n          result.push(ip);\n        }\n      }\n    }   \n    return result[0].address;\n  };\n\n\n Meteor.methods({\n    'server-ip': function() {\n      return getIp();\n    }\n });\n\nconsole.log('IP Server:', Meteor.call('server-ip'));  \n//----------------------------------------------------------------------------------------------\n\n",
		"stylesheet": ".dashboard {\n  \tborder: #cdcdcd medium solid;\n\tborder-radius: 10px;\n    height: 100%;\n  \tfont-size: small;\n}\n\n\n.no-border [class*=\"-6\"] {\n\tpadding-left:0;\n    padding-right:0;\n}\n\n\n.divlib {\n    border-style: solid;\n    border-width: 2px;\n  \tborder-radius: 25px;\n  \tfont-size: small;\n}\n\n\n.divright{\n  float:right;\n}\n\n\nul.list-group:after {\n  content: \"\";\n}\n\n\nli.borderless {\n  border: 0 none;\n}\n\n.list-group-item {\n    float: left;\n  \tborder: 0px;\n  \tpadding: 2px 3px;\n}\n\n.not-selected {\n  font-size: 12px;\n  list-style-type: none;  \n  opacity: 0.95;\n  color: #dadada;\n  padding: 0;\n}\n\n.selected {\n  \tanimation: \n      fonticon 4s forwards,\n      statusicon 4s forwards;     \n}\n\n.suggested {\n\tcolor: #76f233;\n\tfont-size: 16px;  \n}\n\n@keyframes statusicon {\n    from { color: #dadada;}\n    to {color: #3399f3;}\n} \n\n@keyframes fonticon {\n  0% {font-size: 12px;}\n  20% {font-size: 16px;}\n  40% {font-size: 18px;}\n  60% {font-size: 20px;}\n  80% {font-size: 22px;}\n  100% {font-size: 24px;}\n}\n",
		"copy_files": [
			{
				"source": "files/favicon.ico",
				"dest": "PUBLIC_DIR/favicon.ico"
			},
			{
				"source": "files\\ckeditor",
				"dest": "PUBLIC_DIR/"
			},
			{
				"source_content": "Meteor.publish(\"activities_list\", function() {\n\tif(Users.isInRoles(this.userId, [\"admin\"])) {\n\t\treturn Activities.find({}, {});\n\t}\t\n\tvar name='';\n\tif (this.userId) { name = Users.findOne({_id:this.userId},{}).profile.name;};\n\t// console.log('auditors:',Activities.find({auditors:name}, {}).fetch());\n    return Activities.find({auditors:name}, {});\n\t// return Activities.find({ownerId:this.userId}, {});\n});\n\nMeteor.publish(\"activities_null\", function() {\n\tif(Users.isInRoles(this.userId, [\"admin\"])) {\n\t\treturn Activities.find({_id:null}, {});\n\t}\n\treturn Activities.find({_id:null,ownerId:this.userId}, {});\n});\n\nMeteor.publish(\"activity\", function(activityId) {\n\tif(Users.isInRoles(this.userId, [\"admin\"])) {\n\t\treturn Activities.find({_id:activityId}, {});\n\t}\n\t//  return Activities.find({_id:activityId,ownerId:this.userId}, {});\n    \treturn Activities.find({_id:activityId}, {});\n});\n\n\nMeteor.publish(\"activity_all\", function() {\n//        if(Users.isInRoles(this.userId, [\"admin\"])) {\n//                return Activities.find({}, {});\n//        }\n//\treturn Activities.find({ownerId:this.userId}, {});\n\treturn Activities.find({}, {});\n});\n\n",
				"dest": "SERVER_PUBLISH_DIR/activities.js"
			},
			{
				"source_content": "var pageSession = new ReactiveDict();\n\nTemplate.HomePrivate.onCreated(function() {\n\t\n});\n\nTemplate.HomePrivate.onDestroyed(function() {\n\t\n});\n\nTemplate.HomePrivate.onRendered(function() {\n\t\n\tMeteor.defer(function() {\n\t\tglobalOnRendered();\n\t\t$(\"input[autofocus]\").focus();\n\t});\n});\n\nTemplate.HomePrivate.events({\n\t\n});\n\nTemplate.HomePrivate.helpers({\n\t\n});\n\nvar HomePrivateAuditViewItems = function(cursor) {\n\tif(!cursor) {\n\t\treturn [];\n\t}\n\n\tvar searchString = pageSession.get(\"HomePrivateAuditViewSearchString\");\n\tvar sortBy = pageSession.get(\"HomePrivateAuditViewSortBy\");\n\tvar sortAscending = pageSession.get(\"HomePrivateAuditViewSortAscending\");\n\tif(typeof(sortAscending) == \"undefined\") sortAscending = true;\n\n\tvar raw = cursor.fetch();\n\n\t// filter\n\tvar filtered = [];\n\tif(!searchString || searchString == \"\") {\n\t\tfiltered = raw;\n\t} else {\n\t\tsearchString = searchString.replace(\".\", \"\\\\.\");\n\t\tvar regEx = new RegExp(searchString, \"i\");\n\t\tvar searchFields = [\"titolo\", \"numero\", \"tipo\", \"auditors\", \"data\", \"status\"];\n\t\tfiltered = _.filter(raw, function(item) {\n\t\t\tvar match = false;\n\t\t\t_.each(searchFields, function(field) {\n\t\t\t\tvar value = (getPropertyValue(field, item) || \"\") + \"\";\n\n\t\t\t\tmatch = match || (value && value.match(regEx));\n\t\t\t\tif(match) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn match;\n\t\t});\n\t}\n\n\t// sort\n\tif(sortBy) {\n\t\tfiltered = _.sortBy(filtered, sortBy);\n\n\t\t// descending?\n\t\tif(!sortAscending) {\n\t\t\tfiltered = filtered.reverse();\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\nvar HomePrivateAuditViewExport = function(cursor, fileType) {\n\tvar data = HomePrivateAuditViewItems(cursor);\n\tvar exportFields = [\"titolo\", \"numero\", \"tipo\", \"auditors\", \"data\", \"status\"];\n\n\tvar str = exportArrayOfObjects(data, exportFields, fileType);\n\n\tvar filename = \"export.\" + fileType;\n\n\tdownloadLocalResource(str, filename, \"application/octet-stream\");\n};\n\nTemplate.HomePrivateAuditView.onCreated(function() {\n\t\n});\n\nTemplate.HomePrivateAuditView.onDestroyed(function() {\n\t\n});\n\nTemplate.HomePrivateAuditView.onRendered(function() {\n\tpageSession.set(\"HomePrivateAuditViewStyle\", \"table\");\n\t\n});\n\nTemplate.HomePrivateAuditView.events({\n\t\"submit #dataview-controls\": function(e, t) {\n\t\treturn false;\n\t},\n\n\t\"click #dataview-search-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar form = $(e.currentTarget).parent();\n\t\tif(form) {\n\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\tif(searchInput) {\n\t\t\t\tsearchInput.focus();\n\t\t\t\tvar searchString = searchInput.val();\n\t\t\t\tpageSession.set(\"HomePrivateAuditViewSearchString\", searchString);\n\t\t\t}\n\n\t\t}\n\t\treturn false;\n\t},\n\n\t\"keydown #dataview-search-input\": function(e, t) {\n\t\tif(e.which === 13)\n\t\t{\n\t\t\te.preventDefault();\n\t\t\tvar form = $(e.currentTarget).parent();\n\t\t\tif(form) {\n\t\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\t\tif(searchInput) {\n\t\t\t\t\tvar searchString = searchInput.val();\n\t\t\t\t\tpageSession.set(\"HomePrivateAuditViewSearchString\", searchString);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tif(e.which === 27)\n\t\t{\n\t\t\te.preventDefault();\n\t\t\tvar form = $(e.currentTarget).parent();\n\t\t\tif(form) {\n\t\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\t\tif(searchInput) {\n\t\t\t\t\tsearchInput.val(\"\");\n\t\t\t\t\tpageSession.set(\"HomePrivateAuditViewSearchString\", \"\");\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t\"click #dataview-insert-button\": function(e, t) {\n\t\te.preventDefault();\n      \n             \n      var data = { data: moment().format('MM/DD/YYYY') };\n      var auditors = { auditors: Meteor.user().profile.name };\n      var status =  { status: 'Avviato'};\n      var numero = { numero: '-'};\n      var filiale = { numero: '-'};\n      var values = Object.assign(data, auditors, status, numero, filiale);\n      \n      \n      console.log(\"=>\",values);\n            \n      Meteor.call(\"activitiesInsert\", values, function(e, r) {\n                              //console.log(\"activitiesInsert\",r); \n                              if(e) errorAction(e); \n                              Session.set(\"activityId\",r);    \n                              console.log(\"sessione corrente:\",r);\t\t\n                              Router.go(\"audits.workflow\", { id: r }); });      \n\t},\n  \n\n\t\"click #dataview-export-default\": function(e, t) {\n\t\te.preventDefault();\n\t\tHomePrivateAuditViewExport(this.activities_list, \"csv\");\n\t},\n\n\t\"click #dataview-export-csv\": function(e, t) {\n\t\te.preventDefault();\n\t\tHomePrivateAuditViewExport(this.activities_list, \"csv\");\n\t},\n\n\t\"click #dataview-export-tsv\": function(e, t) {\n\t\te.preventDefault();\n\t\tHomePrivateAuditViewExport(this.activities_list, \"tsv\");\n\t},\n\n\t\"click #dataview-export-json\": function(e, t) {\n\t\te.preventDefault();\n\t\tHomePrivateAuditViewExport(this.activities_list, \"json\");\n\t}\n\t\n});\n\nTemplate.HomePrivateAuditView.helpers({\n\n\t\"insertButtonClass\": function() {\n\t\treturn Activities.userCanInsert(Meteor.userId(), {}) ? \"\" : \"hidden\";\n\t},\n\n\t\"isEmpty\": function() {\n\t\treturn !this.activities_list || this.activities_list.count() == 0;\n\t},\n\t\"isNotEmpty\": function() {\n\t\treturn this.activities_list && this.activities_list.count() > 0;\n\t},\n\t\"isNotFound\": function() {\n\t\treturn this.activities_list && pageSession.get(\"HomePrivateAuditViewSearchString\") && HomePrivateAuditViewItems(this.activities_list).length == 0;\n\t},\n\t\"searchString\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewSearchString\");\n\t},\n\t\"viewAsTable\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewStyle\") == \"table\";\n\t},\n\t\"viewAsBlog\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewStyle\") == \"blog\";\n\t},\n\t\"viewAsList\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewStyle\") == \"list\";\n\t},\n\t\"viewAsGallery\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewStyle\") == \"gallery\";\n\t}\n\n\t\n});\n\n\nTemplate.HomePrivateAuditViewTable.onCreated(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTable.onDestroyed(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTable.onRendered(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTable.events({\n\t\"click .th-sortable\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar oldSortBy = pageSession.get(\"HomePrivateAuditViewSortBy\");\n\t\tvar newSortBy = $(e.target).attr(\"data-sort\");\n\n\t\tpageSession.set(\"HomePrivateAuditViewSortBy\", newSortBy);\n\t\tif(oldSortBy == newSortBy) {\n\t\t\tvar sortAscending = pageSession.get(\"HomePrivateAuditViewSortAscending\") || false;\n\t\t\tpageSession.set(\"HomePrivateAuditViewSortAscending\", !sortAscending);\n\t\t} else {\n\t\t\tpageSession.set(\"HomePrivateAuditViewSortAscending\", true);\n\t\t}\n\t}\n});\n\nTemplate.HomePrivateAuditViewTable.helpers({\n\t\"tableItems\": function() {\n\t\treturn HomePrivateAuditViewItems(this.activities_list);\n\t}\n});\n\n\nTemplate.HomePrivateAuditViewTableItems.onCreated(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTableItems.onDestroyed(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTableItems.onRendered(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTableItems.events({\n\t\"click td\": function(e, t) {\n\t\te.preventDefault();\n\t\tSession.set(\"activityId\",this._id);\n\t\tconsole.log(\"sessione corrente:\",this._id,\" - \",this.tipo);\n\t\t\n        Router.go(\"audits.workflow\", { id: this._id, tipo: this.tipo});\n         \n\t\t/**/\n\t\treturn false;\n\t},\n\n\t\"click .inline-checkbox\": function(e, t) {\n\t\te.preventDefault();\n\n\t\tif(!this || !this._id) return false;\n\n\t\tvar fieldName = $(e.currentTarget).attr(\"data-field\");\n\t\tif(!fieldName) return false;\n\n\t\tvar values = {};\n\t\tvalues[fieldName] = !this[fieldName];\n\n\t\tMeteor.call(\"activitiesUpdate\", this._id, values, function(err, res) {\n\t\t\tif(err) {\n\t\t\t\talert(err.message);\n\t\t\t}\n\t\t});\n\n\t\treturn false;\n\t},\n\n\t\"click #delete-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar me = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Vuoi cancellare definitivamente? Sei sicuro?\",\n\t\t\ttitle: \"Cancellazione\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tMeteor.call(\"activitiesRemove\", me._id, function(err, res) {\n\t\t\t\t\t\t\tif(err) {\n\t\t\t\t\t\t\t\talert(err.message);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n\t},\n\t\"click #edit-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tSession.set(\"activityId\",this._id);\n\t\tconsole.log(\"sessione corrente:\",this._id,\" - \",this.tipo);\n\t\t\t\n\t\tRouter.go(\"audit_filiale.workflow\", mergeObjects(Router.currentRouteParams(), {activityId: this._id}));\n\t\treturn false;\n\t}\n});\n\nTemplate.HomePrivateAuditViewTableItems.helpers({\n\t\"checked\": function(value) { return value ? \"checked\" : \"\" }, \n\t\"editButtonClass\": function() {\n\t\treturn Activities.userCanUpdate(Meteor.userId(), this) ? \"\" : \"hidden\";\n\t},\n\n\t\"deleteButtonClass\": function() {\n\t\treturn Activities.userCanRemove(Meteor.userId(), this) ? \"\" : \"hidden\";\n\t}\n});",
				"dest": "CLIENT_VIEWS_DIR/home_private/home_private.js"
			},
			{
				"source_content": "var pageSession = new ReactiveDict();\n\nTemplate.AuditsWorkflowVerifiche.onCreated(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerifiche.onDestroyed(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerifiche.onRendered(function() {\n\tSession.set('titleVerifica','');\n  Session.set('descriptionVerifica','');\n\tMeteor.defer(function() {\n\t\tglobalOnRendered();\n\t\t$(\"input[autofocus]\").focus();\n\t});\n});\n\nTemplate.AuditsWorkflowVerifiche.events({\n\t\n});\n\nTemplate.AuditsWorkflowVerifiche.helpers({\n\t'title': function() { return Activities.findOne({_id: Session.get('activityId')}).numero + \" - \" + Activities.findOne({_id: Session.get('activityId')}).titolo;}\n\n});\n\nvar AuditsWorkflowVerificheViewItems = function(cursor) {\n\tif(!cursor) {\n\t\treturn [];\n\t}\n\n\tvar searchString = pageSession.get(\"AuditsWorkflowVerificheViewSearchString\");\n\tvar sortBy = pageSession.get(\"AuditsWorkflowVerificheViewSortBy\");\n\tvar sortAscending = pageSession.get(\"AuditsWorkflowVerificheViewSortAscending\");\n\tif(typeof(sortAscending) == \"undefined\") sortAscending = true;\n\n\tvar raw = cursor.fetch();\n\n\t// filter\n\tvar filtered = [];\n\tif(!searchString || searchString == \"\") {\n\t\tfiltered = raw;\n\t} else {\n\t\tsearchString = searchString.replace(\".\", \"\\\\.\");\n\t\tvar regEx = new RegExp(searchString, \"i\");\n\t\tvar searchFields = [\"numero\", \"titolo\", \"obiettivo\", \"descrizione\", \"activityId\", \"esito\"];\n\t\tfiltered = _.filter(raw, function(item) {\n\t\t\tvar match = false;\n\t\t\t_.each(searchFields, function(field) {\n\t\t\t\tvar value = (getPropertyValue(field, item) || \"\") + \"\";\n\n\t\t\t\tmatch = match || (value && value.match(regEx));\n\t\t\t\tif(match) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn match;\n\t\t});\n\t}\n\n\t// sort\n\tif(sortBy) {\n\t\tfiltered = _.sortBy(filtered, sortBy);\n\n\t\t// descending?\n\t\tif(!sortAscending) {\n\t\t\tfiltered = filtered.reverse();\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\nvar AuditsWorkflowVerificheViewExport = function(cursor, fileType) {\n\tvar data = AuditsWorkflowVerificheViewItems(cursor);\n\tvar exportFields = [];\n\n\tvar str = exportArrayOfObjects(data, exportFields, fileType);\n\n\tvar filename = \"export.\" + fileType;\n\n\tdownloadLocalResource(str, filename, \"application/octet-stream\");\n};\n\nTemplate.AuditsWorkflowVerificheView.onCreated(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheView.onDestroyed(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheView.onRendered(function() {\n\tpageSession.set(\"AuditsWorkflowVerificheViewStyle\", \"table\");\n\t\n});\n\nTemplate.AuditsWorkflowVerificheView.events({\n\t\"submit #dataview-controls\": function(e, t) {\n\t\treturn false;\n\t},\n\n\t\"click #dataview-search-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar form = $(e.currentTarget).parent();\n\t\tif(form) {\n\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\tif(searchInput) {\n\t\t\t\tsearchInput.focus();\n\t\t\t\tvar searchString = searchInput.val();\n\t\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSearchString\", searchString);\n\t\t\t}\n\n\t\t}\n\t\treturn false;\n\t},\n\n\t\"keydown #dataview-search-input\": function(e, t) {\n\t\tif(e.which === 13)\n\t\t{\n\t\t\te.preventDefault();\n\t\t\tvar form = $(e.currentTarget).parent();\n\t\t\tif(form) {\n\t\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\t\tif(searchInput) {\n\t\t\t\t\tvar searchString = searchInput.val();\n\t\t\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSearchString\", searchString);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tif(e.which === 27)\n\t\t{\n\t\t\te.preventDefault();\n\t\t\tvar form = $(e.currentTarget).parent();\n\t\t\tif(form) {\n\t\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\t\tif(searchInput) {\n\t\t\t\t\tsearchInput.val(\"\");\n\t\t\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSearchString\", \"\");\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t\"click #dataview-insert-button\": function(e, t) {\n\t\te.preventDefault();\n\t\t// ---\n\t\t// Router.go(\"audits.workflow.fieldworks.update\", mergeObjects(Router.currentRouteParams(), {singolaAttivitaId: this._id}));\n\n\t\t\tMeteor.call(\"fieldworksInsert\", {activityId: Session.get(\"activityId\")}, function(e, r) {\n\t\t\t\t//console.log(\"fieldworksInsert\",r); \n\t\t\t\tif(e) errorAction(e); \n\t\t\t\telse Router.go(\"audits.workflow.verifiche.update\", mergeObjects(Router.currentRouteParams(), {singolaAttivitaId: r}) );});\n// ---\n\n\t},\n\n\t\"click #dataview-export-default\": function(e, t) {\n\t\te.preventDefault();\n\t\tAuditsWorkflowVerificheViewExport(this.singola_attivita_list, \"csv\");\n\t},\n\n\t\"click #dataview-export-csv\": function(e, t) {\n\t\te.preventDefault();\n\t\tAuditsWorkflowVerificheViewExport(this.singola_attivita_list, \"csv\");\n\t},\n\n\t\"click #dataview-export-tsv\": function(e, t) {\n\t\te.preventDefault();\n\t\tAuditsWorkflowVerificheViewExport(this.singola_attivita_list, \"tsv\");\n\t},\n\n\t\"click #dataview-export-json\": function(e, t) {\n\t\te.preventDefault();\n\t\tAuditsWorkflowVerificheViewExport(this.singola_attivita_list, \"json\");\n\t}\n\n\t\n});\n\nTemplate.AuditsWorkflowVerificheView.helpers({\n\n\t\"insertButtonClass\": function() {\n\t\treturn Fieldworks.userCanInsert(Meteor.userId(), {}) ? \"\" : \"hidden\";\n\t},\n\n\t\"isEmpty\": function() {\n\t\treturn !this.singola_attivita_list || this.singola_attivita_list.count() == 0;\n\t},\n\t\"isNotEmpty\": function() {\n\t\treturn this.singola_attivita_list && this.singola_attivita_list.count() > 0;\n\t},\n\t\"isNotFound\": function() {\n\t\treturn this.singola_attivita_list && pageSession.get(\"AuditsWorkflowVerificheViewSearchString\") && AuditsWorkflowVerificheViewItems(this.singola_attivita_list).length == 0;\n\t},\n\t\"searchString\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewSearchString\");\n\t},\n\t\"viewAsTable\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewStyle\") == \"table\";\n\t},\n\t\"viewAsBlog\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewStyle\") == \"blog\";\n\t},\n\t\"viewAsList\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewStyle\") == \"list\";\n\t},\n\t\"viewAsGallery\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewStyle\") == \"gallery\";\n\t}\n\n\t\n});\n\n\nTemplate.AuditsWorkflowVerificheViewTable.onCreated(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTable.onDestroyed(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTable.onRendered(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTable.events({\n\t\"click .th-sortable\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar oldSortBy = pageSession.get(\"AuditsWorkflowVerificheViewSortBy\");\n\t\tvar newSortBy = $(e.target).attr(\"data-sort\");\n\n\t\tpageSession.set(\"AuditsWorkflowVerificheViewSortBy\", newSortBy);\n\t\tif(oldSortBy == newSortBy) {\n\t\t\tvar sortAscending = pageSession.get(\"AuditsWorkflowVerificheViewSortAscending\") || false;\n\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSortAscending\", !sortAscending);\n\t\t} else {\n\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSortAscending\", true);\n\t\t}\n\t}\n});\n\nTemplate.AuditsWorkflowVerificheViewTable.helpers({\n\t\"tableItems\": function() {\n\t\treturn AuditsWorkflowVerificheViewItems(this.singola_attivita_list);\n\t}\n});\n\n\nTemplate.AuditsWorkflowVerificheViewTableItems.onCreated(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTableItems.onDestroyed(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTableItems.onRendered(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTableItems.events({\n\t\"click td\": function(e, t) {\n\t\te.preventDefault();\n\t\t\n\t\tRouter.go(\"audits.workflow.verifiche.update\", mergeObjects(Router.currentRouteParams(), {singolaAttivitaId: this._id}));\n\t\treturn false;\n\t},\n\n\t\"click .inline-checkbox\": function(e, t) {\n\t\te.preventDefault();\n\n\t\tif(!this || !this._id) return false;\n\n\t\tvar fieldName = $(e.currentTarget).attr(\"data-field\");\n\t\tif(!fieldName) return false;\n\n\t\tvar values = {};\n\t\tvalues[fieldName] = !this[fieldName];\n\n\t\tMeteor.call(\"fieldworksUpdate\", this._id, values, function(err, res) {\n\t\t\tif(err) {\n\t\t\t\talert(err.message);\n\t\t\t}\n\t\t});\n\n\t\treturn false;\n\t},\n\n\t\"click #delete-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar me = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Delete? Are you sure?\",\n\t\t\ttitle: \"Delete\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tMeteor.call(\"fieldworksRemove\", me._id, function(err, res) {\n\t\t\t\t\t\t\tif(err) {\n\t\t\t\t\t\t\t\talert(err.message);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n\t},\n\t\"click #edit-button\": function(e, t) {\n\t\te.preventDefault();\n\t\t/**/\n\t\treturn false;\n\t}\n});\n\nTemplate.AuditsWorkflowVerificheViewTableItems.helpers({\n\t\"checked\": function(value) { return value ? \"checked\" : \"\" }, \n\t\"editButtonClass\": function() {\n\t\treturn Fieldworks.userCanUpdate(Meteor.userId(), this) ? \"\" : \"hidden\";\n\t},\n\n\t\"deleteButtonClass\": function() {\n\t\treturn Fieldworks.userCanRemove(Meteor.userId(), this) ? \"\" : \"hidden\";\n\t}\n});\n",
				"dest": "CLIENT_VIEWS_DIR/audits/workflow/verifiche/verifiche.js"
			},
			{
				"source_content": "Meteor.methods({\n        \"ldapquery\": function(data) {\n                \n              var ActiveDirectory = require('activedirectory2');\n              var config = { url: 'ldap://192.168.208.75',\n                              baseDN: 'dc=intranet,dc=ifis,dc=local',\n                              username: 'matteo.setti@bancaifis.it',                             \n                             // pageSize: 'xxxxxxxxxx',                \n                              attributes: {\n                                    user: [\n                                      'dn', 'distinguishedName',\n                                      'userPrincipalName', 'sAMAccountName', 'mail',\n                                      'lockoutTime', 'whenCreated', 'pwdLastSet', 'userAccountControl',\n                                      'employeeID', 'sn', 'givenName', 'initials', 'cn', 'displayName',\n                                      'comment', 'description'\n                                    ],\n                                    group: [\n                                      'dn', 'cn', 'description', 'distinguishedName', 'objectCategory'\n                                    ]\n                                  }                          \n                           };\n\n              var ad = new ActiveDirectory(config);\n              var query = '(&(objectClass=person)(objectClass=user))';\n              var opts = {\n                includeMembership : [ 'group', 'user' ], // Optionally can use 'all'\n                includeDeleted : false\n              };\n\n              console.log(\"Interrogazione active directory\");\n              ad.find(query, function(err, results) {\n\n                if ((err) || (! results)) {\n                  console.log('ERROR: ' + JSON.stringify(err));\n                  return;\n                }\n\n                console.log('Groups');\n                _.each(results.groups, function(group) {\n                  console.log('  ' + group.cn);\n                });\n\n                console.log('Users');\n                _.each(results.users, function(user) {\n                                  \n                 Profili.insert({user: user.cn});      \n\n                 console.log('  ' + user.cn);\n                });\n\n              });\n\n    }\n\n});\n",
				"dest": "SERVER_METHODS_DIR/my-methods.js"
			}
		],
		"packages": {
			"meteor": [
				"percolate:synced-cron",
				"raix:ui-dropped-event",
				"mikowals:batch-insert",
				"session",
				"msavin:mongol",
				"dburles:mongo-collection-instances"
			],
			"npm": [
				"babel-runtime",
				"csv-parser",
				"activedirectory2",
				"jsreport-browser-client-dist"
			]
		}
	}
}