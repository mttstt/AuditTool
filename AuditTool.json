{
	"application": {
		"title": "AuditTool",
		"meta_description": "AuditTool",
		"meta_title": "AuditTool",
		"theme": "bootswatch-spacelab",
		"animate": true,
		"footer_text": "AuditTool Alfa Company - Copyright (c) 2018,  GNU General Public License Version 2 or later, release 0.0.16",
		"roles": [
			"admin",
			"user",
			"auditor"
		],
		"default_role": "user",
		"collections": [
			{
				"name": "activities",
				"type": "collection",
				"fields": [
					{
						"name": "status",
						"title": "Status",
						"type": "string",
						"default": "Avviato",
						"exportable": true,
						"input": "select",
						"array_item_type": "object",
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "type",
						"title": "Activity type",
						"type": "string",
						"exportable": true,
						"input": "radio",
						"array_item_type": "object",
						"show_in_update_form": false
					},
					{
						"name": "title",
						"title": "Title",
						"type": "string",
						"exportable": true
					},
					{
						"name": "startDate",
						"title": "Audit start date",
						"type": "date",
						"default": "today",
						"format": "DD/MM/YYYY",
						"exportable": true,
						"input": "datepicker"
					},
					{
						"name": "auditors",
						"title": "Auditors",
						"type": "array",
						"default": "{{userFullName}}",
						"exportable": true,
						"input": "select-multiple",
						"lookup_key": "auditor",
						"lookup_field": "auditor"
					},
					{
						"name": "objective",
						"title": "Activity objective",
						"type": "string",
						"exportable": true,
						"input": "textarea",
						"show_in_insert_form": false
					},
					{
						"name": "company",
						"title": "Companies",
						"type": "array",
						"input": "checkbox",
						"input_items": [
							{
								"value": "alpha",
								"title": "Alpha Company"
							},
							{
								"value": "beta",
								"title": "Beta Company"
							},
							{
								"value": "gamma",
								"title": "Gamma Company"
							},
							{
								"value": "delta",
								"title": "Delta Company"
							},
							{
								"value": "omega",
								"title": "Omega Company"
							}
						]
					},
					{
						"name": "riskArea",
						"title": "Risk area (ICAAP)",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "risks_all",
						"lookup_key": "ICAAP",
						"lookup_field": "ICAAP",
						"show_in_update_form": false
					},
					{
						"name": "riskDetails",
						"title": "Examinated risks",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "risks_all",
						"lookup_key": "risk",
						"lookup_field": "risk",
						"show_in_insert_form": false
					},
					{
						"name": "organizationUnit",
						"title": "Organization Units",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "strutture_all",
						"lookup_key": "uo",
						"lookup_field": "uo",
						"show_in_insert_form": false
					},
					{
						"name": "number",
						"title": "Activity number",
						"type": "string",
						"exportable": true,
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "normativeInt",
						"title": "Internal legislation",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "normativeint",
						"lookup_key": "norma",
						"lookup_field": "norma",
						"show_in_insert_form": false
					},
					{
						"name": "normativeExt",
						"title": "External legislation",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "normativeext",
						"lookup_key": "norma",
						"lookup_field": "norma",
						"show_in_insert_form": false
					},
					{
						"name": "process",
						"title": "Processes",
						"type": "string",
						"input": "select",
						"lookup_key": "processo",
						"lookup_field": "processo",
						"show_in_insert_form": false
					},
					{
						"name": "subprocesses",
						"title": "Sub processes",
						"type": "array",
						"input": "select-multiple",
						"show_in_insert_form": false
					},
					{
						"name": "memo",
						"title": "Executive Summary",
						"type": "string",
						"input": "textarea",
						"show_in_insert_form": false
					},
					{
						"name": "branch",
						"title": "Branch",
						"type": "string",
						"input": "select",
						"lookup_query_name": "braches_all",
						"lookup_key": "filiale",
						"lookup_field": "filiale",
						"show_in_insert_form": false
					},
					{
						"name": "sci",
						"title": "Rating",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "Positiva",
								"title": "Positive"
							},
							{
								"value": "Parzialmente positiva +",
								"title": "Partial positive"
							},
							{
								"value": "Parzialmente positiva",
								"title": "Partial"
							},
							{
								"value": "Parzialmente positiva -",
								"title": "Partial negative"
							},
							{
								"value": "Negativa",
								"title": "Negative"
							}
						]
					},
					{
						"name": "residualRisk",
						"title": "Residual risk evaluetion",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "High",
								"title": "High"
							},
							{
								"value": "Medium",
								"title": "Medium"
							},
							{
								"value": "Low",
								"title": "Low"
							},
							{
								"value": "Not significative",
								"title": "Not significative"
							}
						],
						"show_in_insert_form": false
					},
					{
						"name": "closeDate",
						"title": "Audit close date",
						"type": "date",
						"default": "today",
						"format": "DD/MM/YYYY",
						"input": "datepicker",
						"show_in_insert_form": false
					},
					{
						"name": "nextreadyStatus",
						"type": "bool",
						"default": "false",
						"searchable": false,
						"sortable": false,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					}
				],
				"owner_field": "ownerId",
				"update_rule": "userId && ( Users.isInRoles(userId, [\"admin\"]) || _.contains(doc.auditors, Users.findOne({_id:userId},{}).profile.name))\n",
				"before_insert_code": "if(!doc.auditors) doc.auditors = [Meteor.userId()];",
				"before_update_code": "var checkCompleted = function() {\n\t\tvar CKdatachiusura =  (modifier.$set.closeDate === undefined) ? doc.closeDate : modifier.$set.closeDate;\n\t\tvar CKmemo = (modifier.$set.memo === undefined) ? doc.memo : modifier.$set.memo;\n      //===========================\n        /*\n\t\tvar carenzaNumbers = Carenze.find({activityId: doc._id},{fields: {carenzaId: 1 }}).fetch();  \n        var x = _.each(carenzaNumbers, function(doc){return parseInt(doc.carenzaId.split('_')[3]);});\n        var x1= x.sort(function (a, b) {  return a - b;  });\n        var x2= _.uniq(x1);\n        var CKnumCarenze = ((x1.lenght() === _x2.lenght()) && (_.last(x2) === x1.lenght())) ? true : false;\n      */\n      // ===============================  \n\t\tconsole.log(\"VERIFICARE LA PRESENZA DI BUCHI NELLA NUMERAZIONE DELLE CARENZE\");\n\t\tconsole.log(\"VERIFICARE CHE TUTTE LE VERIFICHE HANNO UNA VALUTAZIONE\");\n\t\tconsole.log(\"VERIFICARE CHE TUTTE LE VERIFICHE FAIL SIANO INDIRIZZATE AD UNA CARENZA\");\n\t\t\t\t\t\t\t\t\n\t//\tif (!!CKdatachiusura && !!CKmemo && !!CKnumCarenze) { modifier.$set.nextreadystatus = true;} else { modifier.$set.nextreadystatus = false;}  \n        if (!!CKdatachiusura && !!CKmemo) { modifier.$set.nextreadyStatus = true;} else { modifier.$set.nextreadyStatus = false;}\n  console.log ('before update',modifier.$set.nextreadyStatus);\n};\n\n// When Audit is in Started audit and there is some save activies, then status Audit is set to Working in progress\nif(( doc.status === \"Started\")) {modifier.$set.status = \"Working in progress\";}\n\nif(( doc.status === \"Working in progress\")) {checkCompleted();}\n\n\nif(( modifier.$set.status !== \"Approved\" && doc.status === \"Closed\")) {\n\t\t\t\t\t\t\t\t\tmodifier.$set.status = \"Working in progress\";\n\t\t\t\t\t\t\t\t\tcheckCompleted();}\n\n\nif(( modifier.$set.status !== \"Archived\" && doc.status === \"Approved\")) {\n\t\t\t\t\t\t\t\t\tmodifier.$set.status = \"Working in progress\"; \n\t\t\t\t\t\t\t\t\tcheckCompleted();} \n\n\nif( modifier.$set.status === \"Approved\") {                 \n  \t\t// Inserisce il numero di audit automaticamente\n\t\t\tvar max = 0;\n            var auditNumbers = Activities.find({status: { \"$in\" : [\"Approved\",\"Archived\"]}},{ fields: { number: 1 }}).fetch();\n\t\t\t_.each(auditNumbers, function(doc)\t{var intNum = parseInt(doc.number.split('/')[0]);if(!isNaN(intNum) && intNum > max) max = intNum;});\n\t\t\tmodifier.$set.number =  (max + 1)+\"/\"+moment().format('YYYY');\n  \t\t// Aggiornare la numerazione delle carenze\n            console.log(\"Assigned audit number: \",(max + 1)+\"/\"+moment().format('YYYY'));\n}\n\n\nif( doc.status === \"Start\") {modifier.$set.status = \"Working in progress\";}\nif( doc.status === \"Archived\") {throw new Meteor.Error(403, \"Audit Archived. You can change it !\");}\n",
				"before_remove_code": "if( doc.status === \"Archiviato\") {throw new Meteor.Error(403, \"Audit Archiviato: Non pi√π modificabile !\");}",
				"after_remove_code": "//ToDo: dopo la rimozione di Activities vanno rimosse \"carenze\", \"test\", file."
			},
			{
				"name": "branch",
				"type": "collection",
				"fields": [
					{
						"name": "branch",
						"title": "Branch",
						"type": "string",
						"exportable": true
					}
				],
				"owner_field": "ownerId"
			},
			{
				"name": "files",
				"type": "file_collection",
				"storage_adapters": [
					"gridfs"
				],
				"owner_field": "ownerId",
				"after_insert_code": "\n \n\n"
			},
			{
				"name": "issues",
				"type": "collection",
				"fields": [
					{
						"name": "issueId",
						"title": "Issue number",
						"type": "string",
						"default": "{{nextCarenzaNumber}}",
						"required": true,
						"exportable": true,
						"show_in_update_form": false
					},
					{
						"name": "activityId",
						"title": "Activity Id",
						"type": "string",
						"required": true,
						"searchable": false,
						"sortable": false,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "title",
						"title": "Issue title",
						"type": "string",
						"required": true
					},
					{
						"name": "description",
						"title": "Issue details",
						"type": "string",
						"required": true,
						"exportable": true,
						"input": "textarea",
						"show_in_dataview": false
					},
					{
						"name": "issueDate",
						"title": "Issue date",
						"type": "date",
						"default": "today",
						"required": true,
						"format": "DD/MM/YYYY",
						"exportable": true,
						"input": "datepicker"
					},
					{
						"name": "level",
						"title": "Issue level",
						"type": "string",
						"required": true,
						"exportable": true,
						"input": "select",
						"input_items": [
							{
								"value": "Low",
								"title": "Low"
							},
							{
								"value": "Medium",
								"title": "Medium"
							},
							{
								"value": "High",
								"title": "High"
							},
							{
								"value": "Very high",
								"title": "Very high"
							}
						]
					},
					{
						"name": "companies",
						"title": "Concerned companies",
						"type": "array",
						"required": true,
						"input": "checkbox",
						"input_items": [
							{
								"value": "alfa",
								"title": "Alfa Company"
							},
							{
								"value": "beta",
								"title": "Beta Company"
							},
							{
								"value": "gamma",
								"title": "Gamma Company"
							},
							{
								"value": "delta",
								"title": "Delta Company"
							},
							{
								"value": "omega",
								"title": "Omega Company"
							}
						]
					},
					{
						"name": "issueOwner",
						"title": "Issue owner",
						"type": "string",
						"required": true
					},
					{
						"name": "type",
						"title": "Issue nature",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "-",
								"title": "-"
							},
							{
								"value": "Errore Umano",
								"title": "Errore Umano"
							},
							{
								"value": "Carenza Documentale",
								"title": "Carenza Documentale"
							},
							{
								"value": "Natura",
								"title": "Natura"
							}
						]
					},
					{
						"name": "dbi",
						"title": "External controller",
						"type": "bool",
						"input": "checkbox"
					}
				],
				"owner_field": "ownerId",
				"before_insert_code": "//Meteor.call(\"activitiesUpdate\", doc.activityId,{});",
				"before_update_code": "\n//Meteor.call(\"activitiesUpdate\", doc.activityId,{});\n",
				"before_remove_code": "//Meteor.call(\"activitiesUpdate\", doc.activityId,{});",
				"after_update_code": "if(( modifier.$set.numero !== undefined)) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"RIASSEGNARE L'ID ALLE CARENZE\");\n\t\t\t\t\t\t\t\t\t}"
			},
			{
				"name": "libtest",
				"type": "collection",
				"fields": [
					{
						"name": "library",
						"title": "Library",
						"type": "string",
						"exportable": true
					},
					{
						"name": "description",
						"title": "Description",
						"type": "string",
						"exportable": true,
						"input": "textarea"
					},
					{
						"name": "area",
						"title": "Area",
						"type": "string",
						"exportable": true
					}
				],
				"before_insert_code": "\n"
			},
			{
				"name": "monitoringdetection",
				"type": "collection",
				"fields": [
					{
						"name": "controlId",
						"title": "Control code",
						"type": "string",
						"required": true,
						"exportable": true,
						"input": "select",
						"input_group_class": "col-sm-4 col-md-4",
						"lookup_query_name": "registrycontrols_list",
						"lookup_query_params": [
							{
								"name": "name",
								"value": "Meteor.user().profile.name"
							}
						],
						"lookup_key": "_id",
						"lookup_field": "title",
						"join_collection": "registrycontrols",
						"join_container": "registrycontrol",
						"join_fields": [
							"title"
						],
						"show_in_dataview": false,
						"show_in_read_only_form": false
					},
					{
						"name": "registrycontrol.title",
						"title": "Title",
						"type": "string",
						"exportable": true,
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "date",
						"title": "Date",
						"type": "date",
						"default": "MM/YY",
						"format": "DD/MM/YYYY",
						"exportable": true,
						"input": "datepicker",
						"input_group_class": "col-sm-4 col-md-4"
					},
					{
						"name": "keyIndicator",
						"title": "Key indicator",
						"type": "string",
						"exportable": true,
						"input_group_class": "col-sm-4 col-md-4"
					},
					{
						"name": "note",
						"title": "Notes",
						"type": "string",
						"exportable": true,
						"input": "textarea"
					},
					{
						"name": "controller",
						"title": "User",
						"type": "string",
						"exportable": true,
						"input_group_class": "col-sm-4 col-md-4",
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					}
				]
			},
			{
				"name": "normative",
				"type": "collection",
				"fields": [
					{
						"name": "law",
						"title": "Regulations",
						"type": "string",
						"exportable": true
					},
					{
						"name": "int_ext",
						"title": "Int-Ext",
						"type": "string",
						"exportable": true
					}
				]
			},
			{
				"name": "organizationunit",
				"type": "collection",
				"fields": [
					{
						"name": "uo",
						"title": "Organization Unit",
						"type": "string",
						"exportable": true
					},
					{
						"name": "level",
						"title": "OU Level",
						"type": "string",
						"exportable": true
					}
				]
			},
			{
				"name": "processes",
				"type": "collection",
				"fields": [
					{
						"name": "sector",
						"title": "Sector",
						"type": "string",
						"exportable": true
					},
					{
						"name": "process",
						"title": "Process",
						"type": "string",
						"exportable": true
					},
					{
						"name": "subprocess",
						"title": "Sub Process",
						"type": "string",
						"exportable": true
					},
					{
						"name": "fase",
						"title": "Fase",
						"type": "string",
						"exportable": true
					},
					{
						"name": "activity",
						"title": "Activity",
						"type": "string",
						"exportable": true
					}
				]
			},
			{
				"name": "registrycontrols",
				"type": "collection",
				"fields": [
					{
						"name": "area",
						"title": "Area",
						"type": "string",
						"exportable": true,
						"input_group_class": "col-sm-4 col-md-4"
					},
					{
						"name": "title",
						"title": "Control title",
						"type": "string",
						"exportable": true,
						"input_group_class": "col-sm-4 col-md-4"
					},
					{
						"name": "periodicity",
						"title": "Periodicity",
						"type": "string",
						"exportable": true,
						"input": "radio",
						"input_group_class": "col-sm-4 col-md-4",
						"input_items": [
							{
								"value": "monthly",
								"title": "monthly"
							},
							{
								"value": "quarterly",
								"title": "quarterly"
							},
							{
								"value": "semiannual",
								"title": "semiannual"
							},
							{
								"value": "yearly",
								"title": "yearly"
							}
						]
					},
					{
						"name": "control_description",
						"title": "Control description",
						"type": "string",
						"exportable": true,
						"input": "textarea"
					},
					{
						"name": "controller",
						"title": "Control owner",
						"type": "string",
						"exportable": true,
						"input": "select",
						"input_group_class": "col-sm-4 col-md-4",
						"lookup_query_name": "q_users",
						"lookup_key": "profile.name",
						"lookup_field": "profile.name"
					},
					{
						"name": "charttype",
						"title": "Chart type",
						"type": "string",
						"exportable": true,
						"input": "radio",
						"input_group_class": "col-sm-4 col-md-4",
						"input_items": [
							{
								"value": "line",
								"title": "line"
							},
							{
								"value": "spline",
								"title": "spline"
							},
							{
								"value": "step",
								"title": "step"
							},
							{
								"value": "area",
								"title": "area"
							},
							{
								"value": "area-spline",
								"title": "area-spline"
							},
							{
								"value": "bar",
								"title": "bar"
							},
							{
								"value": "scatter",
								"title": "scatter"
							},
							{
								"value": "pie",
								"title": "pie"
							},
							{
								"value": "donut",
								"title": "donut"
							},
							{
								"value": "gauge",
								"title": "gauge"
							}
						]
					},
					{
						"name": "enabled",
						"title": "Enabled",
						"type": "string",
						"exportable": true,
						"input": "radio",
						"input_group_class": "col-sm-4 col-md-4",
						"input_items": [
							{
								"value": "true",
								"title": "Enable"
							},
							{
								"value": "false",
								"title": "Disable"
							}
						]
					},
					{
						"name": "color",
						"title": "Color",
						"type": "string",
						"default": "coral",
						"input_group_class": "col-sm-4 col-md-4"
					}
				]
			},
			{
				"name": "risks",
				"type": "collection",
				"fields": [
					{
						"name": "risk",
						"title": "Principali aree di rischio",
						"type": "string",
						"exportable": true
					},
					{
						"name": "ICAAP",
						"title": "Principali rischi ICAAP",
						"type": "string",
						"exportable": true
					}
				]
			},
			{
				"name": "tests",
				"type": "collection",
				"fields": [
					{
						"name": "number",
						"title": "Test number",
						"type": "string",
						"default": "{{nextVerificaNumber}}",
						"exportable": true,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "title",
						"title": "Test title",
						"type": "string",
						"default": "{{titleVerifica}}",
						"required": true,
						"exportable": true
					},
					{
						"name": "objective",
						"title": "Test scope",
						"type": "string",
						"default": "{{descriptionVerifica}}",
						"exportable": true,
						"input": "textarea"
					},
					{
						"name": "description",
						"title": "Test description",
						"type": "string",
						"exportable": true,
						"input": "textarea",
						"show_in_dataview": false,
						"show_in_insert_form": false
					},
					{
						"name": "activityId",
						"title": "ActivityId",
						"type": "string",
						"exportable": true,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "result",
						"title": "Result",
						"type": "string",
						"exportable": true,
						"input": "select",
						"input_items": [
							{
								"value": "FAIL",
								"title": "FAIL"
							},
							{
								"value": "PASS",
								"title": "PASS"
							}
						],
						"show_in_insert_form": false
					}
				],
				"owner_field": "ownerId"
			},
			{
				"name": "clientprocessuniq",
				"type": "collection"
			},
			{
				"name": "clientsubprocessuniq",
				"type": "collection"
			}
		],
		"queries": [
			{
				"name": "admin_users",
				"collection": "users",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "admin_user",
				"collection": "users",
				"find_one": true,
				"filter": "{ \"_id\": \":userId\" }",
				"options": "{}"
			},
			{
				"name": "activities_list",
				"collection": "activities",
				"filter": "{\"auditors\":\":name\"}",
				"options": "{\"sort\":{\"number\":1}}"
			},
			{
				"name": "activities_null",
				"collection": "activities",
				"find_one": true,
				"filter": "{\"_id\":null}",
				"options": "{}"
			},
			{
				"name": "activity",
				"collection": "activities",
				"find_one": true,
				"filter": "{\"_id\":\":activityId\"}",
				"options": "{}"
			},
			{
				"name": "activity_all",
				"collection": "activities",
				"filter": "{}",
				"options": "{\"sort\":{\"number\":1}}"
			},
			{
				"name": "activities_no_archived",
				"collection": "activities",
				"filter": "{\"status\":{\"$ne\":\"archived\"}}",
				"options": "{}"
			},
			{
				"name": "braches_all",
				"collection": "branch",
				"filter": "{}",
				"options": "{\"sort\":{\"branch\":1}}"
			},
			{
				"name": "branch",
				"collection": "branch",
				"find_one": true,
				"filter": "{\"_id\":\":branchId\"}",
				"options": "{}"
			},
			{
				"name": "clientprocessuniq_all",
				"collection": "clientprocessuniq",
				"filter": "{}",
				"options": "{\"sort\":{\"_id\":1}}"
			},
			{
				"name": "current_user_data",
				"collection": "users",
				"find_one": true,
				"filter": "{\"_id\":\"Meteor.userId()\"}",
				"options": "{}"
			},
			{
				"name": "files_all",
				"collection": "files",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "libtest_all",
				"collection": "libtest",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "libtest",
				"collection": "libtest",
				"find_one": true,
				"filter": "{\"_id\":\":libtestId\"}",
				"options": "{}"
			},
			{
				"name": "strutture_all",
				"collection": "organizationunit",
				"filter": "{}",
				"options": "{\"sort\":{\"uo\":1}}"
			},
			{
				"name": "issue",
				"collection": "issues",
				"find_one": true,
				"filter": "{\"_id\":\":carenzaId\"}",
				"options": "{}"
			},
			{
				"name": "issues_list",
				"collection": "issues",
				"filter": "{\"activityId\":\":activityId\"}",
				"options": "{}"
			},
			{
				"name": "normativeext",
				"collection": "normative",
				"filter": "{\"int_ext\":\"external law\"}",
				"options": "{\"sort\":{\"law\":1}}"
			},
			{
				"name": "normativeint",
				"collection": "normative",
				"filter": "{\"int_ext\":\"internal law\"}",
				"options": "{\"sort\":{\"law\":1}}"
			},
			{
				"name": "normative",
				"collection": "normative",
				"find_one": true,
				"filter": "{\"_id\":\":normativeId\"}",
				"options": "{}"
			},
			{
				"name": "normative_all",
				"collection": "normative",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "q_users",
				"collection": "users",
				"filter": "{}",
				"options": "{\"profile.name\":true}"
			},
			{
				"name": "monitoring_chart",
				"collection": "monitoringdetection",
				"filter": "{}",
				"options": "{\"sort\":[[\"createdAt\",\"asc\"]]}"
			},
			{
				"name": "monitoringdetection",
				"collection": "monitoringdetection",
				"find_one": true,
				"filter": "{\"_id\":\":monitoringdetectionId\"}",
				"options": "{}"
			},
			{
				"name": "md_name",
				"collection": "monitoringdetection",
				"filter": "{\"controller\":\":name\"}",
				"options": "{}"
			},
			{
				"name": "md_all",
				"collection": "monitoringdetection",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "md_controllid",
				"collection": "monitoringdetection",
				"filter": "{\"controlId\":\":controlId\"}",
				"options": "{}"
			},
			{
				"name": "organizationunit_all",
				"collection": "organizationunit",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "organizationunit",
				"collection": "organizationunit",
				"find_one": true,
				"filter": "{\"_id\":\":organizationunitId\"}",
				"options": "{}"
			},
			{
				"name": "process_sub_all",
				"collection": "processes",
				"filter": "{\"subprocesses\":{\"$ne\":null}}",
				"options": "{\"sort\":{\"sottoprocesso\":1}}"
			},
			{
				"name": "processes_all",
				"collection": "processes",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "process",
				"collection": "processes",
				"find_one": true,
				"filter": "{\"_id\":\":processId\"}",
				"options": "{}"
			},
			{
				"name": "registrycontrols_list",
				"collection": "registrycontrols",
				"filter": "{\"controller\":\":name\",\"enabled\":\"true\"}",
				"options": "{}"
			},
			{
				"name": "registrycontrols_all",
				"collection": "registrycontrols",
				"filter": "{}",
				"options": "{\"sort\":{\"area\":1,\"title\":1}}"
			},
			{
				"name": "registrycontrol",
				"collection": "registrycontrols",
				"find_one": true,
				"filter": "{\"_id\":\":monitoringcontrolId\"}",
				"options": "{}"
			},
			{
				"name": "risks_all",
				"collection": "risks",
				"filter": "{}",
				"options": "{\"sort\":{\"risk\":1}}"
			},
			{
				"name": "risk",
				"collection": "risks",
				"find_one": true,
				"filter": "{\"_id\":\":riskId\"}",
				"options": "{}"
			},
			{
				"name": "test",
				"collection": "tests",
				"find_one": true,
				"filter": "{\"_id\":\":testId\"}",
				"options": "{}"
			},
			{
				"name": "test_null",
				"collection": "tests",
				"filter": "{\"_id\":null}",
				"options": "{}"
			},
			{
				"name": "tests_list",
				"collection": "tests",
				"filter": "{\"activityId\":\":activityId\"}",
				"options": "{}"
			},
			{
				"name": "users_null",
				"collection": "users",
				"find_one": true,
				"filter": "{ \"_id\": null }",
				"options": "{}"
			},
			{
				"name": "user_auditors_all",
				"collection": "users",
				"filter": "{\"roles\":{\"$in\":\"auditor\"}}",
				"options": "{\"sort\":{\"auditor\":1}}"
			},
			{
				"name": "clientprocessuniq",
				"collection": "clientsubprocessuniq",
				"filter": "{\"process\":\":processId\"}",
				"options": "{\"sort\":{\"subprocess\":1}}"
			},
			{
				"name": "activity_id_list",
				"collection": "activities",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "name_null",
				"collection": "activities",
				"find_one": true,
				"filter": "{\"_id\":null}",
				"options": "{}"
			}
		],
		"public_zone": {
			"type": "zone",
			"html": "<template name=\"TEMPLATE_NAME\">  \n\t<section class=\"wrapper\">\n\t\t<div class=\"container-fostrap\">\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t{{#each chart in registrycontrols_all }}\n\t\t\t\t\t\t\t<div class=\"col-xs-2 col-sm-2\">\n\t\t\t\t\t\t\t\t <div class=\"card\">\n\t\t\t\t\t\t\t\t\t {{> c3 data=(chartData chart) id=(chartId chart)}}\n\t\t\t\t\t\t\t\t\t  <div class=\"card-body\">\n\t\t\t\t\t\t\t\t\t\t<h4 class=\"card-title\">{{chart.title}} </h4>\n\t\t\t\t\t\t\t\t\t\t<p class=\"card-content\">{{chart.control_description}}</p>\n\t\t\t\t\t\t\t\t\t \t<div class=\"card-read-more\"><a href=\"http://sulaudit01:3000/monitoringdetection\" class=\"btn btn-link btn-block\">Read More</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n</template>\n\n",
			"components": [
				{
					"name": "left_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav",
					"items": [
						{
							"title": "Audit Dashboard",
							"route": "dashboard",
							"icon_class": "fa fa-desktop"
						},
						{
							"title": "Monitoring detection",
							"route": "dashboard_md",
							"icon_class": "fa fa-tachometer"
						},
						{
							"title": "Docs",
							"route": "docs",
							"icon_class": "fa fa-book"
						}
					],
					"object_type": "menu"
				},
				{
					"name": "right_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav navbar-right",
					"items": [
						{
							"title": "Register",
							"route": "register"
						},
						{
							"title": "Login",
							"route": "login"
						}
					],
					"object_type": "menu"
				}
			],
			"pages": [
				{
					"name": "home_public",
					"type": "page",
					"components": [
						{
							"name": "jumbotron",
							"type": "jumbotron",
							"title": "Audit Tool",
							"text": "Web Application for audits, the main function are:<br />- Track audits activities<br />- Monitoring progress<br />- Archiving documentation<br /><br /> This application is implemented with the support of Alfa Company Internal Audit. The application is realized with the Meteor-Kitchen framework.<br />",
							"button_title": "Continue &raquo;",
							"button_route": "dashboard",
							"object_type": "jumbotron"
						}
					]
				},
				{
					"name": "login",
					"type": "page",
					"template": "login"
				},
				{
					"name": "register",
					"type": "page",
					"template": "register"
				},
				{
					"name": "verify_email",
					"type": "page",
					"template": "verify_email",
					"route_params": [
						"verifyEmailToken"
					]
				},
				{
					"name": "forgot_password",
					"type": "page",
					"template": "forgot_password"
				},
				{
					"name": "reset_password",
					"type": "page",
					"template": "reset_password",
					"route_params": [
						"resetPasswordToken"
					]
				},
				{
					"name": "dashboard",
					"type": "page",
					"query_name": "activity_all",
					"components": [
						{
							"name": "activities",
							"type": "div",
							"query_name": "activity_all",
							"components": [
								{
									"name": "activities",
									"type": "data_view",
									"query_name": "activity_all",
									"details_route_params": [
										{
											"name": "activityId",
											"value": "this._id"
										}
									],
									"item_actions": [
										{
											"name": "print",
											"title": "Print PDF",
											"icon_class": "fa fa-print",
											"action_code": "e.preventDefault();\n       \n/*\nvar jsreport = require(\"jsreport-browser-client-dist\");\nvar activity = Activities.findOne({_id: this._id});\n\nvar issues = Issues.find({activityId: this._id}).fetch();\nvar issuesjson = {issues: []};\nissues.map(function(item) {issuesjson.issues.push(item);});\n\n\nvar tests = Tests.find({activityId: this._id}).fetch();\nvar testsjson = {tests: []};\ntests.map(function(item) {testsjson.tests.push(item);});\n           \nvar data =  $.extend(activity,issuesjson);\nvar data =  $.extend(data,testsjson);\n\n\nconsole.log('Stampa pdf. Dati:',data);\n\njsreport.serverUrl = 'http://'+window.location.hostname+':5488';\nvar request = {\n    template:{\"name\":\"AuditReport\"},\n    \"data\":activity             \n};\njsreport.render('_blank', request); \n\n\nreturn false;\n*/\n\n   var jsreport = require(\"jsreport-browser-client-dist\");\n   var data = Activities.findOne({_id: this._id});\n   Meteor.call(\"additionalData\", this._id, function(e1, r1) { if(e1) { alert('testsList: ',e1); return; }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      data =  $.extend(data,r1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  jsreport.serverUrl = 'http://'+window.location.hostname+':5488';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  var request = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t template:{\"name\":\"AuditReport\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \"data\": data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  };\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      jsreport.render('_blank', request);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  return false;\n\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t);\n\n"
										}
									],
									"fields": [
										{
											"name": "number",
											"title": "Number",
											"type": "string",
											"default": "*",
											"exportable": true,
											"show_in_insert_form": false
										},
										{
											"name": "type",
											"title": "Activity type",
											"type": "string",
											"exportable": true,
											"input": "radio",
											"input_items": [
												{
													"value": "Audit Filiale",
													"title": "Audit Filiale"
												},
												{
													"value": "Audit",
													"title": "Audit"
												},
												{
													"value": "Informativa",
													"title": "Informativa"
												},
												{
													"value": "Altre attivit√†",
													"title": "Altre attivit√†"
												}
											],
											"array_item_type": "object",
											"show_in_dataview": false,
											"show_in_insert_form": false,
											"show_in_update_form": false,
											"show_in_read_only_form": false
										},
										{
											"name": "title",
											"title": "Title",
											"type": "string",
											"required": true,
											"exportable": true
										},
										{
											"name": "startDate",
											"title": "Start date",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker"
										},
										{
											"name": "auditors",
											"title": "Auditors",
											"type": "array",
											"exportable": true,
											"input": "select-multiple"
										},
										{
											"name": "riskDetails",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "risks_all",
											"lookup_key": "rischio",
											"lookup_field": "rischio",
											"show_in_dataview": false,
											"show_in_insert_form": false
										},
										{
											"name": "company",
											"title": "Companies",
											"type": "array"
										},
										{
											"name": "sci",
											"title": "Rating",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "Positiva",
													"title": "Positiva"
												},
												{
													"value": "Parzialmente positiva +",
													"title": "Parzialmente positiva +"
												},
												{
													"value": "Parzialmente positiva",
													"title": "Parzialmente positiva"
												},
												{
													"value": "Parzialmente positiva -",
													"title": "Parzialmente positiva -"
												},
												{
													"value": "Negativa",
													"title": "Negativa"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "closeDate",
											"title": "Close date",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"input": "datepicker",
											"show_in_insert_form": false
										},
										{
											"name": "status",
											"title": "Status",
											"type": "string",
											"default": "Avviato",
											"exportable": true,
											"input": "select",
											"input_template_code": "<div title=\"Status: Start\">\n       <i class=\"{{iconReturn status }}\" aria-hidden=\"true\"></i>\n</div>",
											"display_helper": "showIcon",
											"show_in_insert_form": false,
											"show_in_update_form": false
										}
									],
									"object_type": "data_view"
								}
							],
							"object_type": "div"
						}
					],
					"pages": [
						{
							"name": "detailactivity",
							"type": "page",
							"query_params": [
								{
									"name": "activityId"
								}
							],
							"components": [
								{
									"name": "detailactivity",
									"type": "form",
									"query_name": "activity",
									"mode": "read_only",
									"close_route": "dashboard",
									"fields": [
										{
											"name": "number",
											"title": "Activity number",
											"type": "string",
											"exportable": true,
											"show_in_insert_form": false
										},
										{
											"name": "status",
											"title": "Status",
											"type": "string",
											"default": "Avviato",
											"exportable": true,
											"input": "select",
											"input_items": [
												{
													"value": "Avviato",
													"title": "Avviato"
												},
												{
													"value": "In corso",
													"title": "In corso"
												},
												{
													"value": "Completato",
													"title": "Completato"
												},
												{
													"value": "Archiviato",
													"title": "Archiviato"
												}
											],
											"array_item_type": "object",
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "type",
											"title": "Activity type",
											"type": "string",
											"exportable": true,
											"input": "radio",
											"input_items": [
												{
													"value": "Audit Filiale",
													"title": "Audit Filiale"
												},
												{
													"value": "Audit",
													"title": "Audit"
												},
												{
													"value": "Informativa",
													"title": "Informativa"
												},
												{
													"value": "Altre attivit√†",
													"title": "Altre attivit√†"
												}
											],
											"array_item_type": "object",
											"show_in_update_form": false
										},
										{
											"name": "title",
											"title": "Title",
											"type": "string",
											"exportable": true,
											"show_in_insert_form": false
										},
										{
											"name": "startDate",
											"title": "Audit start date",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker",
											"show_in_insert_form": false
										},
										{
											"name": "auditors",
											"title": "Auditors",
											"type": "array",
											"default": "{{userFullName}}",
											"exportable": true,
											"input": "select-multiple",
											"lookup_key": "auditor",
											"lookup_field": "auditor",
											"show_in_insert_form": false
										},
										{
											"name": "riskArea",
											"title": "Risk area (ICAAP)",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "risks_all",
											"lookup_key": "ICAAP",
											"lookup_field": "ICAAP",
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "riskDetails",
											"title": "Examinated risks",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "risks_all",
											"lookup_key": "rischio",
											"lookup_field": "rischio",
											"show_in_insert_form": false
										},
										{
											"name": "normativeInt",
											"title": "Internal legislation",
											"type": "array",
											"input": "select-multiple",
											"lookup_query_name": "normativeext",
											"lookup_key": "norma",
											"lookup_field": "norma",
											"show_in_insert_form": false
										},
										{
											"name": "normativeExt",
											"title": "External legislation",
											"type": "array",
											"input": "select-multiple",
											"show_in_insert_form": false
										},
										{
											"name": "process",
											"title": "Processes",
											"type": "array",
											"input": "select-multiple",
											"lookup_key": "processo",
											"lookup_field": "processo",
											"show_in_insert_form": false
										},
										{
											"name": "subprocesses",
											"title": "Sub processes",
											"type": "array",
											"input": "select-multiple",
											"lookup_query_name": "process_sub_all",
											"lookup_key": "sottoprocesso",
											"lookup_field": "sottoprocesso",
											"show_in_insert_form": false
										},
										{
											"name": "memo",
											"title": "Executive Summary",
											"type": "string",
											"input": "textarea",
											"show_in_insert_form": false
										},
										{
											"name": "branch",
											"title": "Branch",
											"type": "string",
											"input": "select",
											"lookup_query_name": "braches_all",
											"lookup_key": "filiale",
											"lookup_field": "filiale",
											"show_in_insert_form": false
										},
										{
											"name": "sci",
											"title": "Tating",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "Positiva",
													"title": "Positiva"
												},
												{
													"value": "Parzialmente positiva +",
													"title": "Parzialmente positiva +"
												},
												{
													"value": "Parzialmente positiva",
													"title": "Parzialmente positiva"
												},
												{
													"value": "Parzialmente positiva -",
													"title": "Parzialmente positiva -"
												},
												{
													"value": "Negativa",
													"title": "Negativa"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "residualRisk",
											"title": "Residual risk evaluetion",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "Alto",
													"title": "Alto"
												},
												{
													"value": "Medio",
													"title": "Medio"
												},
												{
													"value": "Basso",
													"title": "Basso"
												},
												{
													"value": "Non significativo",
													"title": "Non significativo"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "closeDate",
											"title": "Audit close date",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"input": "datepicker",
											"show_in_insert_form": false
										},
										{
											"name": "nextreadystatus",
											"type": "bool",
											"default": "false",
											"show_in_dataview": false,
											"show_in_insert_form": false,
											"show_in_update_form": false,
											"show_in_read_only_form": false
										}
									],
									"object_type": "form"
								}
							],
							"route_params": [
								"activityId"
							]
						}
					],
					"related_queries": [
						{
							"name": "issues_list"
						},
						{
							"name": "tests_list"
						}
					]
				},
				{
					"name": "dashboard_md",
					"type": "page",
					"events_code": "\"click .click-enabled\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar item = this;\t\t\n\t\tvar itemId = item ? item._id : null;\n\t\tRouter.go(\"dashboard_md.details\", mergeObjects(Router.currentRouteParams(), { controlId: this.chart.id.substring(2) }));\n\t\treturn false;\n},\n  \n\"click .card\": function(e, t) {\n\t\te.preventDefault();  \t\t\n  \t\tvar x=Registrycontrols.findOne( { _id: e.currentTarget.id.substring(3) } );\n\t\tSession.set('ModalInfo',{title: x.title, description: x.control_description, periodicity: x.periodicity, area: x.area, controller: x.controller });\n\t\t$(\"#idMyModal\").modal('show');\n}\n  \n ",
					"before_subscription_code": "Meteor.subscribe(\"MonitoringdetectionByid\");",
					"components": [
						{
							"name": "charts",
							"type": "custom_component",
							"query_name": "registrycontrols_all",
							"html": "<template name=\"TEMPLATE_NAME\">\n\t<section class=\"wrapper\">\n\t\t<div class=\"container-fostrap\">\n\t\t\t<div class=\"row\">\n\t\t\t\t{{#each x in registrycontrols_all }}\n\t\t\t\t\t{{#let chart=(chartData x) }}\n              \t\t  {{#if equals chart.enabled 'true' }}\n                        <div class=\"col-xs-2 col-sm-2\" >\n                            <div class=\"card\" id={{chart.tag}}>\n                               <div class=\"card-title\" style=\"color:{{chart.color}}\">\n                                {{ chart.title }}\n                               </div>\n                               <div class=\"img-card\">\n                                  {{#if chart.YesNo }}\t\t\t\t\t\t\n                                     <div style=\"height: 100px;\" id=chart.id>\n\t\t\t\t\t\t\t\t\t   <i class=\"{{chart.YesNo}}\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t\t\t\t </div>\n                                  {{ else }}\n                                      {{> c3 data=chart.data id=chart.id }}\n                                   {{/if}}\n                               </div>\n                            </div>\n                            {{> DashboardMdCard chart=chart}}\t\t\t\t\t\t\t\t\n                        </div>\n              \t\t  {{/if}}\n\t\t\t\t\t{{/let}}\n\t\t\t\t{{/each}}\n\t\t\t</div>\n\t\t</div>\n\t</section>\n  {{> Modal }}\n</template>\n\n\n<template name=\"DashboardMdCard\">\n          <div class=\"card-read-more\">\n          {{#if chart.date}}\n              <a class=\"btn btn-xs btn-link btn-block click-enabled\">\n                  <em>Last update  {{ formatDate (chart.date) 'MM/YYYY' }} </em>\n              </a>\n          {{else}}\n              <a class=\"btn btn-xs btn-link btn-block\" disabled>\n                   <em>No data </em>\n              </a>\n          {{/if}}\n          </div>\n</template>\n\n\n<template name=\"Modal\">\n <div class=\"modal fade\" id=\"idMyModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ModalInfo.title}}</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n\t   </div>\n\t   <div class=\"modal-body\">\n\t\t {{ModalInfo.description}}\n         <br>\n         <br>\t\t\n         <p class=\"font-weight-bold\">Periodicty: {{ModalInfo.periodicity}}</p>\n\t\t <p class=\"font-weight-bold\">Area: {{ModalInfo.area}}</p>\n     \t <p class=\"font-weight-bold\">Controller: {{ModalInfo.controller}}</p>\n\t   </div>\n\t   <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n       </div>\n    </div>\n  </div>\n</div>\n</template>",
							"js": "var clientMonitoringdetectionByid = new Mongo.Collection('clientMonitoringdetectionByid');\n\n\n// TIP&TRICK code moved in \"Before Subscription Code\" to limit subscription at this page.\n//Meteor.subscribe(\"MonitoringdetectionByid\");\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  chartData: function(chart) {\n\t\tvar x=clientMonitoringdetectionByid.findOne( { _id: chart._id } );\n\t\tif (!x) { var x = {}; x.keyIndicator = 'n/a'; x.date = '';}\n        var res = {\n               data: {\n                       json: {\n                               data: [x.keyIndicator]\n                             },\n                        type: chart.charttype\t\t\t\t\t\t\n                     },\n\t\t\t\tlegend: { show: false },\n\t\t\t\tsize: {height : 100}\n          \n\t\t\t\t};\n        \t\n\t\tswitch (x.keyIndicator)  {\n\t\t\tcase \"OK\":\n\t\t\t\tvar YesNo = \"fa fa-check fa-5x text-success\";\n\t\t\t\tbreak;\n\t\t\tcase \"KO\":\n\t\t\t\tvar YesNo = \"fa fa-close fa-5x text-danger\";\n\t\t\t\tbreak;\n          \tcase \"NA\":\n            \tvar YesNo = \"fa fa-ellipsis-h fa-5x text-warning\";\n            \tbreak;\n\t\t\t}\n\t\t\n        tag1=\"#\";\n\t\tid1=\"id\";\n\t\tid = id1.concat(chart._id);\n\t\ttag= tag1.concat(id);\n\t\treturn { data: res, YesNo: YesNo, id: id , date: x.date, title: chart.title, control_description: chart.control_description, enabled: chart.enabled, tag: tag, color: chart.color };    \n   },\n  \n  equals: function(a, b) {\n\t\treturn a === b;\n\t}\n  \n});\n\n\nTemplate.Modal.helpers({\n  ModalInfo: function() {\n\treturn Session.get('ModalInfo');\n  }\n});\n",
							"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
							"gasoline": {
								"type": "gasoline",
								"templates": [
									{
										"name": "TEMPLATE_NAME",
										"type": "template"
									}
								]
							},
							"object_type": "custom_component"
						}
					],
					"container_class": "container-fluid",
					"pages": [
						{
							"name": "details",
							"type": "page",
							"components": [
								{
									"name": "detail_view",
									"type": "data_view",
									"title": "{{registrycontrol.title}}",
									"query_name": "md_controllid",
									"page_size": "10",
									"object_type": "data_view"
								}
							],
							"route_params": [
								"controlId"
							]
						}
					]
				},
				{
					"name": "docs",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-pills nav-stacked",
							"items": [
								{
									"title": "Audit Tool",
									"route": "docs.audit_tool"
								},
								{
									"title": "Workflow",
									"route": "docs.audit_execution"
								},
								{
									"title": "Audit Framework",
									"route": "docs.framework"
								},
								{
									"title": "Monitoring controls",
									"route": "docs.controlli_continuativi"
								}
							],
							"object_type": "menu"
						}
					],
					"pages": [
						{
							"name": "audit_tool",
							"type": "page",
							"components": [
								{
									"name": "audit_tool",
									"type": "markdown",
									"source": "### Audit Tool\n\nThe AuditTool support the formalization of the main activities performed by the Internal Audit and track the monitoring detection.\n\n\n#### The high level objectives of the application are:\n\n* Automation of the audit plan (todo in release 1.0.0)\n* Structure the information currently present in the word file.\n* Automate checks for branch audits.\n* Classify audit interventions, according to specific attributes (year, area / process covered, author, ...)\n* Provide the progress of current activities.\n* Single point for archive audits and attachments.\n* Ensure the unmodifiable of the audit once archived\n\n#### Some basic features\n\n* Dashboard of status activities\n* Print the audit reports\n* Search tools for audit activities\n* Approval mechanism of the audits\n* User friendly web application\n* Integration with other systems (eg Car.sci, Active Directory).\n* Administration area to mantain the application.\n",
									"object_type": "markdown"
								}
							]
						},
						{
							"name": "audit_execution",
							"type": "page",
							"title": "Workflow attivit√† di audit",
							"components": [
								{
									"name": "audit_execution_menu",
									"type": "menu",
									"class": "nav nav-tabs",
									"items": [
										{
											"title": "Scope",
											"route": "docs.audit_execution.ambito"
										},
										{
											"title": "Tests",
											"route": "docs.audit_execution.verifiche"
										},
										{
											"title": "Issues",
											"route": "docs.audit_execution.carenze"
										},
										{
											"title": "Executive Summary",
											"route": "docs.audit_execution.ex_summary"
										},
										{
											"title": "Scoring",
											"route": "docs.audit_execution.valutazioni"
										}
									],
									"object_type": "menu"
								}
							],
							"text": "The various phases of the single \"Audit\" activity are shown below.",
							"pages": [
								{
									"name": "ambito",
									"type": "page",
									"components": [
										{
											"name": "plan",
											"type": "markdown",
											"source": "This section records the preliminary information of the activity, for example:\n¬†¬†¬†¬†\n¬†¬†¬†¬† Title\n¬†¬†¬†¬† Identification number of the activity\n¬†¬†¬†¬† Auditors\n¬†¬†¬†¬† Start date\n¬†¬†¬†¬† ....\n    \n\n\n    \n    \n\n\n\n\n\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "verifiche",
									"type": "page",
									"components": [
										{
											"name": "fieldwork",
											"type": "markdown",
											"source": "This section includes the individual verification activities carried out, defining the relative outcome for each\n\nThe tool provides a library of potential tasks to be performed.",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "carenze",
									"type": "page",
									"components": [
										{
											"name": "issues",
											"type": "markdown",
											"source": "In this section the shortcomings are recorded. The tool also allows:\n\n¬†¬†¬†¬† attach the documents\n¬†¬†¬†¬† classify the shortcomings\n¬†¬†¬†¬† ....",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "ex_summary",
									"type": "page",
									"components": [
										{
											"name": "executive_summary",
											"type": "markdown",
											"source": "In this section the auditor is called to formalize the executive summary with the possibility of attaching any documents.",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "valutazioni",
									"type": "page",
									"components": [
										{
											"name": "scoring",
											"type": "markdown",
											"source": "In this section the synthetic evaluation of the activity carried out is formalized.\n\n",
											"object_type": "markdown"
										}
									]
								}
							]
						},
						{
							"name": "framework",
							"type": "page",
							"title": "Framework",
							"components": [
								{
									"name": "framework_menu",
									"type": "menu",
									"class": "nav nav-tabs",
									"items": [
										{
											"title": "Audit universe",
											"route": "docs.framework.audit_universe"
										},
										{
											"title": "Risk Assessmnet",
											"route": "docs.framework.risk_assessmnet"
										},
										{
											"title": "Audit Plan",
											"route": "docs.framework.audit_plan"
										},
										{
											"title": "Audit execution",
											"route": "docs.framework.esecuzione_audit"
										},
										{
											"title": "Issues management",
											"route": "docs.framework.gestione_carenze"
										}
									],
									"object_type": "menu"
								}
							],
							"text": "Below are the key points of the Audit methodology.",
							"pages": [
								{
									"name": "audit_universe",
									"type": "page",
									"components": [
										{
											"name": "audit_universe_mkdown",
											"type": "markdown",
											"source": "### Audit Universe\n\nThe organizational structure contains all the operational, geographical, legal and product elements subject to audit.\n\nThe perimeter of the audit is the basis from which the risk assessment, the annual audit plan and the audit activities are developed.\n\n** Roles involved: RIA **",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "risk_assessmnet",
									"type": "page",
									"components": [
										{
											"name": "risk_universe_mkdown",
											"type": "markdown",
											"source": "### Risk Universe\n\nThe top-down Risk Assessment activity carried out to assess the inherent risk, the internal control system and the residual risk of all the elements identified in the audit perimeter.\nThe result of the Risk Assessment activity is necessary to define the annual audit plan.\n\n** Roles involved: RIA **",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "audit_plan",
									"type": "page",
									"components": [
										{
											"name": "audit_plan_markdown",
											"type": "markdown",
											"source": "### Audit Plan\n\nThe annual audit plan is prepared on the basis of the results of the Risk Assessment activity, on the coverage of past audits, the activities of continuous controls and the comparison with the other control structures of the Bank\n\nThe planning process is carried out during the fourth quarter and is finalized before the beginning of the following year.\n\nThe audit plan consists of all audits to be carried out for each \"auditable\" entity during the subsequent one. Auditors and managers are assigned with the related responsibilities.\n\n** Roles involved: RIA **",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "esecuzione_audit",
									"type": "page",
									"components": [
										{
											"name": "esecuzione_audit_markdown",
											"type": "markdown",
											"source": "### Audit execution\n\nThe conduct of the audit is divided into four sub-phases:\n\n1. notification of the audit,\n2. Planning,\n3. field work\n4. reporting.\n\n** Roles involved: Auditor **\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "gestione_carenze",
									"type": "page",
									"components": [
										{
											"name": "gestione_carenze_markdown",
											"type": "markdown",
											"source": "### Deficiency Management\n\nDuring the audit work, the shortcomings are identified and discussed with the business. If agreed, the deficiencies are recorded and documented in the work papers. The auditor is responsible for ensuring that open deficiencies are resolved consistently with the approved action plan. The auditor updates the deficiency system with follow-up activities.\n\nAs soon as the business closes the deficiency and provides adequate evidence, the auditor should schedule time to review the documentation and validate that the deficiency has been remedied, through additional testing activities. Once the deficiency is validated the auditor definitively closes the deficiency.\n\n** Roles involved: Auditor **\n",
											"object_type": "markdown"
										}
									]
								}
							]
						},
						{
							"name": "controlli_continuativi",
							"type": "page",
							"components": [
								{
									"name": "controlli_continuativi",
									"type": "markdown",
									"source": "# Monitoring controls\n\nThe continuous monitoring / control activity has the objective of contributing to providing the Internal Audit with an updated view of any problematic situations, even if they are already known and followed by the competent corporate structures.\nIn this context, the Internal Audit assesses any direct interventions attributable to in-depth analysis of individual situations that, where appropriate, may give rise to specific audits (in the context of what has already been planned, anticipating activities, or carrying out unplanned activities).",
									"object_type": "markdown"
								}
							]
						}
					]
				},
				{
					"name": "ict_audit_tool",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-pills nav-stacked",
							"items": [
								{
									"title": "A D Users",
									"route": "ict_audit_tool.ad_users"
								},
								{
									"title": "Queryldap",
									"route": "ict_audit_tool.queryldap"
								}
							],
							"object_type": "menu"
						}
					],
					"pages": [
						{
							"name": "ad_users",
							"type": "page",
							"html": "<template name=\"TEMPLATE_NAME\">\n\t{{> QUERY_LDAP}}\n</template>\n\n\n<template name=\"QUERY_LDAP\">\n\t<h1>\n\t\t\n\t\t\t\tLista users  Active Directory\n\t\t\t\n\t</h1>\n\t<div>\n\t\t<button class=\"btn btn-default\" id=\"users\">\n\t\t\t\n\t\t\t\t\t\tAggiornamento users\n\t\t\t\t\t\n\t\t</button>\n\t\t{{#if profili_all}}\n\t\t\t<table class=\"table table-striped\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDepartment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWhen Changed\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{{#each profili_all}}\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{user}}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        {{department}}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{whenCreated}}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t{{/each}}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t{{else}}\n\t\t\t<h3>\n\t\t\t\t\n\t\t\t\t\t\t\t\tNessun user :(\n\t\t\t\t\t\t\t\n\t\t\t</h3>\n\t\t{{/if}}\n\t</div>\n</template>\n\n",
							"js": "\n\nTemplate.TEMPLATE_NAME.events({\n\n});\n\nTemplate.TEMPLATE_NAME.helpers({\n\n});\n\nTemplate.QUERY_LDAP.events({\n\t\"click #users\": function(e, t) {\n\t\t\n\t\t\t\tMeteor.call(\"ldapquery\", {}, function(e, r) {\n\t\t\t\t    if(e) console.log(\"errore:\",e); \n\t\t\t\t\tconsole.log(\"query OK\");\n\t\t\t\t});      \n\t\t\t\t            \n\t\t\t\n\t}\n});\n\nTemplate.QUERY_LDAP.helpers({\n\tprofili_all: function() {\n\t\t\n\t\t\t\t//console.log('Numero profili rilevati:',Profili.find().count());\n\t\t\t\treturn Profili.find();\n\t\t\t\n\t}\n});",
							"jsx": "/*IMPORTS*/\n\nexport class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<QUERY_LDAP />\n\t\t);\n\t}\n}\n\nexport const TEMPLATE_NAMEContainer = createContainer(function(props) {\n\t/*SUBSCRIPTIONS*/\n}, TEMPLATE_NAME);\n/*IMPORTS*/\n\nexport class QUERY_LDAP extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\tprofili_all() {\n\t\t\n\t\t\t\t//console.log('Numero profili rilevati:',Profili.find().count());\n\t\t\t\treturn Profili.find();\n\t\t\t\n\t}\n\n\tonClickUsers(e) {\n\t\t\n\t\t\t\tMeteor.call(\"ldapquery\", {}, function(e, r) {\n\t\t\t\t    if(e) console.log(\"errore:\",e); \n\t\t\t\t\tconsole.log(\"query OK\");\n\t\t\t\t});      \n\t\t\t\t            \n\t\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>\n\t\t\t\t\t\n\t\t\t\t\t\t\tLista users  Active Directory\n\t\t\t\t\t\t\n\t\t\t\t</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"btn btn-default\" id=\"users\" onClick={this.onClickUsers}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tAggiornamento users\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t</button>\n\t\t\t\t\t{this.profili_all() ? (\n\t\t\t\t\t\t<table className=\"table table-striped\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDepartment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWhen Changed\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprofili_all.map(function(item, itemIndex) {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={itemIndex}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.user}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        {item.department}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.whenCreated}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tNessun user :(\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport const QUERY_LDAPContainer = createContainer(function(props) {\n\t/*SUBSCRIPTIONS*/\n}, QUERY_LDAP);",
							"gasoline": {
								"type": "gasoline",
								"templates": [
									{
										"name": "TEMPLATE_NAME",
										"children": [
											{
												"type": "inclusion",
												"template": "QUERY_LDAP",
												"object_type": "gas_inclusion"
											}
										],
										"type": "template"
									},
									{
										"name": "QUERY_LDAP",
										"children": [
											{
												"children": [
													{
														"type": "text",
														"text": "\n\t\tLista users  Active Directory\n\t",
														"object_type": "gas_text"
													}
												],
												"type": "html",
												"element": "h1",
												"object_type": "gas_html"
											},
											{
												"children": [
													{
														"children": [
															{
																"type": "text",
																"text": "\n\t\t\tAggiornamento users\n\t\t",
																"object_type": "gas_text"
															}
														],
														"type": "html",
														"element": "button",
														"attributes": [
															{
																"name": "class",
																"value": "btn btn-default"
															},
															{
																"name": "id",
																"value": "users"
															}
														],
														"events": [
															{
																"type": "event",
																"event": "onclick",
																"handler": "onClickUsers"
															}
														],
														"object_type": "gas_html"
													},
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [
																									{
																										"type": "text",
																										"text": "\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t",
																										"object_type": "gas_text"
																									}
																								],
																								"type": "html",
																								"element": "th",
																								"object_type": "gas_html"
																							},
																							{
																								"children": [
																									{
																										"type": "text",
																										"text": "\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDepartment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t",
																										"object_type": "gas_text"
																									}
																								],
																								"type": "html",
																								"element": "th",
																								"object_type": "gas_html"
																							},
																							{
																								"children": [
																									{
																										"type": "text",
																										"text": "\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWhen Changed\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t",
																										"object_type": "gas_text"
																									}
																								],
																								"type": "html",
																								"element": "th",
																								"object_type": "gas_html"
																							}
																						],
																						"type": "html",
																						"element": "tr",
																						"object_type": "gas_html"
																					}
																				],
																				"type": "html",
																				"element": "thead",
																				"object_type": "gas_html"
																			},
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [
																									{
																										"children": [
																											{
																												"type": "text",
																												"text": "\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{user}}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t",
																												"object_type": "gas_text"
																											}
																										],
																										"type": "html",
																										"element": "td",
																										"object_type": "gas_html"
																									},
																									{
																										"children": [
																											{
																												"type": "text",
																												"text": "\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        {{department}}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t",
																												"object_type": "gas_text"
																											}
																										],
																										"type": "html",
																										"element": "td",
																										"object_type": "gas_html"
																									},
																									{
																										"children": [
																											{
																												"type": "text",
																												"text": "\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{whenCreated}}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t",
																												"object_type": "gas_text"
																											}
																										],
																										"type": "html",
																										"element": "td",
																										"object_type": "gas_html"
																									}
																								],
																								"type": "html",
																								"element": "tr",
																								"object_type": "gas_html"
																							}
																						],
																						"type": "loop",
																						"dataset": "profili_all",
																						"object_type": "gas_loop"
																					}
																				],
																				"type": "html",
																				"element": "tbody",
																				"object_type": "gas_html"
																			}
																		],
																		"type": "html",
																		"element": "table",
																		"attributes": [
																			{
																				"name": "class",
																				"value": "table table-striped"
																			}
																		],
																		"object_type": "gas_html"
																	}
																],
																"type": "condition-true",
																"object_type": "gas_condition_true"
															},
															{
																"children": [
																	{
																		"children": [
																			{
																				"type": "text",
																				"text": "\n\t\t\t\tNessun user :(\n\t\t\t",
																				"object_type": "gas_text"
																			}
																		],
																		"type": "html",
																		"element": "h3",
																		"object_type": "gas_html"
																	}
																],
																"type": "condition-false",
																"object_type": "gas_condition_false"
															}
														],
														"type": "condition",
														"condition": "profili_all",
														"object_type": "gas_condition"
													}
												],
												"type": "html",
												"object_type": "gas_html"
											}
										],
										"type": "template",
										"handlers": [
											{
												"name": "onClickUsers",
												"type": "handler",
												"code": "\n\t\tMeteor.call(\"ldapquery\", {}, function(e, r) {\n\t\t    if(e) console.log(\"errore:\",e); \n\t\t\tconsole.log(\"query OK\");\n\t\t});      \n\t\t            \n\t"
											}
										],
										"helpers": [
											{
												"name": "profili_all",
												"type": "helper",
												"code": "\n\t\t//console.log('Numero profili rilevati:',Profili.find().count());\n\t\treturn Profili.find();\n\t"
											}
										]
									}
								]
							},
							"use_gasoline": true,
							"user_defined_template": true
						},
						{
							"name": "queryldap",
							"type": "page",
							"components": [
								{
									"name": "queryldap",
									"type": "custom_component",
									"html": "<template name=\"TEMPLATE_NAME\">\n   \n  <button class=\"btn btn-default\" id=\"users\">Ldap query</button>\n     \n  <table class=\"table table-striped\">\n    \n   {{#each genericldapquery}}\n    \t\t\n  \t <tr>      \n       <td class=\"col-md-2\">{{@index}}</td>\n       <td class=\"col-md-2\">{{dn}}</td>\n       <td class=\"col-md-2\">{{description}}</td>\n       <td class=\"col-md-2\">{{whenCreated}}</td>       \n     </tr>\n  \t\t\n  {{/each}}\n  \t  \n  </table>  \n    \n</template>\n\n\n\n",
									"js": "Template.TEMPLATE_NAME.events({\n     'click #users': function () {       \n\n          var query = '(&(objectClass=person)(objectClass=user))';\n          //var query = '(&(objectCategory=user)(memberOf=CN=Domain Admins,CN=Users,DC=intranet,DC=ifis,DC=local))';\n       \n          Meteor.call(\"genericldapquery\", query, function(e, r) {\n\t\t\tif(e) console.log(\"errore:\",e); \n\t\t\tconsole.log(\"Called ldap query\",r);\n          });\n    } \n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n      genericldapquery: function () {\n          var k = Ldap.find({ domain_users: { $ne: null }},{ sort: { domain_users: 1 }, limit: 1}).fetch()[0].domain_users;\n \n          return _.flatten(k);            \n      } \n});\n        \n        \n        ",
									"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n}",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"type": "template"
											}
										]
									},
									"object_type": "custom_component"
								}
							]
						}
					]
				}
			]
		},
		"private_zone": {
			"type": "zone",
			"components": [
				{
					"name": "left_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav",
					"items": [
						{
							"title": "Audit",
							"route": "home_private",
							"icon_class": "fa fa-home"
						},
						{
							"title": "Monitoring detection",
							"route": "monitoringdetection",
							"icon_class": "fa fa-tachometer"
						}
					],
					"object_type": "menu"
				},
				{
					"name": "right_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav navbar-right",
					"items": [
						{
							"title": "Admin",
							"route": "admin",
							"icon_class": "fa fa-wrench"
						},
						{
							"title": "{{userEmail}}",
							"icon_class": "fa fa-cog",
							"items": [
								{
									"title": "Settings",
									"route": "user_settings"
								},
								{
									"title": "Logout",
									"route": "logout"
								}
							]
						}
					],
					"object_type": "menu"
				}
			],
			"container_class": "container-fluid",
			"pages": [
				{
					"name": "logout",
					"type": "page",
					"template": "logout"
				},
				{
					"name": "home_private",
					"type": "page",
					"title": "Welcome {{userFullName}}!",
					"query_name": "activity_all",
					"components": [
						{
							"name": "audit_view",
							"type": "data_view",
							"title": "Activity list",
							"helpers_code": "\n",
							"query_name": "activities_list",
							"query_params": [
								{
									"name": "name",
									"value": "Meteor.user().profile.name"
								}
							],
							"delete_confirmation_message": "Delete the Audit ? Are you sure ?",
							"page_size": "10",
							"insert_route": "audits",
							"details_route": "audits",
							"edit_route": "audits",
							"insert_route_params": [
								{
									"name": "activityId",
									"value": "Random.id([6])"
								}
							],
							"details_route_params": [
								{
									"name": "activityId",
									"value": "this._id"
								}
							],
							"edit_route_params": [
								{
									"name": "activityId",
									"value": "this._id"
								}
							],
							"insert_button_title": "Create a new Audit",
							"update_button_title": "update",
							"fields": [
								{
									"name": "title",
									"title": "Title",
									"type": "string",
									"required": true,
									"exportable": true
								},
								{
									"name": "number",
									"title": "Number",
									"type": "string",
									"default": "{{nextAuditNumber}}",
									"exportable": true,
									"show_in_update_form": false
								},
								{
									"name": "auditors",
									"title": "List Auditor",
									"type": "string",
									"default": "{{userMeteor}}",
									"exportable": true
								},
								{
									"name": "startDate",
									"title": "Start Audit date",
									"type": "date",
									"default": "today",
									"format": "DD/MM/YYYY",
									"exportable": true,
									"input": "datepicker"
								},
								{
									"name": "branch",
									"title": "Branch",
									"type": "string",
									"exportable": true
								},
								{
									"name": "company",
									"title": "Company",
									"type": "array"
								},
								{
									"name": "status",
									"title": "Status",
									"type": "string",
									"exportable": true,
									"input": "select",
									"display_helper": "showIcon",
									"array_item_type": "object",
									"show_in_insert_form": false,
									"show_in_update_form": false
								}
							],
							"object_type": "data_view"
						}
					],
					"text": "This is your personal page. From here you can start new audit, and so on...\n",
					"render_subpages": "never",
					"controller_before_action": "UserName = Users.findOne({_id: Meteor.userId() }).profile.name;\nSession.set('UserName', UserName);\nthis.next();"
				},
				{
					"name": "admin",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-stacked nav-pills",
							"items": [
								{
									"title": "Config",
									"route": "admin.config"
								},
								{
									"title": "Users",
									"route": "admin.users"
								},
								{
									"title": "Monitoring Controls",
									"route": "admin.monitoring_controls"
								},
								{
									"title": "Audit configure",
									"route": "admin.audit"
								}
							],
							"object_type": "menu"
						}
					],
					"container_class": "container-fluid",
					"roles": [
						"admin"
					],
					"pages": [
						{
							"name": "config",
							"type": "page",
							"title": "Config",
							"components": [
								{
									"name": "config",
									"type": "custom_component",
									"html": "<template name=\"TEMPLATE_NAME\">\n  \n   <h6> Configure CKEDITOR, the advanced editor </h6>\n  \n  <a href={{link1}}>{{link1}}</a>\n  \n  <br>\n  <br>\n  <br>\n  \n  <h6> Configure PDF Template (JSrepot) </h6>\n  <a href={{link2}}>{{link2}}</a>\n  \n</template>\n\n",
									"js": "\n\nTemplate.TEMPLATE_NAME.events({\n\n});\n\nTemplate.TEMPLATE_NAME.helpers({\n  \n  link1: function(chart) {\n     return 'http://'+window.location.host+'/samples/index.html';          \n  },\n  \n  link2: function(chart) {    \n     return 'http://'+window.location.hostname+':5488/';      \n  }\n\n});",
									"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"type": "template"
											}
										]
									},
									"object_type": "custom_component"
								}
							],
							"html": "Modifica l'editor avanzato (CKEDITOR)\n\nhttp://localhost:5000/samples/index.html\n\nModifica Template PDF(JSrepot)\n\nhttp://localhost:5488/",
							"container_class": "container-fluid",
							"roles": [
								"admin"
							]
						},
						{
							"name": "users",
							"type": "page",
							"components": [
								{
									"name": "view",
									"type": "data_view",
									"title": "Users",
									"query_name": "admin_users",
									"text_if_empty": "No users yet",
									"insert_route": "admin.users.insert",
									"details_route": "admin.users.details",
									"edit_route": "admin.users.edit",
									"details_route_params": [
										{
											"name": "userId",
											"value": "this._id"
										}
									],
									"edit_route_params": [
										{
											"name": "userId",
											"value": "this._id"
										}
									],
									"fields": [
										{
											"name": "profile.name",
											"title": "Name",
											"type": "string"
										},
										{
											"name": "profile.email",
											"title": "E-mail",
											"type": "string"
										},
										{
											"name": "roles",
											"title": "Role",
											"type": "string"
										}
									],
									"object_type": "data_view"
								}
							],
							"container_class": "container-fluid",
							"roles": [
								"admin"
							],
							"pages": [
								{
									"name": "details",
									"type": "page",
									"components": [
										{
											"name": "details_form",
											"type": "form",
											"title": "User details",
											"query_name": "admin_user",
											"mode": "read_only",
											"close_route": "admin.users",
											"back_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string"
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email"
												},
												{
													"name": "roles",
													"title": "Role",
													"type": "string"
												}
											],
											"object_type": "form"
										}
									],
									"route_params": [
										"userId"
									]
								},
								{
									"name": "insert",
									"type": "page",
									"components": [
										{
											"name": "insert_form",
											"type": "form",
											"title": "Add new user",
											"query_name": "users_null",
											"mode": "insert",
											"submit_route": "admin.users",
											"cancel_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string",
													"required": true
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email",
													"required": true
												},
												{
													"name": "password",
													"title": "Password",
													"type": "string",
													"required": true,
													"input": "password"
												}
											],
											"object_type": "form"
										}
									]
								},
								{
									"name": "edit",
									"type": "page",
									"components": [
										{
											"name": "edit_form",
											"type": "form",
											"title": "Edit user",
											"query_name": "admin_user",
											"mode": "update",
											"submit_route": "admin.users",
											"cancel_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string",
													"required": true
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email",
													"required": true
												},
												{
													"name": "roles",
													"title": "Role",
													"type": "array",
													"input": "radio",
													"input_items": [
														{
															"value": "user",
															"title": "User"
														},
														{
															"value": "auditor",
															"title": "Auditor"
														},
														{
															"value": "admin",
															"title": "Admin"
														},
														{
															"value": "blocked",
															"title": "Blocked"
														}
													]
												}
											],
											"object_type": "form"
										}
									],
									"route_params": [
										"userId"
									]
								}
							]
						},
						{
							"name": "monitoring_controls",
							"type": "page",
							"components": [
								{
									"name": "view",
									"type": "data_view",
									"title": "Monitoring controls",
									"query_name": "registrycontrols_all",
									"delete_confirmation_message": "Delete the control ? Are you sure?",
									"page_size": "10",
									"insert_route": "admin.monitoring_controls.update",
									"details_route": "admin.monitoring_controls.update",
									"edit_route": "admin.monitoring_controls.update",
									"insert_route_params": [
										{
											"name": "monitoringcontrolId",
											"value": "Random.id([6])"
										}
									],
									"details_route_params": [
										{
											"name": "monitoringcontrolId",
											"value": "this._id"
										}
									],
									"edit_route_params": [
										{
											"name": "monitoringcontrolId",
											"value": "this._id"
										}
									],
									"insert_button_title": "Create a new control",
									"update_button_title": "update",
									"fields": [
										{
											"name": "area",
											"title": "Area",
											"type": "string",
											"exportable": true
										},
										{
											"name": "title",
											"title": "Control title",
											"type": "string",
											"exportable": true
										},
										{
											"name": "control_description",
											"title": "Control description",
											"type": "string",
											"exportable": true,
											"input": "textarea"
										},
										{
											"name": "periodicity",
											"title": "Periodicity",
											"type": "string",
											"exportable": true,
											"input": "radio",
											"input_items": [
												{
													"value": "monthly",
													"title": "monthly"
												},
												{
													"value": "quarterly",
													"title": "quarterly"
												},
												{
													"value": "semiannual",
													"title": "semiannual"
												},
												{
													"value": "yearly",
													"title": "yearly"
												}
											]
										},
										{
											"name": "controller",
											"title": "Control owner",
											"type": "string",
											"exportable": true,
											"input": "select",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "q_users",
											"lookup_key": "profile.name",
											"lookup_field": "profile.name"
										},
										{
											"name": "charttype",
											"title": "Chart type",
											"type": "string",
											"exportable": true,
											"input": "radio",
											"input_items": [
												{
													"value": "line",
													"title": "line"
												},
												{
													"value": "spline",
													"title": "spline"
												},
												{
													"value": "step",
													"title": "step"
												},
												{
													"value": "area",
													"title": "area"
												},
												{
													"value": "area-spline",
													"title": "area-spline"
												},
												{
													"value": "bar",
													"title": "bar"
												},
												{
													"value": "scatter",
													"title": "scatter"
												},
												{
													"value": "pie",
													"title": "pie"
												},
												{
													"value": "donut",
													"title": "donut"
												},
												{
													"value": "gauge",
													"title": "gauge"
												}
											]
										},
										{
											"name": "color",
											"title": "Color",
											"type": "string"
										},
										{
											"name": "enabled",
											"title": "Enabled",
											"type": "string",
											"exportable": true,
											"input": "radio"
										}
									],
									"object_type": "data_view"
								}
							],
							"container_class": "container-fluid",
							"roles": [
								"admin"
							],
							"pages": [
								{
									"name": "update",
									"type": "page",
									"components": [
										{
											"name": "form",
											"type": "form",
											"class": "row",
											"title": "Edit Monitoring controls",
											"query_name": "registrycontrol",
											"mode": "update",
											"submit_route": "admin.monitoring_controls",
											"cancel_route": "admin.monitoring_controls",
											"submit_code": "\nif (Session.get('monitoringcontrolId').length === 6) {    \n\tMeteor.call(\"registrycontrolsInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else \n         Meteor.call(\"registrycontrolsUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
											"submit_button_title": "Save",
											"fields": [
												{
													"name": "area",
													"title": "Area",
													"type": "string",
													"exportable": true,
													"input_group_class": "col-sm-4 col-md-4"
												},
												{
													"name": "title",
													"title": "Control title",
													"type": "string",
													"exportable": true,
													"input_group_class": "col-sm-4 col-md-4"
												},
												{
													"name": "periodicity",
													"title": "Periodicity",
													"type": "string",
													"exportable": true,
													"input": "radio",
													"input_group_class": "col-sm-4 col-md-4",
													"input_items": [
														{
															"value": "monthly",
															"title": "monthly"
														},
														{
															"value": "quarterly",
															"title": "quarterly"
														},
														{
															"value": "semiannual",
															"title": "semiannual"
														},
														{
															"value": "yearly",
															"title": "yearly"
														}
													]
												},
												{
													"name": "control_description",
													"title": "Control description",
													"type": "string",
													"exportable": true,
													"input": "textarea"
												},
												{
													"name": "controller",
													"title": "Control owner",
													"type": "string",
													"exportable": true,
													"input": "select",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "q_users",
													"lookup_key": "profile.name",
													"lookup_field": "profile.name"
												},
												{
													"name": "charttype",
													"title": "Chart type",
													"type": "string",
													"exportable": true,
													"input": "radio",
													"input_group_class": "col-sm-4 col-md-4",
													"input_items": [
														{
															"value": "line",
															"title": "line"
														},
														{
															"value": "spline",
															"title": "spline"
														},
														{
															"value": "step",
															"title": "step"
														},
														{
															"value": "area",
															"title": "area"
														},
														{
															"value": "area-spline",
															"title": "area-spline"
														},
														{
															"value": "bar",
															"title": "bar"
														},
														{
															"value": "scatter",
															"title": "scatter"
														},
														{
															"value": "pie",
															"title": "pie"
														},
														{
															"value": "donut",
															"title": "donut"
														},
														{
															"value": "gauge",
															"title": "gauge"
														}
													]
												},
												{
													"name": "color",
													"title": "Color",
													"type": "string",
													"default": "coral",
													"input_group_class": "col-sm-4 col-md-4"
												},
												{
													"name": "enabled",
													"title": "Enabled",
													"type": "string",
													"exportable": true,
													"input": "radio",
													"input_group_class": "col-sm-4 col-md-4",
													"input_items": [
														{
															"value": "true",
															"title": "Enable"
														},
														{
															"value": "false",
															"title": "Disable"
														}
													]
												}
											],
											"object_type": "form"
										}
									],
									"route_params": [
										"monitoringcontrolId"
									],
									"roles": [
										"admin"
									],
									"controller_after_action": "Session.set('monitoringcontrolId',this.params.monitoringcontrolId);"
								}
							]
						},
						{
							"name": "audit",
							"type": "page",
							"components": [
								{
									"name": "audit_menu",
									"type": "menu",
									"class": "nav nav-tabs",
									"items": [
										{
											"title": "Branch",
											"route": "admin.audit.branch"
										},
										{
											"title": "Library test",
											"route": "admin.audit.libtest"
										},
										{
											"title": "Regulations",
											"route": "admin.audit.regulations"
										},
										{
											"title": "Organization Unit",
											"route": "admin.audit.organizationunit"
										},
										{
											"title": "Process",
											"route": "admin.audit.process"
										},
										{
											"title": "Risk",
											"route": "admin.audit.risk"
										}
									],
									"object_type": "menu"
								}
							],
							"html": "<template name=\"TEMPLATE_NAME\">\n<div class=\"text-right\">\n  <div id=\"dropzone\" class=\"btn btn-primary btn-sx dropzone\">\n     {{#unless uploading}}\t\t\n        <label for=\"upload\" title=\"Click to upload or drag&drop CSV file\" style=\"cursor: pointer;\">Upload CSV\n          <span class=\"fa fa-cloud-upload\"></span>\n    \t</label>\n        <input type=\"file\" multiple id=\"upload\" style=\"display: none;\">\n     {{else}}\n      \t<p><i class=\"fa fa-spin fa-refresh\"></i> Uploading files...</p>\n  \t {{/unless}}\n  </div>\n </div>\n</template>\n",
							"text": "Here you can configure data for Audit section.",
							"container_class": "container-fluid",
							"roles": [
								"admin"
							],
							"pages": [
								{
									"name": "branch",
									"type": "page",
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"title": "Branch",
											"query_name": "braches_all",
											"components": [
												{
													"name": "uploadcsv_button",
													"type": "custom_component",
													"dest_selector": "#dataview-controls-export",
													"dest_position": "after",
													"html": "<template name=\"TEMPLATE_NAME\">\n  <div id=\"dataview-uploadcv\" class=\"form-group\" style=\"cursor: pointer;\">\n\t<div id=\"dropzone\" class=\"btn btn-primary btn-sx dropzone\" style=\"cursor: pointer;\">\n\t\t{{#unless uploading}}\n\t\t\t<label for=\"upload\" title=\"Click to upload or drag&drop CSV file\" style=\"cursor: pointer; margin-bottom: 0px; font-weight: normal;\">\n\t\t\t\t<span class=\"fa fa-cloud-upload\"></span>\n\t\t\t\tUpload CSV\n\t\t\t</label>\n\t\t\t<input type=\"file\" multiple id=\"upload\" style=\"display: none;\">\n\t\t{{else}}\n\t\t\t<p>\n\t\t\t\t<i class=\"fa fa-spin fa-refresh\"></i>\n\t\t\t\tUploading files...\n\t\t\t</p>\n\t\t{{/unless}}\n\t</div>\n  </div>    \n</template>\n\n",
													"js": "var pageSession = new ReactiveDict();\n\nTemplate.TEMPLATE_NAME.onCreated(function() {\n\tpageSession.set(\"uploading\", false );\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  uploading() {\n    return pageSession.get(\"uploading\");\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n      \tallowedFileExtensions: [\"txt\", \"csv\"],\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n   'change #upload': function(event, temp) {\n      event.preventDefault();\n     \n     console.log('upload',event.target.files[0].name);\n      bootbox.dialog({       \t\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tpageSession.set(\"uploading\", true );\n                      \tconsole.log('p',event.target.files[0]);\n\t\t\t\t\t    Papa.parse( event.target.files[0], {\n      \t\t\t\t\t  header: true,\n      \t\t\t\t\t  complete( results, file ) {                            \n        \t\t\t\t    Meteor.call( 'parseUpload', event.target.files[0].name.split('.')[0], results.data, ( error, response ) => {\n          \t\t\t\t\t if ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t   } else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n          \t\t\t\t\t }\n        \t\t\t\t  });\n      \t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanger: {\n\t\t\t\tlabel: \"No\",\n\t\t\t\tclassName: \"btn-default\"\n\t\t\t}\n\t\t}\n\t  });\n   },\n\n  'dropped #dropzone': function(event, temp) {\n   event.preventDefault();\n   FS.Utility.eachFile(event, function(file) { \n     //console.log('file',file.name);\n     bootbox.dialog({\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n              \t\t\tpageSession.set(\"uploading\", true );\n\t\t\t\t\t    Papa.parse( file.name, {\n      \t\t\t\t\theader: true,\n      \t\t\t\t\tcomplete( results, file ) {\n        \t\t\t\tMeteor.call( 'parseUpload', file.split('.')[0] , results.data, ( error, response ) => {\n          \t\t\t\t\tif ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t} else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\tdanger: {\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n});   \n\n",
													"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
													"gasoline": {
														"type": "gasoline",
														"templates": [
															{
																"name": "TEMPLATE_NAME",
																"type": "template"
															}
														]
													},
													"object_type": "custom_component"
												}
											],
											"delete_confirmation_message": "Delete ? Are you sure?",
											"page_size": "20",
											"insert_route": "admin.audit_configure.branch_all.update",
											"details_route": "admin.audit_configure.branch_all.update",
											"edit_route": "admin.audit_configure.branch_all.update",
											"delete_route": "admin.audit_configure.branch_all",
											"insert_route_params": [
												{
													"name": "branchId",
													"value": "Random.id([6])"
												}
											],
											"details_route_params": [
												{
													"name": "branchId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "branchId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Add new",
											"update_button_title": "update",
											"object_type": "data_view"
										}
									],
									"container_class": "container-fluid",
									"pages": [
										{
											"name": "update",
											"type": "page",
											"components": [
												{
													"name": "form",
													"type": "form",
													"title": "Edit Branch",
													"query_name": "branch",
													"mode": "update",
													"submit_route": "admin.audit_configure.branch_all",
													"cancel_route": "admin.audit_configure.branch_all",
													"submit_code": "if (Session.get('branchId').length === 6) {    \n\tMeteor.call(\"branchInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else \n         Meteor.call(\"branchUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
													"object_type": "form"
												}
											],
											"route_params": [
												"branchId"
											],
											"roles": [
												"admin"
											],
											"controller_after_action": "Session.set('branchId',this.params.branchId);"
										}
									]
								},
								{
									"name": "libtest",
									"type": "page",
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"title": "Libtest",
											"query_name": "libtest_all",
											"components": [
												{
													"name": "uploadcsv_button",
													"type": "custom_component",
													"dest_selector": "#dataview-controls-export",
													"dest_position": "after",
													"html": "<template name=\"TEMPLATE_NAME\">\n  <div id=\"dataview-uploadcv\" class=\"form-group\" style=\"cursor: pointer;\">\n\t<div id=\"dropzone\" class=\"btn btn-primary btn-sx dropzone\" style=\"cursor: pointer;\">\n\t\t{{#unless uploading}}\n\t\t\t<label for=\"upload\" title=\"Click to upload or drag&drop CSV file\" style=\"cursor: pointer; margin-bottom: 0px; font-weight: normal;\">\n\t\t\t\t<span class=\"fa fa-cloud-upload\"></span>\n\t\t\t\tUpload CSV\n\t\t\t</label>\n\t\t\t<input type=\"file\" multiple id=\"upload\" style=\"display: none;\">\n\t\t{{else}}\n\t\t\t<p>\n\t\t\t\t<i class=\"fa fa-spin fa-refresh\"></i>\n\t\t\t\tUploading files...\n\t\t\t</p>\n\t\t{{/unless}}\n\t</div>\n  </div>    \n</template>\n\n",
													"js": "var pageSession = new ReactiveDict();\n\nTemplate.TEMPLATE_NAME.onCreated(function() {\n\tpageSession.set(\"uploading\", false );\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  uploading() {\n    return pageSession.get(\"uploading\");\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n      \tallowedFileExtensions: [\"txt\", \"csv\"],\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n   'change #upload': function(event, temp) {\n      event.preventDefault();\n     \n     console.log('upload',event.target.files[0].name);\n      bootbox.dialog({       \t\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tpageSession.set(\"uploading\", true );\n                      \tconsole.log('p',event.target.files[0]);\n\t\t\t\t\t    Papa.parse( event.target.files[0], {\n      \t\t\t\t\t  header: true,\n      \t\t\t\t\t  complete( results, file ) {                            \n        \t\t\t\t    Meteor.call( 'parseUpload', event.target.files[0].name.split('.')[0], results.data, ( error, response ) => {\n          \t\t\t\t\t if ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t   } else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n          \t\t\t\t\t }\n        \t\t\t\t  });\n      \t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanger: {\n\t\t\t\tlabel: \"No\",\n\t\t\t\tclassName: \"btn-default\"\n\t\t\t}\n\t\t}\n\t  });\n   },\n\n  'dropped #dropzone': function(event, temp) {\n   event.preventDefault();\n   FS.Utility.eachFile(event, function(file) { \n     //console.log('file',file.name);\n     bootbox.dialog({\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n              \t\t\tpageSession.set(\"uploading\", true );\n\t\t\t\t\t    Papa.parse( file.name, {\n      \t\t\t\t\theader: true,\n      \t\t\t\t\tcomplete( results, file ) {\n        \t\t\t\tMeteor.call( 'parseUpload', file.split('.')[0] , results.data, ( error, response ) => {\n          \t\t\t\t\tif ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t} else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\tdanger: {\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n});   \n\n",
													"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
													"gasoline": {
														"type": "gasoline",
														"templates": [
															{
																"name": "TEMPLATE_NAME",
																"type": "template"
															}
														]
													},
													"object_type": "custom_component"
												}
											],
											"delete_confirmation_message": "Delete ? Are you sure?",
											"page_size": "20",
											"insert_route": "admin.audit_configure.libtest_all.update",
											"details_route": "admin.audit_configure.libtest_all.update",
											"edit_route": "admin.audit_configure.libtest_all.update",
											"delete_route": "admin.audit_configure.libtest_all",
											"insert_route_params": [
												{
													"name": "libtestId",
													"value": "Random.id([6])"
												}
											],
											"details_route_params": [
												{
													"name": "libtestId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "libtestId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Add new",
											"update_button_title": "update",
											"object_type": "data_view"
										}
									],
									"container_class": "container-fluid",
									"roles": [
										"admin"
									],
									"pages": [
										{
											"name": "update",
											"type": "page",
											"components": [
												{
													"name": "form",
													"type": "form",
													"title": "Edit Libtest",
													"query_name": "libtest",
													"mode": "update",
													"submit_route": "admin.audit_configure.libtest_all",
													"cancel_route": "admin.audit_configure.libtest_all",
													"submit_code": "if (Session.get('libtestId').length === 6) {    \n\tMeteor.call(\"libtestInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else \n         Meteor.call(\"libtestUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
													"object_type": "form"
												}
											],
											"route_params": [
												"libtestId"
											],
											"roles": [
												"admin"
											],
											"controller_after_action": "Session.set('libtestId',this.params.libtestId);"
										}
									]
								},
								{
									"name": "regulations",
									"type": "page",
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"title": "Normative",
											"query_name": "normative_all",
											"components": [
												{
													"name": "uploadcsv_button",
													"type": "custom_component",
													"dest_selector": "#dataview-controls-export",
													"dest_position": "after",
													"html": "<template name=\"TEMPLATE_NAME\">\n  <div id=\"dataview-uploadcv\" class=\"form-group\" style=\"cursor: pointer;\">\n\t<div id=\"dropzone\" class=\"btn btn-primary btn-sx dropzone\" style=\"cursor: pointer;\">\n\t\t{{#unless uploading}}\n\t\t\t<label for=\"upload\" title=\"Click to upload or drag&drop CSV file\" style=\"cursor: pointer; margin-bottom: 0px; font-weight: normal;\">\n\t\t\t\t<span class=\"fa fa-cloud-upload\"></span>\n\t\t\t\tUpload CSV\n\t\t\t</label>\n\t\t\t<input type=\"file\" multiple id=\"upload\" style=\"display: none;\">\n\t\t{{else}}\n\t\t\t<p>\n\t\t\t\t<i class=\"fa fa-spin fa-refresh\"></i>\n\t\t\t\tUploading files...\n\t\t\t</p>\n\t\t{{/unless}}\n\t</div>\n  </div>    \n</template>\n\n",
													"js": "var pageSession = new ReactiveDict();\n\nTemplate.TEMPLATE_NAME.onCreated(function() {\n\tpageSession.set(\"uploading\", false );\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  uploading() {\n    return pageSession.get(\"uploading\");\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n      \tallowedFileExtensions: [\"txt\", \"csv\"],\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n   'change #upload': function(event, temp) {\n      event.preventDefault();\n     \n     console.log('upload',event.target.files[0].name);\n      bootbox.dialog({       \t\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tpageSession.set(\"uploading\", true );\n                      \tconsole.log('p',event.target.files[0]);\n\t\t\t\t\t    Papa.parse( event.target.files[0], {\n      \t\t\t\t\t  header: true,\n      \t\t\t\t\t  complete( results, file ) {                            \n        \t\t\t\t    Meteor.call( 'parseUpload', event.target.files[0].name.split('.')[0], results.data, ( error, response ) => {\n          \t\t\t\t\t if ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t   } else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n          \t\t\t\t\t }\n        \t\t\t\t  });\n      \t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanger: {\n\t\t\t\tlabel: \"No\",\n\t\t\t\tclassName: \"btn-default\"\n\t\t\t}\n\t\t}\n\t  });\n   },\n\n  'dropped #dropzone': function(event, temp) {\n   event.preventDefault();\n   FS.Utility.eachFile(event, function(file) { \n     //console.log('file',file.name);\n     bootbox.dialog({\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n              \t\t\tpageSession.set(\"uploading\", true );\n\t\t\t\t\t    Papa.parse( file.name, {\n      \t\t\t\t\theader: true,\n      \t\t\t\t\tcomplete( results, file ) {\n        \t\t\t\tMeteor.call( 'parseUpload', file.split('.')[0] , results.data, ( error, response ) => {\n          \t\t\t\t\tif ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t} else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\tdanger: {\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n});   \n\n",
													"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
													"gasoline": {
														"type": "gasoline",
														"templates": [
															{
																"name": "TEMPLATE_NAME",
																"type": "template"
															}
														]
													},
													"object_type": "custom_component"
												}
											],
											"delete_confirmation_message": "Delete ? Are you sure?",
											"page_size": "20",
											"insert_route": "admin.audit_configure.normative_all.update",
											"details_route": "admin.audit_configure.normative_all.update",
											"edit_route": "admin.audit_configure.normative_all.update",
											"delete_route": "admin.audit_configure.normative_all",
											"insert_route_params": [
												{
													"name": "normativeId",
													"value": "Random.id([6])"
												}
											],
											"details_route_params": [
												{
													"name": "normativeId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "normativeId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Add new",
											"update_button_title": "update",
											"object_type": "data_view"
										}
									],
									"container_class": "container-fluid",
									"roles": [
										"admin"
									],
									"pages": [
										{
											"name": "update",
											"type": "page",
											"components": [
												{
													"name": "form",
													"type": "form",
													"title": "Edit Normative",
													"query_name": "normative",
													"mode": "update",
													"submit_route": "admin.audit_configure.normative_all",
													"cancel_route": "admin.audit_configure.normative_all",
													"submit_code": "if (Session.get('normativeId').length === 6) {    \n\tMeteor.call(\"normativeInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else \n         Meteor.call(\"normativeUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
													"object_type": "form"
												}
											],
											"route_params": [
												"normativeId"
											],
											"roles": [
												"admin"
											],
											"controller_after_action": "Session.set('normativeId',this.params.normativeId);"
										}
									]
								},
								{
									"name": "organizationunit",
									"type": "page",
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"title": "Organization Unit",
											"query_name": "organizationunit_all",
											"components": [
												{
													"name": "uploadcsv_button",
													"type": "custom_component",
													"dest_selector": "#dataview-controls-export",
													"dest_position": "after",
													"html": "<template name=\"TEMPLATE_NAME\">\n  <div id=\"dataview-uploadcv\" class=\"form-group\" style=\"cursor: pointer;\">\n\t<div id=\"dropzone\" class=\"btn btn-primary btn-sx dropzone\" style=\"cursor: pointer;\">\n\t\t{{#unless uploading}}\n\t\t\t<label for=\"upload\" title=\"Click to upload or drag&drop CSV file\" style=\"cursor: pointer; margin-bottom: 0px; font-weight: normal;\">\n\t\t\t\t<span class=\"fa fa-cloud-upload\"></span>\n\t\t\t\tUpload CSV\n\t\t\t</label>\n\t\t\t<input type=\"file\" multiple id=\"upload\" style=\"display: none;\">\n\t\t{{else}}\n\t\t\t<p>\n\t\t\t\t<i class=\"fa fa-spin fa-refresh\"></i>\n\t\t\t\tUploading files...\n\t\t\t</p>\n\t\t{{/unless}}\n\t</div>\n  </div>    \n</template>\n\n",
													"js": "var pageSession = new ReactiveDict();\n\nTemplate.TEMPLATE_NAME.onCreated(function() {\n\tpageSession.set(\"uploading\", false );\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  uploading() {\n    return pageSession.get(\"uploading\");\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n      \tallowedFileExtensions: [\"txt\", \"csv\"],\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n   'change #upload': function(event, temp) {\n      event.preventDefault();\n     \n     console.log('upload',event.target.files[0].name);\n      bootbox.dialog({       \t\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tpageSession.set(\"uploading\", true );\n                      \tconsole.log('p',event.target.files[0]);\n\t\t\t\t\t    Papa.parse( event.target.files[0], {\n      \t\t\t\t\t  header: true,\n      \t\t\t\t\t  complete( results, file ) {                            \n        \t\t\t\t    Meteor.call( 'parseUpload', event.target.files[0].name.split('.')[0], results.data, ( error, response ) => {\n          \t\t\t\t\t if ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t   } else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n          \t\t\t\t\t }\n        \t\t\t\t  });\n      \t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanger: {\n\t\t\t\tlabel: \"No\",\n\t\t\t\tclassName: \"btn-default\"\n\t\t\t}\n\t\t}\n\t  });\n   },\n\n  'dropped #dropzone': function(event, temp) {\n   event.preventDefault();\n   FS.Utility.eachFile(event, function(file) { \n     //console.log('file',file.name);\n     bootbox.dialog({\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n              \t\t\tpageSession.set(\"uploading\", true );\n\t\t\t\t\t    Papa.parse( file.name, {\n      \t\t\t\t\theader: true,\n      \t\t\t\t\tcomplete( results, file ) {\n        \t\t\t\tMeteor.call( 'parseUpload', file.split('.')[0] , results.data, ( error, response ) => {\n          \t\t\t\t\tif ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t} else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\tdanger: {\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n});   \n\n",
													"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
													"gasoline": {
														"type": "gasoline",
														"templates": [
															{
																"name": "TEMPLATE_NAME",
																"type": "template"
															}
														]
													},
													"object_type": "custom_component"
												}
											],
											"delete_confirmation_message": "Delete ? Are you sure?",
											"page_size": "20",
											"insert_route": "admin.audit_configure.organizationunit_all.update",
											"details_route": "admin.audit_configure.organizationunit_all.update",
											"edit_route": "admin.audit_configure.organizationunit_all.update",
											"delete_route": "admin.audit_configure.organizationunit_all",
											"insert_route_params": [
												{
													"name": "organizationunitId",
													"value": "Random.id([6])"
												}
											],
											"details_route_params": [
												{
													"name": "organizationunitId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "organizationunitId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Add new",
											"update_button_title": "update",
											"object_type": "data_view"
										}
									],
									"container_class": "container-fluid",
									"roles": [
										"admin"
									],
									"pages": [
										{
											"name": "update",
											"type": "page",
											"components": [
												{
													"name": "form",
													"type": "form",
													"title": "Edit Organization Unit",
													"query_name": "organizationunit",
													"mode": "update",
													"submit_route": "admin.audit_configure.organizationunit_all",
													"cancel_route": "admin.audit_configure.organizationunit_all",
													"submit_code": "if (Session.get('organizationunitId').length === 6) {    \n\tMeteor.call(\"organizationunitInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else \n         Meteor.call(\"organizationunitUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
													"object_type": "form"
												}
											],
											"route_params": [
												"organizationunitId"
											],
											"roles": [
												"admin"
											],
											"controller_after_action": "Session.set('organizationunitId',this.params.organizationunitId);"
										}
									]
								},
								{
									"name": "process",
									"type": "page",
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"title": "Process",
											"query_name": "processes_all",
											"components": [
												{
													"name": "uploadcsv_button",
													"type": "custom_component",
													"dest_selector": "#dataview-controls-export",
													"dest_position": "after",
													"html": "<template name=\"TEMPLATE_NAME\">\n  <div id=\"dataview-uploadcv\" class=\"form-group\" style=\"cursor: pointer;\">\n\t<div id=\"dropzone\" class=\"btn btn-primary btn-sx dropzone\" style=\"cursor: pointer;\">\n\t\t{{#unless uploading}}\n\t\t\t<label for=\"upload\" title=\"Click to upload or drag&drop CSV file\" style=\"cursor: pointer; margin-bottom: 0px; font-weight: normal;\">\n\t\t\t\t<span class=\"fa fa-cloud-upload\"></span>\n\t\t\t\tUpload CSV\n\t\t\t</label>\n\t\t\t<input type=\"file\" multiple id=\"upload\" style=\"display: none;\">\n\t\t{{else}}\n\t\t\t<p>\n\t\t\t\t<i class=\"fa fa-spin fa-refresh\"></i>\n\t\t\t\tUploading files...\n\t\t\t</p>\n\t\t{{/unless}}\n\t</div>\n  </div>    \n</template>\n\n",
													"js": "var pageSession = new ReactiveDict();\n\nTemplate.TEMPLATE_NAME.onCreated(function() {\n\tpageSession.set(\"uploading\", false );\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  uploading() {\n    return pageSession.get(\"uploading\");\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n      \tallowedFileExtensions: [\"txt\", \"csv\"],\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n   'change #upload': function(event, temp) {\n      event.preventDefault();\n     \n     console.log('upload',event.target.files[0].name);\n      bootbox.dialog({       \t\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tpageSession.set(\"uploading\", true );\n                      \tconsole.log('p',event.target.files[0]);\n\t\t\t\t\t    Papa.parse( event.target.files[0], {\n      \t\t\t\t\t  header: true,\n      \t\t\t\t\t  complete( results, file ) {                            \n        \t\t\t\t    Meteor.call( 'parseUpload', event.target.files[0].name.split('.')[0], results.data, ( error, response ) => {\n          \t\t\t\t\t if ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t   } else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n          \t\t\t\t\t }\n        \t\t\t\t  });\n      \t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanger: {\n\t\t\t\tlabel: \"No\",\n\t\t\t\tclassName: \"btn-default\"\n\t\t\t}\n\t\t}\n\t  });\n   },\n\n  'dropped #dropzone': function(event, temp) {\n   event.preventDefault();\n   FS.Utility.eachFile(event, function(file) { \n     //console.log('file',file.name);\n     bootbox.dialog({\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n              \t\t\tpageSession.set(\"uploading\", true );\n\t\t\t\t\t    Papa.parse( file.name, {\n      \t\t\t\t\theader: true,\n      \t\t\t\t\tcomplete( results, file ) {\n        \t\t\t\tMeteor.call( 'parseUpload', file.split('.')[0] , results.data, ( error, response ) => {\n          \t\t\t\t\tif ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t} else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\tdanger: {\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n});   \n\n",
													"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
													"gasoline": {
														"type": "gasoline",
														"templates": [
															{
																"name": "TEMPLATE_NAME",
																"type": "template"
															}
														]
													},
													"object_type": "custom_component"
												}
											],
											"delete_confirmation_message": "Delete ? Are you sure?",
											"page_size": "20",
											"insert_route": "admin.audit_configure.process_all.update",
											"details_route": "admin.audit_configure.process_all.update",
											"edit_route": "admin.audit_configure.process_all.update",
											"delete_route": "admin.audit_configure.process_all",
											"insert_route_params": [
												{
													"name": "processId",
													"value": "Random.id([6])"
												}
											],
											"details_route_params": [
												{
													"name": "processId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "processId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Add new",
											"update_button_title": "update",
											"object_type": "data_view"
										}
									],
									"container_class": "container-fluid",
									"pages": [
										{
											"name": "update",
											"type": "page",
											"components": [
												{
													"name": "form",
													"type": "form",
													"title": "Edit Process",
													"query_name": "process",
													"mode": "update",
													"submit_route": "admin.audit_configure.process_all",
													"cancel_route": "admin.audit_configure.process_all",
													"submit_code": "if (Session.get('processId').length === 6) {    \n\tMeteor.call(\"processInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else \n         Meteor.call(\"processtUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
													"object_type": "form"
												}
											],
											"route_params": [
												"processId"
											],
											"controller_after_action": "Session.set('processId',this.params.processId);"
										}
									]
								},
								{
									"name": "risk",
									"type": "page",
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"title": "Risk",
											"query_name": "risks_all",
											"components": [
												{
													"name": "uploadcsv_button",
													"type": "custom_component",
													"dest_selector": "#dataview-controls-export",
													"dest_position": "after",
													"html": "<template name=\"TEMPLATE_NAME\">\n  <div id=\"dataview-uploadcv\" class=\"form-group\" style=\"cursor: pointer;\">\n\t<div id=\"dropzone\" class=\"btn btn-primary btn-sx dropzone\" style=\"cursor: pointer;\">\n\t\t{{#unless uploading}}\n\t\t\t<label for=\"upload\" title=\"Click to upload or drag&drop CSV file\" style=\"cursor: pointer; margin-bottom: 0px; font-weight: normal;\">\n\t\t\t\t<span class=\"fa fa-cloud-upload\"></span>\n\t\t\t\tUpload CSV\n\t\t\t</label>\n\t\t\t<input type=\"file\" multiple id=\"upload\" style=\"display: none;\">\n\t\t{{else}}\n\t\t\t<p>\n\t\t\t\t<i class=\"fa fa-spin fa-refresh\"></i>\n\t\t\t\tUploading files...\n\t\t\t</p>\n\t\t{{/unless}}\n\t</div>\n  </div>    \n</template>\n\n",
													"js": "var pageSession = new ReactiveDict();\n\nTemplate.TEMPLATE_NAME.onCreated(function() {\n\tpageSession.set(\"uploading\", false );\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  uploading() {\n    return pageSession.get(\"uploading\");\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n      \tallowedFileExtensions: [\"txt\", \"csv\"],\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n   'change #upload': function(event, temp) {\n      event.preventDefault();\n     \n     console.log('upload',event.target.files[0].name);\n      bootbox.dialog({       \t\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tpageSession.set(\"uploading\", true );\n                      \tconsole.log('p',event.target.files[0]);\n\t\t\t\t\t    Papa.parse( event.target.files[0], {\n      \t\t\t\t\t  header: true,\n      \t\t\t\t\t  complete( results, file ) {                            \n        \t\t\t\t    Meteor.call( 'parseUpload', event.target.files[0].name.split('.')[0], results.data, ( error, response ) => {\n          \t\t\t\t\t if ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t   } else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n          \t\t\t\t\t }\n        \t\t\t\t  });\n      \t\t\t\t    }\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tdanger: {\n\t\t\t\tlabel: \"No\",\n\t\t\t\tclassName: \"btn-default\"\n\t\t\t}\n\t\t}\n\t  });\n   },\n\n  'dropped #dropzone': function(event, temp) {\n   event.preventDefault();\n   FS.Utility.eachFile(event, function(file) { \n     //console.log('file',file.name);\n     bootbox.dialog({\n\t\t\tmessage: \"Upload the file? Are you sure ?\",\n\t\t\ttitle: \"Upload\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n              \t\t\tpageSession.set(\"uploading\", true );\n\t\t\t\t\t    Papa.parse( file.name, {\n      \t\t\t\t\theader: true,\n      \t\t\t\t\tcomplete( results, file ) {\n        \t\t\t\tMeteor.call( 'parseUpload', file.split('.')[0] , results.data, ( error, response ) => {\n          \t\t\t\t\tif ( error ) {\n            \t\t\t\t\tconsole.log( error.reason );\n          \t\t\t\t\t} else {\n            \t\t\t\t\tpageSession.set(\"uploading\", false );\n            \t\t\t\t\tBert.alert( 'Upload complete!', 'success', 'growl-top-right' );\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\tdanger: {\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n});   \n\n",
													"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
													"gasoline": {
														"type": "gasoline",
														"templates": [
															{
																"name": "TEMPLATE_NAME",
																"type": "template"
															}
														]
													},
													"object_type": "custom_component"
												}
											],
											"delete_confirmation_message": "Delete ? Are you sure?",
											"page_size": "20",
											"insert_route": "admin.audit_configure.risk_all.update",
											"details_route": "admin.audit_configure.risk_all.update",
											"edit_route": "admin.audit_configure.risk_all.update",
											"delete_route": "admin.audit_configure.risk_all",
											"insert_route_params": [
												{
													"name": "riskId",
													"value": "Random.id([6])"
												}
											],
											"details_route_params": [
												{
													"name": "riskId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "riskId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Add new",
											"update_button_title": "update",
											"object_type": "data_view"
										}
									],
									"container_class": "container-fluid",
									"roles": [
										"admin"
									],
									"pages": [
										{
											"name": "update",
											"type": "page",
											"components": [
												{
													"name": "form",
													"type": "form",
													"title": "Edit Risk",
													"query_name": "risk",
													"mode": "update",
													"submit_route": "admin.audit_configure.risk_all",
													"cancel_route": "admin.audit_configure.risk_all",
													"submit_code": "if (Session.get('riskId').length === 6) {    \n\tMeteor.call(\"risksInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else \n         Meteor.call(\"risksUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
													"object_type": "form"
												}
											],
											"route_params": [
												"riskId"
											],
											"roles": [
												"admin"
											],
											"controller_after_action": "Session.set('riskId',this.params.riskId);"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "user_settings",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-stacked nav-pills",
							"items": [
								{
									"title": "Profile",
									"route": "user_settings.profile"
								},
								{
									"title": "Change password",
									"route": "user_settings.change_pass"
								}
							],
							"object_type": "menu"
						}
					],
					"roles": [
						"user",
						"admin"
					],
					"pages": [
						{
							"name": "profile",
							"type": "page",
							"components": [
								{
									"name": "edit_form",
									"type": "form",
									"title": "Edit your profile",
									"query_name": "current_user_data",
									"mode": "update",
									"submit_route": "user_settings.profile",
									"fields": [
										{
											"name": "profile.name",
											"title": "Name",
											"type": "string",
											"required": true
										},
										{
											"name": "profile.email",
											"title": "E-mail",
											"type": "email",
											"required": true
										},
										{
											"name": "profile.facebook",
											"title": "Facebook URL",
											"type": "string"
										},
										{
											"name": "profile.google",
											"title": "Google+ URL",
											"type": "string"
										},
										{
											"name": "profile.twitter",
											"title": "Twitter ID",
											"type": "string"
										},
										{
											"name": "profile.website",
											"title": "Website URL",
											"type": "string"
										}
									],
									"object_type": "form"
								}
							]
						},
						{
							"name": "change_pass",
							"type": "page",
							"template": "change_pass"
						}
					]
				},
				{
					"name": "audits",
					"type": "page",
					"title": "{{title}}",
					"helpers_code": "// Title\n\n'title': function() {\n    if(Session.get('activity').number && Session.get('activity').title)\n\t    { return (Session.get('activity').number + ' - ' + Session.get('activity').title ); }\n                     \n    if(Session.get('activity').title && !Session.get('activity').number)\n        {return Session.get('activity').title; }\n                                                   \n\tif(!Session.get('activity').title && !Session.get('activity').number)\n        {return (\"...\"); }\n}\n",
					"query_name": "activity",
					"components": [
						{
							"name": "new_status",
							"type": "custom_component",
							"html": "<template name=\"TEMPLATE_NAME\"> \n   <div class=\"checkout-wrap col-md-3 col-sm-12 col-xs-12 pull-right\">\n\t <ul class=\"checkout-bar\">\n\t\t<li class=\"{{ start activity.status }}\" title=\"Status: Start\"></li>\n\t\t<li class=\"{{ wip activity.status activity.nextreadyStatus }}\" title=\"Status: Working in progress\"></li>\n\t\t<li class=\"{{ close activity.status activity.nextreadyStatus }}\" title=\"Status: Close\"></li>\n\t\t<li class=\"{{ approve activity.status activity.nextreadyStatus }}\" title=\"Status: Approve\"></li>\n\t\t<li class=\"{{ archive activity.status }}\" title=\"Status: Archive\"></li>\n\t</ul>\n   </div>\n</template>\n\n",
							"js": "Template.TEMPLATE_NAME.events({  \n  \"click .checkout-bar\": function(event) {\n    event.preventDefault();\n    \n    //console.log($(event.target).attr(\"title\").substring(8)+'-'+$(event.target).attr(\"class\"));\n    \n    var x = $(event.target).attr(\"title\").substring(8)+'-'+$(event.target).attr(\"class\");\n    \n    if (x == \"Close-suggested\") {\n        bootbox.dialog({\n                message: \"Do you whant CLOSE the audit? Are you sure?\",\n                title: \"Close\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;\n                                values.status = \"Closed\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity')._id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }        \n\tif (x == \"Approve-suggested\") {\n           bootbox.dialog({\n                message: \"Do you whant APPROVE the audit? Are you sure?\",\n                title: \"Approve\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Approved\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity')._id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }\n    if (x == \"Archive-suggested\") {\n           bootbox.dialog({\n                message: \"Do you whant definitively ARCHIVE the audit? Are you sure?\",\n                title: \"Archive\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Archived\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity')._id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }    \n    \n  }\n});\n\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  \n \"start\": function(status){ \n\t\t\tvar val; \n            if ([\"Started\",\"Working in progress\",\"Closed\",\"Approved\",\"Archived\"].indexOf(status) >= 0) { val = \"selected\"; }\n\t\t\treturn val;\n },\n   \n \"wip\":   function(status){\n\t\t\tvar val; \n            if ([\"Working in progress\",\"Closed\",\"Approved\",\"Archived\"].indexOf(status) >= 0) { val = \"selected\"; }\n\t\t\treturn val;\n },\n    \n \"close\": function(status, nextreadyStatus) {\n                var val;\n                if ([\"Closed\",\"Approved\",\"Archived\"].indexOf(status) >= 0) { val = \"selected\"; }\n                if (nextreadyStatus && status == \"Working in progress\") { val = \"suggested\"; }\n                return val;\n },\n \"approve\": function(status) {\n            var val;\n            if ([\"Approved\",\"Archived\"].indexOf(status) >= 0) { val = \"selected\"; }\n            if (status == \"Closed\" && Users.isAdmin(Meteor.userId())) { val = \"suggested\"; }\n            return val;\n },\n\n \"archive\": function(status) {\n            var val;            \n            if (status == \"Approved\") { val = \"suggested\"; }\n\t\t\tif (status == \"Archived\") { val = \"selectedend\";}\n            return val;        \n }\n\n});\n",
							"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
							"gasoline": {
								"type": "gasoline",
								"templates": [
									{
										"name": "TEMPLATE_NAME",
										"type": "template"
									}
								]
							},
							"object_type": "custom_component"
						},
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-stacked nav-pills",
							"query_name": "activity",
							"show_condition": "return (Session.get('activity')._id).length !== 6;",
							"items": [
								{
									"title": "Scope",
									"route": "audits.scope",
									"route_params": [
										{
											"name": "activityId",
											"value": "this.params.activityId"
										}
									]
								},
								{
									"title": "Tests",
									"route": "audits.tests2",
									"route_params": [
										{
											"name": "activityId",
											"value": "this.params.activityId"
										}
									]
								},
								{
									"title": "Issues",
									"route": "audits.issues",
									"route_params": [
										{
											"name": "activityId",
											"value": "this.params.activityId"
										}
									]
								},
								{
									"title": "Ex. summary",
									"route": "audits.exsummary",
									"route_params": [
										{
											"name": "activityId",
											"value": "this.params.activityId"
										}
									]
								},
								{
									"title": "Scoring",
									"route": "audits.scoring",
									"route_params": [
										{
											"name": "activityId",
											"value": "this.params.activityId"
										}
									]
								}
							],
							"object_type": "menu"
						},
						{
							"name": "status",
							"type": "custom_component",
							"dest_position": "bottom",
							"query_name": "activity",
							"show_condition": "// trick to hide and not delete the component\n\n1 === 0",
							"html": "<template name=\"TEMPLATE_NAME\">\n  <div class=\"col-sm-10 col-md-10\"></div>\n        <div class=\"col-sm-2 col-md-2\">\n\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Start\">\n                        <i class=\"fa fa-hourglass-start {{start activity.status }}\" aria-hidden=\"true\"></i>\n                </div>\n\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Working in progress\">\n                        <i class=\"fa fa-cogs {{wip activity.status activity.nextreadyStatus }}\" aria-hidden=\"true\">\n                        </i>\n                </div>\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Close\">\n                        <i class=\"fa fa-diamond {{close activity.status activity.nextreadyStatus }}\" aria-hidden=\"true\">\n                        </i>\n                </div>\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Approve\">\n                        <i class=\"fa fa-check {{approve activity.status activity.nextreadyStatus}}\" aria-hidden=\"true\">\n                        </i>\n                </div>\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Archive\">\n                        <i class=\"fa fa-lock {{archive activity.status}}\" aria-hidden=\"true\">\n                        </i>\n                </div>\n        </div>\n</template>\n\n",
							"js": "Template.TEMPLATE_NAME.onRendered(function() {  \n   // Session.set('activity', Activities.findOne({'_id': this.params.activityId}) );\n});\n\n\n\nTemplate.TEMPLATE_NAME.events({  \n  \"click .status_box\": function(event) {\n    event.preventDefault();\n    \n    //console.log($(event.target).attr(\"class\"));\n    \n    var x = $(event.target).attr(\"class\");\n    if (x == \"fa fa-diamond suggested\") {\n        bootbox.dialog({\n                message: \"Do you whant CLOSE the audit? Are you sure?\",\n                title: \"Close\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;\n                                values.status = \"Closed\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity')._id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }        \n\tif (x == \"fa fa-check suggested\") {\n           bootbox.dialog({\n                message: \"Do you whant APPROVE the audit? Are you sure?\",\n                title: \"Approve\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Approved\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity')._id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }\n    if (x == \"fa fa-lock suggested\") {\n           bootbox.dialog({\n                message: \"Do you whant definitively ARCHIVE the audit? Are you sure?\",\n                title: \"Archive\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Archived\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity').id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }    \n    \n  }\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  \n \"start\": function(status) {return  ( status == \"Start\") ? \"selected\" : \"\"; },\n \"wip\":   function(status) {return (status == \"Working in progress\") ? \"selected\" : \"\"; },\n \"close\": function(status, nextreadyStatus) {\n                var val;\n                if(status == \"Closed\") { val = \"selected\"; }\n                if (nextreadyStatus && status == \"Working in progress\") { val = \"suggested\"; }\n                return val;\n },\n \"approve\": function(status) {\n            var val;\n            if(status == \"Approved\") { val = \"selected\";}\n            if (status == \"Closed\" && Users.isAdmin(Meteor.userId())) { val = \"suggested\"; }\n            return val;\n },\n\n \"archive\": function(status) {\n            var val;            \n            if (status == \"Approved\") { val = \"suggested\"; }\n\t\t\tif (status == \"Archived\") { val = \"selected\";}\n            return val;        \n }} );\n\n",
							"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});",
							"gasoline": {
								"type": "gasoline",
								"templates": [
									{
										"name": "TEMPLATE_NAME",
										"type": "template"
									}
								]
							},
							"object_type": "custom_component"
						}
					],
					"template_rendered_code": "Session.set(\"process\",'');\n",
					"html": "<template name=\"TEMPLATE_NAME\">\n\t<div class=\"row\">\n\t\t<div class=\"checkout-wrap col-md-2 col-sm-12 col-xs-12 pull-right\">\n\t\t\t<ul class=\"checkout-bar\">\n\t\t\t\t<li class=\"{{start activity.status }} status_box\" title=\"Status: Start\">\n\n\t\t\t\t</li>\n\t\t\t\t<li class=\"{{wip activity.status activity.nextreadystatus }} status_box\" title=\"Status: Working in progress\">\n\n\t\t\t\t</li>\n\t\t\t\t<li class=\"{{close activity.status activity.nextreadystatus }} status_box\" title=\"Status: Close\">\n\n\t\t\t\t</li>\n\t\t\t\t<li class=\"{{approve activity.status activity.nextreadystatus}} status_box\" title=\"Status: Approve\">\n\n\t\t\t\t</li>\n\t\t\t\t<li class=\"{{archive activity.status}} status_box\" title=\"Status: Archive\">\n\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n</template>\n\n",
					"js": "\n\nTemplate.TEMPLATE_NAME.events({\n\n});\n\nTemplate.TEMPLATE_NAME.helpers({\n\n});",
					"jsx": "/*IMPORTS*/\n\nexport class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"page-container\" id=\"content\">\n\t\t\t\t\t<div className=\"row col-md-10\" id=\"title_row\">\n\t\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t\t<h2 id=\"page_title\" className=\"pull-left\">\n\t\t\t\t\t\t\t\t<a href=\"#\" id=\"page-back-button\" className=\"btn btn-default\" title=\"back\">\n\t\t\t\t\t\t\t\t\t<span className=\"fa fa-chevron-left\">\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<span id=\"page-title-icon\" className=\"PAGE_TITLE_ICON_CLASS\">\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tPAGE_TITLE\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<div id=\"page_menu\" className=\"pull-right\">\n\t\t\t\t\t\t\t\t<a href=\"#\" id=\"page-close-button\" className=\"btn btn-default pull-right\" title=\"Close\">\n\t\t\t\t\t\t\t\t\t<span className=\"fa fa-times\">\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p id=\"page_text\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tPAGE_TEXT\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"background-image\" style=\"background-image: url(BACKGROUND_IMAGE);\">\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport const TEMPLATE_NAMEContainer = createContainer(function(props) {\n\t/*SUBSCRIPTIONS*/\n}, TEMPLATE_NAME);",
					"gasoline": {
						"type": "gasoline",
						"templates": [
							{
								"name": "TEMPLATE_NAME",
								"children": [
									{
										"children": [
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"type": "html",
																				"element": "span",
																				"attributes": [
																					{
																						"name": "class",
																						"value": "fa fa-chevron-left"
																					}
																				],
																				"object_type": "gas_html"
																			}
																		],
																		"type": "html",
																		"element": "a",
																		"attributes": [
																			{
																				"name": "href",
																				"value": "#"
																			},
																			{
																				"name": "id",
																				"value": "page-back-button"
																			},
																			{
																				"name": "class",
																				"value": "btn btn-default"
																			},
																			{
																				"name": "title",
																				"value": "back"
																			}
																		],
																		"object_type": "gas_html"
																	},
																	{
																		"type": "html",
																		"element": "span",
																		"attributes": [
																			{
																				"name": "id",
																				"value": "page-title-icon"
																			},
																			{
																				"name": "class",
																				"value": "PAGE_TITLE_ICON_CLASS"
																			}
																		],
																		"object_type": "gas_html"
																	},
																	{
																		"type": "text",
																		"text": "\n\t\t\t\t\tPAGE_TITLE\n\t\t\t\t",
																		"object_type": "gas_text"
																	}
																],
																"type": "html",
																"element": "h2",
																"attributes": [
																	{
																		"name": "id",
																		"value": "page_title"
																	},
																	{
																		"name": "class",
																		"value": "pull-left"
																	}
																],
																"object_type": "gas_html"
															},
															{
																"children": [
																	{
																		"children": [
																			{
																				"type": "html",
																				"element": "span",
																				"attributes": [
																					{
																						"name": "class",
																						"value": "fa fa-times"
																					}
																				],
																				"object_type": "gas_html"
																			}
																		],
																		"type": "html",
																		"element": "a",
																		"attributes": [
																			{
																				"name": "href",
																				"value": "#"
																			},
																			{
																				"name": "id",
																				"value": "page-close-button"
																			},
																			{
																				"name": "class",
																				"value": "btn btn-default pull-right"
																			},
																			{
																				"name": "title",
																				"value": "Close"
																			}
																		],
																		"object_type": "gas_html"
																	}
																],
																"type": "html",
																"attributes": [
																	{
																		"name": "id",
																		"value": "page_menu"
																	},
																	{
																		"name": "class",
																		"value": "pull-right"
																	}
																],
																"object_type": "gas_html"
															}
														],
														"type": "html",
														"attributes": [
															{
																"name": "class",
																"value": "col-md-12"
															}
														],
														"object_type": "gas_html"
													}
												],
												"type": "html",
												"attributes": [
													{
														"name": "class",
														"value": "row col-md-10"
													},
													{
														"name": "id",
														"value": "title_row"
													}
												],
												"object_type": "gas_html"
											},
											{
												"children": [
													{
														"type": "text",
														"text": "\n\t\t\tPAGE_TEXT\n\t\t",
														"object_type": "gas_text"
													}
												],
												"type": "html",
												"element": "p",
												"attributes": [
													{
														"name": "id",
														"value": "page_text"
													}
												],
												"object_type": "gas_html"
											}
										],
										"type": "html",
										"attributes": [
											{
												"name": "class",
												"value": "page-container"
											},
											{
												"name": "id",
												"value": "content"
											}
										],
										"object_type": "gas_html"
									},
									{
										"type": "html",
										"attributes": [
											{
												"name": "id",
												"value": "background-image"
											},
											{
												"name": "style",
												"value": "background-image: url(BACKGROUND_IMAGE);"
											}
										],
										"object_type": "gas_html"
									}
								],
								"type": "template"
							}
						]
					},
					"container_class": "container-fluid",
					"route_params": [
						"activityId"
					],
					"pages": [
						{
							"name": "scope",
							"type": "page",
							"title": "Scope",
							"title_icon_class": "fa fa-university",
							"events_code": "\"change select[name=process]\": function(event, template) {\n  \tevent.preventDefault();\n  \tvar process = $(event.target).val();\n  \tSession.set(\"process\",process);\n}",
							"query_name": "clientprocessuniq_all",
							"before_subscription_code": "Meteor.subscribe(\"processuniq\");\nMeteor.subscribe(\"subprocessuniq\");\n\n",
							"components": [
								{
									"name": "form",
									"type": "form",
									"helpers_code": "\"process\": function() {\n\treturn Session.get(\"process\");  \n},\n\n\"subprocessuniq\": function() {    \n    return Clientsubprocessuniq.find({process: Session.get(\"process\")});\n},\n\n\"DefaultStartDate\": function(a) {  \n  if (a) {var r = formatDate(a,\"DD/MM/YYYY\"); } else {var r = formatDate('TODAY',\"DD/MM/YYYY\");}\n  return r;\n},\n  \n\"defaultAuditors\": function(a) {\n   if (!a) {var r = profile.name }\n   return a;\n},\n\n\n  ",
									"query_name": "activity",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activity')._id;"
										}
									],
									"template_rendered_code": "this.autorun(function() {\n  var process = Session.get(\"process\") || Session.get('activity').process;\n  if (!process) {process=Clientprocessuniq.findOne({}, {\"sort\": {\"_id\": 1} } )._id;}\n  Session.set(\"process\", process);\n});\n\n\n",
									"mode": "update",
									"submit_route": "audits",
									"submit_code": "if ((Session.get('activity')._id).length === 6) {  \n\tMeteor.call(\"activitiesInsert\", values, function(e, r) {\n         if(e) console.log('error');\n         else { let handler = Meteor.subscribe(\"activity\", r,\n\t\t\t\t {\n\t\t\t\t   onReady: function () {\n    \t\t \t\t\t//if (!values.startDate) {values.startDate=formatDate(\"TODAY\"); } \t\t\t\t\t\t\t\t\t\n                     \tvalues.number='';\n            \t\t\tvalues.status='Started';                     \t\n            \t\t\tvalues.auditors.push(Meteor.user().profile.name);\n                     \tMeteor.call(\"activitiesUpdate\", r, values, \n                                    function(e, r2){if(e) errorAction(e); \n                                                    else{ Session.set('activity', Activities.findOne({'_id': r}));\n                                                          handler.stop();\n                                                          submitAction(r2);\n                                                   \t\t}\n                                   });\n                     \n\t\t\t\t   },                                                                                                    \n\t\t\t\t   onError: function () { console.log(\"onError\", arguments); },\n           \t\t   onStop: function () { /*console.log(\"STOP\", arguments);*/ }\n\t\t    });\n\t\t } \n    });\n}\nelse\n",
									"submit_button_title": "Save",
									"submit_route_params": [
										{
											"name": "activityId",
											"value": "Session.get('activity')._id"
										}
									],
									"cancel_route_params": [
										{
											"name": "activityId"
										}
									],
									"fields": [
										{
											"name": "status",
											"title": "Status",
											"type": "string",
											"exportable": true,
											"input": "select",
											"input_items": [
												{
													"value": "Avviato",
													"title": "Avviato"
												},
												{
													"value": "In corso",
													"title": "In corso"
												},
												{
													"value": "Completato",
													"title": "Completato"
												},
												{
													"value": "Archiviato",
													"title": "Archiviato"
												}
											],
											"array_item_type": "object",
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "type",
											"title": "Activity type",
											"type": "string",
											"exportable": true,
											"input": "radio",
											"input_items": [
												{
													"value": "Audit Filiale",
													"title": "Audit Filiale"
												},
												{
													"value": "Audit",
													"title": "Audit"
												},
												{
													"value": "Informativa",
													"title": "Informativa"
												},
												{
													"value": "Altre attivit√†",
													"title": "Altre attivit√†"
												}
											],
											"array_item_type": "object",
											"show_in_update_form": false
										},
										{
											"name": "title",
											"title": "Title",
											"type": "string",
											"required": true,
											"exportable": true,
											"show_in_insert_form": false
										},
										{
											"name": "objective",
											"title": "Activity objective",
											"type": "string",
											"exportable": true,
											"input": "textarea",
											"show_in_insert_form": false
										},
										{
											"name": "company",
											"title": "Companies",
											"type": "array",
											"required": true,
											"input": "custom",
											"input_template_code": "<div class=\"form-group FIELD_GROUP_CLASS FIELD_ID\">\n\t<label for=\"company\">Companies</label>\n\t\t\t\t<div class=\"input-div thumbnail\" data-required=\"true\">\n\t\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t\t\t<label><input type=\"checkbox\" value=\"Alfa Company\" name=\"FIELD_NAME\" data-type=\"array\" {{itemIsChecked activity.company \"Alfa Company\"}}>Alfa Company</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t\t\t<label><input type=\"checkbox\" value=\"Beta Company\" name=\"FIELD_NAME\" data-type=\"array\" {{itemIsChecked activity.company \"Beta Company\"}}>Beta Company</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t\t\t<label><input type=\"checkbox\" value=\"Gamma Company\" name=\"FIELD_NAME\" data-type=\"array\" {{itemIsChecked activity.company \"Gamma Company\"}}>Gamma Company</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t\t\t<label><input type=\"checkbox\" value=\"Delta Company\" name=\"FIELD_NAME\" data-type=\"array\" {{itemIsChecked activity.company \"Delta Company\"}}>Delta Company</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"checkbox\">\n\t\t\t\t\t\t<label><input type=\"checkbox\" value=\"Omega Company\" name=\"FIELD_NAME\" data-type=\"array\" {{itemIsChecked activity.company \"Omega Company\"}}>Omega Company</label>\n\t\t\t\t\t</div>\n\t\t\t\t\t<span id=\"help-text\" class=\"help-block\"></span>\n\t\t\t\t\t<span id=\"error-text\" class=\"help-block\"></span>\n\t\t\t\t</div>\n</div>            ",
											"input_group_class": "col-sm-4 col-md-4",
											"input_items": [
												{
													"value": "Alfa Company",
													"title": "Alfa Company"
												},
												{
													"value": "Beta Company",
													"title": "Beta Company"
												},
												{
													"value": "Gamma Company",
													"title": "Gamma Company"
												},
												{
													"value": "Delta Company",
													"title": "Delta Company"
												},
												{
													"value": "Omega Company",
													"title": "Omega Company"
												}
											]
										},
										{
											"name": "riskArea",
											"title": "Risk area (ICAAP)",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "risks_all",
											"lookup_key": "ICAAP",
											"lookup_field": "ICAAP",
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "riskDetails",
											"title": "Examinated risks",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "risks_all",
											"lookup_key": "risk",
											"lookup_field": "risk",
											"show_in_insert_form": false
										},
										{
											"name": "organizationUnit",
											"title": "Organization Units",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "strutture_all",
											"lookup_key": "uo",
											"lookup_field": "uo",
											"show_in_insert_form": false
										},
										{
											"name": "number",
											"title": "Activity number",
											"type": "string",
											"exportable": true,
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "normativeInt",
											"title": "Internal legislation",
											"type": "array",
											"input": "select-multiple",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "normativeint",
											"lookup_key": "law",
											"lookup_field": "law",
											"show_in_insert_form": false
										},
										{
											"name": "normativeExt",
											"title": "External legislation",
											"type": "array",
											"input": "select-multiple",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "normativeext",
											"lookup_key": "law",
											"lookup_field": "law",
											"show_in_insert_form": false
										},
										{
											"name": "process",
											"title": "Process",
											"type": "string",
											"input": "custom",
											"input_template_code": "<div class=\"form-group FIELD_GROUP_CLASS FIELD_ID\">\n    <label for=\"process\">\n\t\tProcess\n\t</label>\n\t<div class=\"input-div\">\n\t\t<select class=\"form-control \" name=\"FIELD_NAME\" data-type=\"string\">\n\t\t\t{{#each clientprocessuniq_all}}\n\t\t\t\t<option value=\"{{_id}}\" {{optionIsSelected process _id}}>{{_id}}</option>\n\t\t\t{{/each}}\n\t\t</select>\n\t\t<span id=\"help-text\" class=\"help-block\"></span>\n\t\t<span id=\"error-text\" class=\"help-block\"></span>\n\t</div>\n </div>",
											"input_group_class": "col-sm-4 col-md-4",
											"show_in_insert_form": false
										},
										{
											"name": "subprocesses",
											"title": "Sub processes",
											"type": "array",
											"input": "custom",
											"input_template_code": "<div class=\"form-group FIELD_GROUP_CLASS FIELD_ID\">\n    <label for=\"subprocesses\">Sub processes</label>\n\t  <div class=\"input-div\">\n\t\t\t<select multiple=\"multiple\" class=\"form-control\" name=\"FIELD_NAME\" data-type=\"array\">\n\t\t\t\t{{#each subprocessuniq}}\n\t\t\t\t\t\t<option value=\"{{subprocess}}\" {{optionIsSelected ../activity.subprocesses subprocess}}>{{subprocess}}</option>\n                {{/each}}\n\t\t\t</select>\n\t\t\t<span id=\"help-text\" class=\"help-block\"></span>\n\t\t\t<span id=\"error-text\" class=\"help-block\"></span>\n\t  </div>\n</div>",
											"input_group_class": "col-sm-4 col-md-4",
											"show_in_insert_form": false
										},
										{
											"name": "auditors",
											"title": "Auditors",
											"type": "array",
											"default": "{{userFullName}}",
											"required": true,
											"exportable": true,
											"input": "select-multiple",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "q_users",
											"lookup_key": "profile.name",
											"lookup_field": "profile.name",
											"display_helper": "defaultAuditors"
										},
										{
											"name": "branch",
											"title": "Branch",
											"type": "string",
											"input": "select",
											"input_group_class": "col-sm-4 col-md-4",
											"input_items": [
												{
													"value": "Corporate",
													"title": "Corporate"
												}
											],
											"lookup_query_name": "braches_all",
											"lookup_key": "branch",
											"lookup_field": "branch"
										},
										{
											"name": "startDate",
											"title": "Audit start date",
											"type": "date",
											"default": "today",
											"required": true,
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker",
											"input_group_class": "col-sm-4 col-md-4",
											"display_helper": "DefaultStartDate"
										},
										{
											"name": "nextreadyStatus",
											"type": "bool",
											"searchable": false,
											"sortable": false,
											"show_in_dataview": false,
											"show_in_insert_form": false,
											"show_in_update_form": false,
											"show_in_read_only_form": false
										}
									],
									"object_type": "form"
								}
							],
							"html": "<template name=\"TEMPLATE_NAME\">\n\n<div class=\"divright\">\n   <ul class=\"list-group\">\n    <li class=\"list-group-item\" title=\"Status: Avviato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-hourglass-start not-selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: In lavorazione\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-cogs not-selected\" aria-hidden=\"true\"></i></a></li> \n    <li class=\"list-group-item\" title=\"Status: Completato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-diamond selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: Approvato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-check not-selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: Archiviato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-lock not-selected\" aria-hidden=\"true\"></i></a></li>  \n  </ul>\n </div>  \n</template>\n",
							"container_class": "container-fluid",
							"render_subpages": "auto"
						},
						{
							"name": "tests2",
							"type": "page",
							"title": "Tests",
							"title_icon_class": "fa fa-database",
							"query_params": [
								{
									"name": "activityId",
									"value": "Session.get('activityId');"
								}
							],
							"components": [
								{
									"name": "view",
									"type": "data_view",
									"query_name": "tests_list",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activity')._id"
										}
									],
									"insert_route": "audits.tests2.update",
									"details_route": "audits.tests2.update",
									"edit_route": "audits.tests2.update",
									"insert_route_params": [
										{
											"name": "testId",
											"value": "Random.id([6])"
										}
									],
									"details_route_params": [
										{
											"name": "testId",
											"value": "this._id"
										}
									],
									"edit_route_params": [
										{
											"name": "testId",
											"value": "this._id"
										}
									],
									"insert_button_title": "Add new test",
									"object_type": "data_view"
								}
							],
							"template_rendered_code": "Session.set('titleVerifica','');\nSession.set('descriptionVerifica','');\n",
							"container_class": "container-fluid",
							"pages": [
								{
									"name": "update",
									"type": "page",
									"query_name": "test",
									"components": [
										{
											"name": "form",
											"type": "form",
											"class": "col-sm-8 col-md-9",
											"title": "Create a new test",
											"helpers_code": "\"nextAttivitaNumber\": function() {\n  var max = 0;\n  var attivitaNumbers = Tests.find({activityId: Session.get('activity')._id}, {fields: {attivitaId:1}}).fetch();\n  _.each(attivitaNumbers, function(doc) { var intNum = parseInt(doc.attivitaId);\n                                          if(!isNaN(intNum) && intNum > max) max = intNum; });\n  \t\t\t\t\t\t\t\t\t      console.log('nextAttivit√†Number');\n                                          return (max + 1);\n                                        },\n\n\"test\":  function() { \n\tif (Session.get('titleVerifica'))\n\t\t\t{var x = ({\"title\":Session.get('titleVerifica'),\"objective\":Session.get('descriptionVerifica')});return x;}\n\telse {return Tests.findOne({_id:this.params.testId}); }\n  }",
											"query_name": "test",
											"mode": "update",
											"submit_route": "audits.tests2",
											"submit_code": "if (Session.get('testId').length === 6) {\n    values.activityId = Session.get('activity')._id;\n\tMeteor.call(\"testsInsert\", values, function(e, r) {\n           //console.log(\"testsInsert\",r); \n\t\t\tif(e) console.log('error',e);\n\t\t\telse\n\t\t\tvar cursor = Files.find({'metadata.activityId': Session.get('activity')._id, 'metadata.section': 'test', 'metadata.test': Session.get('testId') });\t\t    \t\t\n\t\t\tcursor.forEach(function(doc) {\n\t\t    doc.metadata.test = r;\n\t\t\tMeteor.call(\"filesUpdate\", doc._id, doc, function(e, result) { if(e) errorAction(e); else submitAction(result);});\n\t\t\t});\t\t    \n\t\t\tMeteor.call(\"testsUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
											"submit_button_title": "Save",
											"fields": [
												{
													"name": "number",
													"title": "Test number",
													"type": "string",
													"default": "{{nextVerificaNumber}}",
													"show_in_dataview": false,
													"show_in_insert_form": false,
													"show_in_update_form": false
												},
												{
													"name": "title",
													"title": "Test title",
													"type": "string",
													"default": "{{titleVerifica}}",
													"required": true
												},
												{
													"name": "objective",
													"title": "Test scope",
													"type": "string",
													"default": "{{descriptionVerifica}}",
													"input": "textarea"
												},
												{
													"name": "description",
													"title": "Test description",
													"type": "string",
													"input": "textarea",
													"show_in_dataview": false,
													"show_in_insert_form": false
												},
												{
													"name": "activityId",
													"title": "ActivityId",
													"type": "string",
													"show_in_dataview": false,
													"show_in_insert_form": false,
													"show_in_update_form": false,
													"show_in_read_only_form": false
												},
												{
													"name": "result",
													"title": "Result",
													"type": "string",
													"input": "select",
													"input_items": [
														{
															"value": "FAIL",
															"title": "FAIL"
														},
														{
															"value": "PASS",
															"title": "PASS"
														}
													],
													"show_in_insert_form": false
												}
											],
											"object_type": "form"
										},
										{
											"name": "div",
											"type": "div",
											"class": "col-sm-4 col-md-3",
											"components": [
												{
													"name": "attachments",
													"type": "custom_component",
													"query_name": "files_all",
													"html": "<template name=\"TEMPLATE_NAME\">\n <br><br>\n <div id=\"dropzone\" class=\"panel panel-default dropzone\">            \n   <div class=\"panel-heading no-padding\">\n      <div class=\"custom-file\">\n         <label class=\"custom-file-label\" for=\"upload\" title=\"Click to attach files\" style=\"cursor: pointer;\">Attachments \n             <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\" style=\"color: #3399f3;\"></i> \n         </label>\n         <input type=\"file\" class=\"custom-file-input\" multiple id=\"upload\">\n      </div>\n   </div>\n   <div class=\"panel-body no-padding\">\n      <ul class=\"list-group\">\n         {{#each allegati}}\n             <li class=\"list-group-item\">{{this.name}}\n                  <span class=\"\">\n                      <a href=\"{{this.url download=true}}\" class=\"btnDownload\" target=\"_parent\">\n                          <i class=\"fa fa-cloud-download\" aria-hidden=\"true\"></i>\n                      </a>\n                      <label>\n                          <i class=\"fa fa-trash-o\" style=\"color:red; cursor: pointer;\" aria-hidden=\"true\"></i>\n                           <input type=\"button\" value=\"Remove\" class=\"btnRemove\" style=\"display: none;\" />\n                      </label>\n                  </span>\n             </li>\n          {{else}}No files uploaded. {{/each}}\n      </ul>\n    </div>\n </div>\n</template>",
													"js": "Template.TEMPLATE_NAME.onCreated(function() { \n});\n\nTemplate.TEMPLATE_NAME.onDestroyed(function() {\n});\n\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\n\nTemplate.TEMPLATE_NAME.helpers({\n \"allegati\": function() {\n\t// console.log('=>',Files.find()); \n\treturn Files.find({'metadata.activityId':Session.get('activity')._id, 'metadata.section': 'test', 'metadata.test': Session.get('testId') }).fetch();   \n  }\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n    'change #upload': function(event, temp) {\n      FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);\n        fileObj.metadata = { owner: Meteor.userId(), activityId: Session.get('activity')._id, section: 'test', test: Session.get('testId')};       \n        // Here I'm not able use meteor.call. Is this a risk?\n        var id = Files.insert(fileObj);\n        \n        //var n = Files.find({'metadata.activityId':Session.get('activity')._id, 'metadata.section': 'test', 'metadata.test': Session.get('testId') }).count();\n        attach = {test:[{attachId:id, testId:Session.get('testId')}]};          \n        Meteor.call(\"activitiesUpdate\", Session.get('activity')._id, attach, function(e, r2){if(e) errorAction(e);});\n        //console.log(n);  \n        \n        \n      });\n    },\n \n    'dropped #dropzone': function(event, temp) {\n        FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);\n        fileObj.metadata = { owner: Meteor.userId(), activityId: Session.get('activity')._id, section: 'test',test: Session.get('testId')};          \n        // Here I'm not able use meteor.call. Is this a risk?\n        var id = Files.insert(fileObj);            \n        //var n = Files.find({'metadata.activityId':Session.get('activity')._id, 'metadata.section': 'test', 'metadata.test': Session.get('testId') }).count();\n        attach = {test:[{attachId:id, testId:Session.get('testId')}]};          \n        Meteor.call(\"activitiesUpdate\", Session.get('activity')._id, attach, function(e, r2){if(e) errorAction(e);});\n        //console.log(n);  \n          \n          \n      });\n    },\n  \n    'click .btnRemove': function(event, temp) {    \n\t\tevent.preventDefault();\n\t\tvar self = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Delete the file? Are you sure ?\",\n\t\t\ttitle: \"Delete\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n                    // Here I'm not able use meteor.call. Is this a risk?\n                    COLLECTION_VAR.remove({ _id: self._id });                                        \n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n    }\n});\n\n",
													"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
													"object_type": "custom_component"
												},
												{
													"name": "collapse",
													"type": "custom_component",
													"query_name": "libtest_all",
													"html": "<template name=\"TEMPLATE_NAME\">\n\n \t<div class=\"panel-group\" id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\n      \t{{#each a in area}}\n\t\t<div class=\"panel panel-default\">\n\t\t\t<div class=\"panel-heading\" role=\"tab\" id=\"heading\">\n\t\t\t\t<h4 class=\"panel-title\">\n\t\t\t\t\t<a role=\"button\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#{{a.area}}\" aria-expanded=\"true\" aria-controls=\"{{a.area}}\">\n\t\t\t\t\t\t{{a.area}}\n\t\t\t\t\t</a>\n\t\t\t\t</h4>\n\t\t\t</div>\n\n\t\t\t<div id=\"{{a.area}}\" class=\"panel-collapse collapse\" role=\"tabpanel\" aria-labelledby=\"heading\">\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t{{#each verifica area a.area }}\n\t\t\t\t\t<h6><p class=\"area\" name=\"{{this}}\">\n\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t{{this}}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p></h6>\n\t\t\t\t\t{{/each}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n      \t{{/each}}\n\t</div>\n</template>\n",
													"js": "Template.TEMPLATE_NAME.helpers({\n\t\"area\": function() {\n\t\tvar myArray = Libtest.find().fetch();\n\t\tvar groupby = _.groupBy(myArray, function(d){ return d.area; });\n\t\tvar map =  _.map(groupby, function(value, key) {return { \"area\": key, \"library\": _.pluck(value, 'library') }; });\n\t\treturn map;\n\t}\n});\n\n\nTemplate.registerHelper( 'verifica', ( lib, area ) => {\n\t verifiche = _.findWhere(lib,{\"area\": area });\n\t//console.log('verifica',verifiche)\n\treturn verifiche.library;\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n\t'click .area': function(e, t) {\n\t\tvar libreria = this.valueOf();\n\t\tSession.set('titleVerifica',libreria);\n\t\tvar description = Libtest.findOne({\"library\": libreria}).description;\n\t\tSession.set('descriptionVerifica',description);\n\t}\n});\n",
													"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});",
													"gasoline": {
														"type": "gasoline",
														"templates": [
															{
																"name": "TEMPLATE_NAME",
																"type": "template"
															}
														]
													},
													"object_type": "custom_component"
												}
											],
											"object_type": "div"
										}
									],
									"template_rendered_code": "Session.set('titleVerifica','');\nSession.set('descriptionVerifica','');",
									"container_class": "container-fluid",
									"route_params": [
										"testId"
									],
									"related_queries": [
										{
											"name": "activity"
										}
									],
									"render_subpages": "auto",
									"controller_after_action": "Session.set('testId',this.params.testId);\n\nSession.set('activity', Activities.findOne({'_id': this.params.activityId}));\n\n\n"
								}
							]
						},
						{
							"name": "issues",
							"type": "page",
							"title": "Issues",
							"title_icon_class": "fa fa-bomb",
							"query_params": [
								{
									"name": "activityId",
									"value": "Session.get('activityId');"
								}
							],
							"components": [
								{
									"name": "view",
									"type": "data_view",
									"query_name": "issues_list",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activity')._id"
										}
									],
									"insert_route": "audits.issues.update",
									"details_route": "audits.issues.update",
									"edit_route": "audits.issues.update",
									"insert_route_params": [
										{
											"name": "carenzaId",
											"value": "Random.id([6])"
										}
									],
									"details_route_params": [
										{
											"name": "carenzaId",
											"value": "this._id"
										}
									],
									"edit_route_params": [
										{
											"name": "carenzaId",
											"value": "this._id"
										}
									],
									"insert_button_title": "Add new issue",
									"fields": [
										{
											"name": "issueId",
											"title": "Issue number",
											"type": "string",
											"default": "{{nextCarenzaNumber}}",
											"required": true,
											"exportable": true,
											"show_in_update_form": false
										},
										{
											"name": "activityId",
											"title": "Activity Id",
											"type": "string",
											"required": true,
											"searchable": false,
											"sortable": false,
											"show_in_dataview": false,
											"show_in_insert_form": false,
											"show_in_update_form": false,
											"show_in_read_only_form": false
										},
										{
											"name": "title",
											"title": "Issue title",
											"type": "string",
											"required": true
										},
										{
											"name": "description",
											"title": "Issue details",
											"type": "string",
											"required": true,
											"exportable": true,
											"input": "textarea",
											"show_in_dataview": false
										},
										{
											"name": "issueDate",
											"title": "Issue date",
											"type": "date",
											"default": "today",
											"required": true,
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker"
										},
										{
											"name": "level",
											"title": "Issue level",
											"type": "string",
											"required": true,
											"exportable": true,
											"input": "select",
											"input_items": [
												{
													"value": "ridotto",
													"title": "Low"
												},
												{
													"value": "medio",
													"title": "Medium"
												},
												{
													"value": "alto",
													"title": "High"
												},
												{
													"value": "moltoalto",
													"title": "Very high"
												}
											]
										},
										{
											"name": "companies",
											"title": "Concerned companies",
											"type": "array",
											"required": true,
											"input_items": [
												{
													"value": "alfa",
													"title": "Alfa Company"
												},
												{
													"value": "beta",
													"title": "Beta Company"
												},
												{
													"value": "gamma",
													"title": "Gamma Company"
												},
												{
													"value": "delta",
													"title": "Delta Company"
												},
												{
													"value": "omega",
													"title": "Omega Company"
												}
											]
										},
										{
											"name": "issueOwner",
											"title": "Issue owner",
											"type": "string",
											"required": true
										},
										{
											"name": "type",
											"title": "Issue nature",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"title": "null"
												},
												{
													"value": "Errore Umano",
													"title": "Errore Umano"
												},
												{
													"value": "Carenza Documentale",
													"title": "Carenza Documentale"
												},
												{
													"value": "Natura",
													"title": "Natura"
												}
											]
										},
										{
											"name": "dbi",
											"title": "External controller",
											"type": "bool",
											"input": "checkbox"
										}
									],
									"object_type": "data_view"
								}
							],
							"container_class": "container-fluid",
							"pages": [
								{
									"name": "update",
									"type": "page",
									"query_name": "issue",
									"components": [
										{
											"name": "form_issue",
											"type": "form",
											"title": "Issue",
											"query_name": "issue",
											"mode": "update",
											"submit_route": "audits.issues",
											"submit_code": "// mtt note: whit this hack code it is possible use only one Form (bypass Insert Form):\n\nif (Session.get('carenzaId').length === 6) {\n  \n    values.activityId = Session.get('activity')._id;\n\tMeteor.call(\"issuesInsert\", values, function(e, r) {\n        // console.log(\"fieldworksInsert\",r); \n         if(e) console.log('error'); \n         else \n         Meteor.call(\"issuesUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
											"submit_button_title": "Save",
											"object_type": "form"
										}
									],
									"container_class": "container-fluid",
									"route_params": [
										"carenzaId"
									],
									"related_queries": [
										{
											"name": "activity"
										}
									],
									"render_subpages": "auto",
									"controller_after_action": "Session.set('carenzaId',this.params.carenzaId);\n"
								}
							]
						},
						{
							"name": "exsummary",
							"type": "page",
							"title": "Executive Summary",
							"title_icon_class": "fa fa-edit",
							"helpers_code": "\n",
							"query_name": "activity",
							"query_params": [
								{
									"name": "activityId",
									"value": "Session.get('activity')._id"
								}
							],
							"components": [
								{
									"name": "edit",
									"type": "custom_component",
									"html": "<template name=\"TEMPLATE_NAME\">\n\n \t<textarea name=\"content\" id=\"editor\">\n    \t&lt;p&gt;Here goes the initial content of the editor.&lt;/p&gt;\n\t</textarea>\n  \n</template>\n",
									"js": "import ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nTemplate.TEMPLATE_NAME.onRendered(function() {\n let editor;\n ClassicEditor\n    .create( document.querySelector( '#editor' ) )\n    .then( newEditor => {\n\t\teditor = newEditor;\n\t\tvar data = Session.get('activity');\n\t\tif (data.memo) { editor.setData(data.memo) };\n   \t\tvar save_timeout;\n\t    save_data = function() {\n\t\t   \tclearTimeout(save_timeout);\n\t\t\tdata.memo = editor.getData();\n\t\t\tif (data.memo !== Session.get('activity').memo)  {\n\t\t\t    Meteor.call(\"activitiesUpdate\", Session.get('activity')._id, data, function(e, r){if(e){console.log('Error',e);}});\n\t\t\t\tSession.set('activity', data);\n\t\t\t};\n\t\t};\n\t\teditor.model.document.on( 'change:data', () => {\n\t\t\t\t//console.log( 'The data has changed!' );\n\t\t\t\tclearTimeout(save_timeout);\n\t\t\t\tsave_timeout = setTimeout(save_data, 2000);\n\t\t})\n\t})\n    .catch( error => {\n        console.error( error );\n  });\n});\n",
									"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"type": "template"
											}
										]
									},
									"object_type": "custom_component"
								}
							],
							"container_class": "container-fluid"
						},
						{
							"name": "scoring",
							"type": "page",
							"title": "Scoring",
							"title_icon_class": "fa fa-balance-scale",
							"helpers_code": "\n",
							"query_name": "activity",
							"query_params": [
								{
									"name": "activityId",
									"value": "Session.get('activity')._id"
								}
							],
							"components": [
								{
									"name": "scoring",
									"type": "form",
									"query_name": "activity",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activity')._id"
										}
									],
									"mode": "update",
									"submit_route": "audits.scoring",
									"submit_button_title": "Save",
									"fields": [
										{
											"name": "sci",
											"title": "Rating",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "Positiva",
													"title": "Positive"
												},
												{
													"value": "Partial positive",
													"title": "Partial positive"
												},
												{
													"value": "Partial",
													"title": "Partial"
												},
												{
													"value": "Partial negative",
													"title": "Partial negative"
												},
												{
													"value": "Negative",
													"title": "Negative"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "residualRisk",
											"title": "Residual risk evaluetion",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "High",
													"title": "High"
												},
												{
													"value": "Medium",
													"title": "Medium"
												},
												{
													"value": "Low",
													"title": "Low"
												},
												{
													"value": "Not significative",
													"title": "Not significative"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "closeDate",
											"title": "Audit close date",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"input": "datepicker",
											"show_in_insert_form": false
										}
									],
									"object_type": "form"
								}
							],
							"container_class": "container-fluid"
						}
					],
					"render_subpages": "always",
					"controller_after_action": "if ((this.params.activityId).length !== 6) { \n  Session.set('activity', Activities.findOne({'_id': this.params.activityId})); \n }\n else { \n\t\tvalues = {};\n\t\tvalues._id=this.params.activityId;\n\t\tSession.set('activity',values);    \n      }\n"
				},
				{
					"name": "monitoringdetection",
					"type": "page",
					"components": [
						{
							"name": "view",
							"type": "data_view",
							"title": "Monitoring Detection",
							"query_name": "md_name",
							"query_params": [
								{
									"name": "name",
									"value": "Meteor.user().profile.name"
								}
							],
							"delete_confirmation_message": "Delete the monitoring detection ? Are you sure ?",
							"page_size": "10",
							"insert_route": "monitoringdetection.update",
							"details_route": "monitoringdetection.update",
							"edit_route": "monitoringdetection.update",
							"insert_route_params": [
								{
									"name": "monitoringdetectionId",
									"value": "Random.id([6])"
								}
							],
							"details_route_params": [
								{
									"name": "monitoringdetectionId",
									"value": "this._id"
								}
							],
							"edit_route_params": [
								{
									"name": "monitoringdetectionId",
									"value": "this._id"
								}
							],
							"insert_button_title": "New detection",
							"update_button_title": "update",
							"object_type": "data_view"
						}
					],
					"pages": [
						{
							"name": "update",
							"type": "page",
							"query_params": [
								{
									"name": "name",
									"value": "Meteor.user().profile.name"
								}
							],
							"components": [
								{
									"name": "form",
									"type": "form",
									"class": "col-sm-8 col-md-9",
									"title": "Edit Monitoring Detection",
									"query_name": "monitoringdetection",
									"mode": "update",
									"submit_route": "monitoringdetection",
									"submit_code": "if (Session.get('monitoringdetectionId').length === 6) {    \n\tMeteor.call(\"monitoringdetectionInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else\n             Session.set('monitoringdetectionId',r);\n             var cursor = Files.find({'metadata.monitoringDetectionId': Session.get('monitoringdetectionId'), 'metadata.section': 'monitoring_detection'});\n             cursor.forEach(function(err, doc) {\n                if (err) throw err;\n                if (doc) {\n                    val={}; val.monitoringdetectionId = Session.get('monitoringdetectionId',r);\n                    Meteor.call(\"FilesUpdate\", doc._id, val, function(e, r) { if(e) errorAction(e); else console.log('ok',r);});  \n                };\n             });  \n             Meteor.call(\"monitoringdetectionUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n       });\n}\nelse",
									"fields": [
										{
											"name": "controlId",
											"title": "Control code",
											"type": "string",
											"required": true,
											"exportable": true,
											"input": "select",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "registrycontrols_list",
											"lookup_query_params": [
												{
													"name": "name",
													"value": "Meteor.user().profile.name"
												}
											],
											"lookup_key": "_id",
											"lookup_field": "title",
											"join_collection": "registrycontrols",
											"join_container": "registrycontrol",
											"join_fields": [
												"title"
											],
											"show_in_dataview": false,
											"show_in_read_only_form": false
										},
										{
											"name": "registrycontrol.title",
											"title": "Title",
											"type": "string",
											"exportable": true,
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "date",
											"title": "Date",
											"type": "date",
											"default": "MM/YY",
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker",
											"input_group_class": "col-sm-4 col-md-4"
										},
										{
											"name": "keyIndicator",
											"title": "Key indicator (OK, KO, NA or  a number 0-100)",
											"type": "string",
											"exportable": true,
											"input_group_class": "col-sm-4 col-md-4"
										},
										{
											"name": "note",
											"title": "Notes",
											"type": "string",
											"exportable": true,
											"input": "textarea"
										},
										{
											"name": "controller",
											"title": "User",
											"type": "string",
											"exportable": true,
											"input_group_class": "col-sm-4 col-md-4",
											"show_in_insert_form": false,
											"show_in_update_form": false,
											"show_in_read_only_form": false
										}
									],
									"hidden_fields": [
										{
											"name": "controller",
											"value": "Meteor.user().profile.name"
										}
									],
									"object_type": "form"
								},
								{
									"name": "div",
									"type": "div",
									"class": "col-sm-4 col-md-3",
									"components": [
										{
											"name": "attachment",
											"type": "custom_component",
											"query_name": "files_all",
											"html": "<template name=\"TEMPLATE_NAME\">\n <br><br>\n  \n\t<div id=\"dropzone\" class=\"panel panel-default dropzone\">\n            \n       <div class=\"panel-heading no-padding\">\n              <div class=\"custom-file\">\n                  <label class=\"custom-file-label\" for=\"upload\" title=\"Click to attach files\" style=\"cursor: pointer;\">Attachments \n                     <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\" style=\"color: #3399f3;\"></i> \n                  </label>\n                  <input type=\"file\" class=\"custom-file-input\" multiple id=\"upload\">\n              </div>\n        </div>\n\n        <div class=\"panel-body no-padding\">\n              <ul class=\"list-group\">\n                   {{#each allegati}}\n                          <li class=\"list-group-item\">\n                               {{this.name}}\n                                   <span class=\"\">\n                                        <a href=\"{{this.url download=true}}\" class=\"btnDownload\" target=\"_parent\">\n                                              <i class=\"fa fa-cloud-download\" aria-hidden=\"true\"></i>\n                                         </a>\n                                         <label>\n                                              <i class=\"fa fa-trash-o\" style=\"color:red; cursor: pointer;\" aria-hidden=\"true\"></i>\n                                                                <input type=\"button\" value=\"Remove\" class=\"btnRemove\" style=\"display: none;\" />\n                                         </label>\n                                   </span>\n                          </li>\n                    {{else}}No files uploaded. {{/each}}\n              </ul>\n         </div>\n     </div>\n  </template>\n",
											"js": "Template.TEMPLATE_NAME.onCreated(function() { \n});\n\nTemplate.TEMPLATE_NAME.onDestroyed(function() {\n});\n\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\n\nTemplate.TEMPLATE_NAME.helpers({\n \"allegati\": function() {\n\t// console.log('=>',Files.find()); \n\treturn Files.find({'metadata.monitoringDetectionId': Session.get('monitoringdetectionId'), 'metadata.section': 'monitoring_detection'}).fetch();\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n    'change #upload': function(event, temp) {\n      FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);        \n        fileObj.metadata = { owner: Meteor.userId(), monitoringDetectionId: Session.get('monitoringdetectionId'), section: 'monitoring_detection'};\n       // console.log(Session.get('activityId'),Meteor.userId());\n        Files.insert(fileObj);\n      });\n    },\n \n    'dropped #dropzone': function(event, temp) {\n        FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);\n        fileObj.metadata = { owner: Meteor.userId(), monitoringDetectionId: Session.get('monitoringdetectionId'), section: 'monitoring_detection'};\n        var id = Files.insert(fileObj);\n       //console.log(Session.get('activityId'),Meteor.userId());\n      });\n    },\n  \n    'click .btnRemove': function(event, temp) {    \n\t\tevent.preventDefault();\n\t\tvar self = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Delete the file? Are you sure ?\",\n\t\t\ttitle: \"Delete\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n                      COLLECTION_VAR.remove({ _id: self._id });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n    }\n});\n\n",
											"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
											"gasoline": {
												"type": "gasoline",
												"templates": [
													{
														"name": "TEMPLATE_NAME",
														"type": "template"
													}
												]
											},
											"object_type": "custom_component"
										}
									],
									"object_type": "div"
								}
							],
							"route_params": [
								"monitoringdetectionId"
							],
							"controller_after_action": "Session.set('monitoringdetectionId',this.params.monitoringdetectionId);\n\n//console.log('after',Session.get('monitoringdetectionId'));"
						}
					]
				}
			]
		},
		"login_with_google": true,
		"server_startup_code": "import {ReactiveAggregate} from 'meteor/jcbernack:reactive-aggregate';\n\nvar os = Npm.require('os');\nvar containerized = require('containerized');\nvar fileMonitor= ['Branch','Libtest','Tests','Normative','Risks','Organizationunit','Users','Registrycontrols','Processes','Issues','Monitoringdetection','Activities'];\n\npasswdAD =\"\";\n\nvar getIp = function() {\n    // Get interfaces\n    var netInterfaces = os.networkInterfaces();\n    // Result\n    var result = [];\n    for (var id in netInterfaces) {\n      var netFace = netInterfaces[id];\n\n      for (var i = 0; i < netFace.length; i++) {\n        var ip = netFace[i];\n        if (ip.internal === false && ip.family === 'IPv4') {\n          result.push(ip);\n        }\n      }\n    }   \n    return result[0].address;\n};\n\n\nconsole.log(\"=> Server IP:\",getIp());\nconsole.log(\"=> MONGO_URL: \", process.env.MONGO_URL);\nconsole.log(\"=> ROOT_URL: \",process.env.ROOT_URL);\n\n\nif (process.env.passwdAD) {\n\t\tpasswdAD = process.env.passwdAD;\n\t\tconsole.log(\"=> PasswordAD: ..\",passwdAD.substr(4, 1),'..');\n} else {console.log(\"=> Active Direcoty disable\");}\n\n\n\n if (containerized()) {\n    console.log('=> I am running inside a Docker container.');\n} else {\n    console.log('=> I am NOT running inside a Docker container.');\n}\n\n\nvar windows = process.env.OS == 'Windows_NT' ? true : false;\nif (windows){\n\tconsole.log('=> System:', process.env.OS);\n\t}\nelse {console.log('=> The current server is not on Windows. Linux?');}\n\n\nfunction calendar () {\n\tvar now = Math.floor((moment().unix()));\n    console.log('now:',now);\n}\n\n\n\nvar watt = SyncedCron.add({\n\tname: 'watt',\n\tschedule: function(parser) {return parser.recur().every(20).minute();},\n\tjob: calendar\n});\n\nSyncedCron.config({log: false});\n\nSyncedCron.start();\n\n\n\n// Function to obtain the Collection from his name\ngetCollection = function (string) {\n  for (var globalObject in this) {\n      if (this[globalObject] instanceof Meteor.Collection) {\n          if (globalObject === string) {\n              return (this[globalObject]);\n              break;\n          };\n      }\n  }\n  return undefined; // if none of the collections match\n};\n\n\n\nfileMonitor.forEach(function(file){\n  var Collection = Promise.await(getCollection(file));\n  var t = Promise.await( Collection.remove({}) );\t\n  var items = JSON.parse(Assets.getText(file+\".json\"));\n  items.forEach(function(item){\n     if (file==\"Users\") {Accounts.createUser(item);} else Collection.insert(item);\n  });\n  console.log('Data uploaded:', file,' (',Collection.find({}).count(),')');\n});\n\n\nMeteor.methods({\n\t\t\"additionalData\": function(id) {\n\t\t\tlet tests = Promise.await( Tests.find({activityId: id}).fetch() );\n\t\t\tlet issues = Promise.await( Issues.find({activityId: id}).fetch() );\n\t\t\tvar outputjson = {issues: [], tests: [] } ;\n\t\t\tfor (i = 0; i < issues.length; i++) { outputjson.issues.push(issues[i]);}\n\t\t\tfor (i = 0; i < tests.length; i++) { outputjson.tests.push(tests[i]);}\n\t\t\treturn  outputjson;\n\t\t},\n          \n        \"parseUpload\": function(coll,data) {\n            check( data, Array );\n            var Collection = Promise.await(getCollection(coll));\n         \t// var t = Promise.await( Collection.remove({}) );\n         \t// for ( i = 0; i < data.length; i++ ) {           \n\t\t \t//\t\tCollection.insert( data[ i ] );\n         \t// }\n          \n         \tfor ( i = 0; i < data.length; i++ ) {\n\t\t\t\tif ( !Collection.findOne(data[i]) ) { Collection.insert(data[i]);} else { console.warn( coll,': Rejected. This item already exists.');}\n    \t    }    \t \n        }\n});\n\n          \nvar pipeline =[\n  {$sort : { date : -1 }},\n  {$group: { _id: \"$controlId\", date: { \"$first\": \"$date\" },controller: { \"$first\": \"$controller\"},keyIndicator: { \"$first\": \"$keyIndicator\"},note: { \"$first\": \"$note\"} }}\n];\n\n\nMeteor.publish(\"MonitoringdetectionByid\", function() {\n    ReactiveAggregate(this, Monitoringdetection, pipeline, { clientCollection: \"clientMonitoringdetectionByid\" });\n});\n\n\n\nvar pipeline1 =[{$group: { _id: \"$process\", subprocess: { $push: \"$subprocess\" } } }];\nMeteor.publish(\"processuniq\", function() {\n    ReactiveAggregate(this, Processes, pipeline1, { clientCollection: \"clientprocessuniq\" });  \n});\n\n\nvar pipeline2 =[{$group: { _id: { subprocess: \"$subprocess\", process: \"$process\" },\n\t\t\t\t\t\t   process: {$first:\"$process\" },\n\t\t\t\t\t\t   subprocess: {$first:\"$subprocess\" }\t\t\t\t\t\t\t\t\t\t\t\t\t \n\t\t\t\t\t\t }\n\t\t\t\t},\n                {$project: { _id: {$concat: ['$process','-','$subprocess'] },\n\t\t\t\t\t\t\t\"subprocess\": \"$subprocess\",\n\t\t\t\t\t\t\t\"process\": \"$process\" \n                }\n\t\t\t   }];\n\n\nMeteor.publish(\"subprocessuniq\", function() {\n    ReactiveAggregate(this, Processes, pipeline2, { clientCollection: \"clientsubprocessuniq\" });\n});\n\n",
		"client_startup_code": "Template.registerHelper(\"showIcon\", function (status) {\n  var s=\"\";  \n  switch(status) {\n       case \"Started\":\n            s = \"fa fa-hourglass-start\";\n            break;\n        case \"Working in progress\":\n            s = \"fa fa-cogs\";\n            break;\n        case \"Closed\":\n            s = \"fa fa-diamond\";\n            break;\n        case \"Approved\":\n            s = \"fa fa-check\";\n            break;\n        case \"Archived\":\n            s = \"fa fa-lock\";\n            break;\n  } \n  var codehtml=\"\";\n  codehtml=\"<div title='\"+status+\"' style='text-align:center;'><i class='\"+s+\"'aria-hidden='true'></i></div>\";  \n  return new Handlebars.SafeString(codehtml);    \n});\n\n",
		"on_user_created_code": "if(options.roles) {user.roles = options.roles;}\nuser.profile.username = options.name;\nuser.profile.email = options.email;\n\n// Hack to delete duplicate entries\n// Users.remove({ email: options.email });\n//console.log(options);",
		"stylesheet": ".checkout-wrap {\n    font-family:'PT Sans Caption', sans-serif;\n   // margin: 30px auto 100px;\n  //  margin: 0px auto 0px;\n  padding-right: 0px;\n    z-index: 0;\n//    margin-right: 30px;\n}\n\nul.checkout-bar  {\n    position: relative;\n    margin-top: 0px;\n    margin-bottom: 0px;\n    padding: 0;\n    line-height: 0px;\n    font-size: 0px;\n}\n\n\n\nul.checkout-bar li {\n//    color: #ccc;\n//    font-size: 16px;\n//    font-weight: 600;\n    position: relative;\n    display: inline-block;\n//    margin: 20px auto;\n    padding: 0;\n    text-align: center;\n    width: 20%;\n}\nul.checkout-bar li:before {\n    -webkit-box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    background: #ddd;\n    border: 2px solid #FFF;\n    border-radius: 50%;\n    color: #fff;\n//    font-size: 16px;\n//    font-weight: 700;\n//    text-align: center;\n//    text-shadow: 1px 1px rgba(0, 0, 0, 0.2);\n    height: 34px;\n//    left: 40%;\n    line-height: 34px;\n    position: absolute;\n    top: -62px;\n    width: 34px;\n    z-index: 99999;\n}\n\n\nul.checkout-bar li.selected:before {\n    background: #bfbfbf;\n}\n\nul.checkout-bar li.selectedend:before {\n    background: #036c99;\n}\n\n\nul.checkout-bar li.suggested:before {\n    background: #d2ea9a;\n    cursor: pointer;\n    animation:\n      fonticon 3s forwards,\n      statusicon 3s forwards;\n}\n\n\n/*\nul.checkout-bar li.selected {\n    color: #036c99;\n    z-index: 99999;\n    background: none;\n}\n\nul.checkout-bar li.selected:before {\n    background: #036c99;\n    z-index: 99999;\n}\n\n*/\n\n\nul.checkout-bar li:nth-child(1):before {\n    font-family: FontAwesome;\n    content:\"\\f251\";\n    font-size: 15px;\n    font-weight: 10;\n}\nul.checkout-bar li:nth-child(2):before {\n    font-family: FontAwesome;\n    content:\"\\f085\";\n    font-size: 15px;\n    font-weight: 10;\n}\nul.checkout-bar li:nth-child(3):before {\n    font-family: FontAwesome;\n    content:\"\\f219\";\n    font-size: 15px;\n    font-weight: 10;\n}\nul.checkout-bar li:nth-child(4):before {\n    font-family: FontAwesome;\n    content:\"\\f00c\";\n    font-size: 15px;\n    font-weight: 10;\n}\nul.checkout-bar li:nth-child(5):before {\n    font-family: FontAwesome;\n    content:\"\\f023\";\n    font-size: 15px;\n    font-weight: 10;\n}\n\n\n\nul.checkout-bar li:nth-child(1).selected:before {color: #67a6c1;}\nul.checkout-bar li:nth-child(2).selected:before {color: #67a6c1;}\nul.checkout-bar li:nth-child(3).selected:before {color: #67a6c1;}\nul.checkout-bar li:nth-child(4).selected:before {color: #67a6c1;}\nul.checkout-bar li:nth-child(5).selected:before {color: #67a6c1;}\nul.checkout-bar li:nth-child(5).selectedend:before {color: #67a6c1;}\n\nul.checkout-bar li:nth-child(3).suggested:before {color: #a6c167;cursor: pointer;}\nul.checkout-bar li:nth-child(4).suggested:before {color: #a6c167;cursor: pointer;}\nul.checkout-bar li:nth-child(5).suggested:before {color: #a6c167;cursor: pointer;}\n\n\n\n// here init the configuration bar\n\n/*\nul.checkout-bar {\n    -webkit-box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    background-size: 35px 35px;\n    background-color: #EcEcEc;\n    background-image: -webkit-linear-gradient(-45deg, rgba(255, 255, 255, 0.4) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.4) 75%, transparent 75%, transparent);\n    background-image: -moz-linear-gradient(-45deg, rgba(255, 255, 255, 0.4) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.4) 50%, rgba(255, 255, 255, 0.4) 75%, transparent 75%, transparent);\n    border-radius: 15px;\n    height: 8px;\n    margin: 0 -15px 0;\n    padding: 0;\n    position: absolute;\n    width: 100%;\n\n}\n*/\n\n/*\nul.checkout-bar:before {\n    background-size: 35px 35px;\n    background-color: #036c99;\n    background-image: -webkit-linear-gradient(-45deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\n    background-image: -moz-linear-gradient(-45deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\n    -webkit-box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    border-radius: 15px;\n    content:\" \";\n    height: 8px;\n    left: 0;\n    position: absolute;\n    width: 14%;\n}\n*/\n\n\nul.checkout-bar li.selected:after {\n    background-size: 35px 35px;\n    background-color: #67a6c1;\n    background-image: -webkit-linear-gradient(-45deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\n    background-image: -moz-linear-gradient(-45deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\n    -webkit-box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    content:\"\";\n    height: 6px;\n //   left: 50%;\n    position: absolute;\n    width: 100%;\n    z-index: 99;\n    top: -48px;\n}\n\n\n/*\nul.checkout-bar li.suggested:after {\n    background-size: 35px 35px;\n    background-color: #036c99;\n    background-image: -webkit-linear-gradient(-45deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\n    background-image: -moz-linear-gradient(-45deg, rgba(255, 255, 255, 0.2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.2) 50%, rgba(255, 255, 255, 0.2) 75%, transparent 75%, transparent);\n    -webkit-box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    box-shadow: inset 2px 2px 2px 0px rgba(0, 0, 0, 0.2);\n    content:\"\";\n    height: 8px;\n    left: 47%;\n    position: absolute;\n    top: -47px;\n    width: 100%;\n    z-index: 99;\n}\n*/\n\n\n\n/******************************************/\n/*  */\n/******************************************/\n.wrapper {\n  display: table;\n  height: 100%;\n  width: 100%;\n}\n\n.container-fostrap {\n  display: table-cell;\n  padding: 1em;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.card {\n    display: block;\n  /* ---mtt */\n    height: 100%;\n    position: relative;\n  /* ---mtt */\n    margin-top: 20px;\n    margin-bottom: 25px;\n    line-height: 1.42857143;\n    background-color: #fff;\n    border-radius: 2px;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);\n    transition: box-shadow .25s;\n}\n.card:hover {\n  box-shadow: 0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.img-card {\n  width: 100%;\n  height:100%;\n  border-top-left-radius:2px;\n  border-top-right-radius:2px;\n  display:block;\n  overflow: hidden;\n}\n\n.img-card img{\n  width: 100%;\n  height: 200px;\n  object-fit:cover;\n  transition: all .25s ease;\n}\n\n.card-content {\n  padding:10px;\n  font-size: 0.9em;\n  text-align:left;\n  /* ---mtt */\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 8;\n  -webkit-box-orient: vertical;\n  /* ---mtt */\n}\n.card-title {\n  padding-top:4px;\n  padding-left:10px;\n  padding-right:10px;\n  height: 36px;\n  text-align:left;\n  font-size: 0.9em;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.card-title a {\n  color: #000;\n  text-decoration: none !important;\n}\n\n.card-read-more {\n    /* ---mtt */\n  position: absolute;\n  bottom: 0; right: 0;  left: 0;\n    /* ---mtt */\n // border-top: 1px solid #D4D4D4;\n}\n.card-read-more a {\n  //text-decoration: none !important;\n  padding:2px;\n//  font-weight:600;\n  //text-transform: uppercase\n}\n\n/******************************************/\n\n\n\n\n.dashboard {\n  \tborder: #cdcdcd medium solid;\n\tborder-radius: 10px;\n    height: 100%;\n  \tfont-size: small;\n}\n\n.no-border [class*=\"-6\"] {\n\tpadding-left:0;\n    padding-right:0;\n}\n\n.divlib {\n    border-style: solid;\n    border-width: 2px;\n  \tborder-radius: 25px;\n  \tfont-size: small;\n}\n\n\nul.list-group:after {\n  content: \"\";\n}\n\n\nli.borderless {\n  border: 0 none;\n}\n\n/*\n.selected {\n  \tanimation: \n      fonticon 4s forwards,\n      statusicon 4s forwards;     \n}\n\n.suggested {\n\tcolor: #76f233;\n    cursor: pointer;\n\tfont-size: 16px;\n}\n*/\n\n@keyframes statusicon {\n    from { color: #fff;}\n    to {color: #a6c167;}\n}\n\n\n@keyframes fonticon {\n  0% {font-size: 15px;}\n  10% {font-size: 17px;}\n  20% {font-size: 19px;}\n  30% {font-size: 21px;}\n  40% {font-size: 23px;}\n  60% {font-size: 25px;}\n  70% {font-size: 27px;}\n  80% {font-size: 28px;}\n  90% {font-size: 29px;}\n 100% {font-size: 15px;}\n}\n",
		"copy_files": [
			{
				"source": "favicon.ico",
				"dest": "PUBLIC_DIR/favicon.ico"
			},
			{
				"source": "collections",
				"dest": "PRIVATE_DIR/"
			},
			{
				"source_content": "Meteor.methods({\n  \"ldapquery\": function(data) {\n  \n    if (process.env.passwdAD) {   \n\t\tconst bound = Meteor.bindEnvironment((callback) => {callback();});\n        var ActiveDirectory = require('activedirectory2');\n        var config = {url: 'ldap://192.168.208.75',\n                          baseDN: 'dc=intranet,dc=ifis,dc=local',\n                          username: 'matteo.setti@bancaifis.it',\n                          password : passwdAD,               \n                          attributes: {\n                                    user: [\n                                      'dn', 'distinguishedName',\n                                      'userPrincipalName', 'sAMAccountName', 'mail',\n                                      'lockoutTime', 'whenCreated', 'pwdLastSet', 'userAccountControl',\n                                      'employeeID', 'sn', 'givenName', 'initials', 'cn', 'displayName',\n                                      'comment', 'description', 'department', 'title', 'directReports'\n                                    ],\n                                    group: [\n                                      'dn', 'cn', 'description', 'distinguishedName', 'objectCategory'\n                                    ]\n                                  }                          \n                           };\n        var ad = new ActiveDirectory(config);\n      \n        var query = '(&(objectClass=person)(objectClass=user))';\n    \n        var opts = {\n                includeMembership : [ 'group', 'user' ], // Optionally can use 'all'\n                includeDeleted : false\n        };\n\n        console.log(\"Interrogazione active directory\");\n    \n         ad.find(query, function(err, results) {\n             // Wrap callback into Fiber\n             // https://forums.meteor.com/t/meteor-code-must-always-run-within-a-fiber-try-wrapping-callbacks-that-you-pass-to-non-meteor-libraries-with-meteor-bindenvironmen/40099\n             bound(() => {                 \n                  if ((err) || (! results)) {\n                    console.log('ERROR: ' + JSON.stringify(err));\n                    return;\n                  }\n                \n                  console.log('Groups');\n                  _.each(results.groups, function(group) {\n                    console.log('  ' + group.cn);                    \n                  });\n                \n                  Profili.remove({});\n               \n                  console.log('Users');\n                  _.each(results.users, function(user) {                   \n                   Profili.insert({user: user.cn, department: user.department, whenCreated: user.whenCreated});      \n                  });\n                  \n             });   \n         });\n      }\n      else {console.log('Active Directory disable');}\n    },  \n// ==================================================================  \n  \n   genericldapquery(query) {           \n    if (process.env.passwdAD) {   \n\t\tconst bound = Meteor.bindEnvironment((callback) => {callback();});\n        var ActiveDirectory = require('activedirectory2');\n        var config = {url: 'ldap://192.168.208.75',\n                          baseDN: 'dc=intranet,dc=ifis,dc=local',\n                          username: 'matteo.setti@bancaifis.it',\n                          password : passwdAD,               \n                          attributes: {\n                                      user: [\n                                        'dn', 'distinguishedName',\n                                        'userPrincipalName', 'sAMAccountName', 'mail',\n                                        'lockoutTime', 'whenCreated', 'pwdLastSet', 'userAccountControl',\n                                        'employeeID', 'sn', 'givenName', 'initials', 'cn', 'displayName',\n                                        'comment', 'description', 'department', 'title', 'directReports'],\n                                      group: ['dn', 'cn', 'description', 'distinguishedName', 'objectCategory']\n                                      }                          \n                      };\n      \n        var ad = new ActiveDirectory(config);\n            \t\n        console.log(\"query:\",query); \n      \n        var opts = {\n                includeMembership : [ 'group', 'user' ], // Optionally can use 'all'\n                includeDeleted : false\n        };\n\n        console.log(\"Interrogazione active directory\");   \n      \n        ad.find(query, function(err, results) {    \n             // Wrap callback into Fiber\n             // https://forums.meteor.com/t/meteor-code-must-always-run-within-a-fiber-try-wrapping-callbacks-that-you-pass-to-non-meteor-libraries-with-meteor-bindenvironmen/40099\n             bound(() => {\n                  if ((err) || (! results)) {\n                    console.log('ERROR: ' + JSON.stringify(err));\n                  } else { console.log('results:',results); Ldap.insert({domain_users: results});};\n             });\n         });\n      }\n      else {console.log('Active Directory disable');}\n    }       \n});\n",
				"dest": "SERVER_METHODS_DIR/my-methods.js"
			},
			{
				"source_content": "Meteor.publish(\"q_users\", function() {\n      \n        return Users.find({}, {fields:{\"profile.name\": true}} );      \n});",
				"dest": "SERVER_PUBLISH_DIR/users_collection.js"
			}
		],
		"packages": {
			"meteor": [
				"littledata:synced-cron",
				"msavin:mongol",
				"random",
				"perak:c3",
				"jcbernack:reactive-aggregate",
				"ostrio:meteor-root",
				"harrison:papa-parse",
				"themeteorchef:bert",
				"check",
				"raix:ui-dropped-event"
			],
			"npm": [
				"activedirectory2",
				"jsreport-browser-client-dist",
				"containerized",
				"@ckeditor/ckeditor5-build-classic"
			]
		}
	}
}
