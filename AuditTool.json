{
	"application": {
		"title": "AuditTool",
		"meta_description": "AuditTool",
		"meta_title": "AuditTool",
		"theme": "bootswatch-spacelab",
		"animate": true,
		"footer_text": "AuditTool Alfa Company - Copyright (c) 2018, MIT License, release 0.0.9",
		"roles": [
			"admin",
			"user",
			"auditor"
		],
		"default_role": "user",
		"collections": [
			{
				"name": "activities",
				"type": "collection",
				"fields": [
					{
						"name": "status",
						"title": "Status",
						"type": "string",
						"default": "Avviato",
						"exportable": true,
						"input": "select",
						"array_item_type": "object",
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "tipo",
						"title": "Activity type",
						"type": "string",
						"exportable": true,
						"input": "radio",
						"array_item_type": "object",
						"show_in_update_form": false
					},
					{
						"name": "titolo",
						"title": "Title",
						"type": "string",
						"exportable": true,
						"show_in_insert_form": false
					},
					{
						"name": "data",
						"title": "Audit start date",
						"type": "date",
						"default": "today",
						"format": "DD/MM/YYYY",
						"exportable": true,
						"input": "datepicker",
						"show_in_insert_form": false
					},
					{
						"name": "auditors",
						"title": "Auditors",
						"type": "array",
						"default": "{{userFullName}}",
						"exportable": true,
						"input": "select-multiple",
						"lookup_key": "auditor",
						"lookup_field": "auditor"
					},
					{
						"name": "obiettivo",
						"title": "Activity objective",
						"type": "string",
						"exportable": true,
						"input": "textarea",
						"show_in_insert_form": false
					},
					{
						"name": "company",
						"title": "Companies",
						"type": "array",
						"input": "checkbox",
						"input_items": [
							{
								"value": "alpha",
								"title": "Alpha Company"
							},
							{
								"value": "beta",
								"title": "Beta Company"
							},
							{
								"value": "gamma",
								"title": "Gamma Company"
							},
							{
								"value": "delta",
								"title": "Delta Company"
							},
							{
								"value": "omega",
								"title": "Omega Company"
							}
						]
					},
					{
						"name": "riskArea",
						"title": "Risk area (ICAAP)",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "risks_all",
						"lookup_key": "ICAAP",
						"lookup_field": "ICAAP",
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "rischiEsaminati",
						"title": "Examinated risks",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "risks_all",
						"lookup_key": "risk",
						"lookup_field": "risk",
						"show_in_insert_form": false
					},
					{
						"name": "strutture",
						"title": "Organization Units",
						"type": "array",
						"exportable": true,
						"input": "select-multiple",
						"lookup_query_name": "strutture_all",
						"lookup_key": "uo",
						"lookup_field": "uo",
						"show_in_insert_form": false
					},
					{
						"name": "numero",
						"title": "Activity number",
						"type": "string",
						"exportable": true,
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "normativeint",
						"title": "Internal legislation",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "normativeint",
						"lookup_key": "norma",
						"lookup_field": "norma",
						"show_in_insert_form": false
					},
					{
						"name": "normativeext",
						"title": "External legislation",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "normativeext",
						"lookup_key": "norma",
						"lookup_field": "norma",
						"show_in_insert_form": false
					},
					{
						"name": "processi",
						"title": "Processes",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "processi",
						"lookup_key": "processo",
						"lookup_field": "processo",
						"show_in_insert_form": false
					},
					{
						"name": "sottoprocessi",
						"title": "Sub processes",
						"type": "array",
						"input": "select-multiple",
						"lookup_query_name": "sottoprocessi",
						"lookup_key": "sottoprocesso",
						"lookup_field": "sottoprocesso",
						"show_in_insert_form": false
					},
					{
						"name": "memo",
						"title": "Executive Summary",
						"type": "string",
						"input": "textarea",
						"show_in_insert_form": false
					},
					{
						"name": "filiale",
						"title": "Branch",
						"type": "string",
						"input": "select",
						"lookup_query_name": "filiali_all",
						"lookup_key": "filiale",
						"lookup_field": "filiale",
						"show_in_insert_form": false
					},
					{
						"name": "sci",
						"title": "SCI evaluetion",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "Positiva",
								"title": "Positive"
							},
							{
								"value": "Parzialmente positiva +",
								"title": "Partial positive"
							},
							{
								"value": "Parzialmente positiva",
								"title": "Partial"
							},
							{
								"value": "Parzialmente positiva -",
								"title": "Partial negative"
							},
							{
								"value": "Negativa",
								"title": "Negative"
							}
						],
						"show_in_insert_form": false
					},
					{
						"name": "rischioResiduo",
						"title": "Residual risk evaluetion",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "Alto",
								"title": "Alto"
							},
							{
								"value": "Medio",
								"title": "Medio"
							},
							{
								"value": "Basso",
								"title": "Basso"
							},
							{
								"value": "Non significativo",
								"title": "Non significativo"
							}
						],
						"show_in_insert_form": false
					},
					{
						"name": "closedate",
						"title": "Data chiusura attività",
						"type": "date",
						"default": "today",
						"format": "DD/MM/YYYY",
						"input": "datepicker",
						"show_in_insert_form": false
					},
					{
						"name": "nextreadystatus",
						"type": "bool",
						"default": "false",
						"searchable": false,
						"sortable": false,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					}
				],
				"owner_field": "ownerId",
				"update_rule": "userId && (doc.ownerId == userId || Users.isInRoles(userId, [\"admin\"]) || _.contains(doc.auditors, Users.findOne({_id:userId},{}).profile.name))\n",
				"before_insert_code": "if(!doc.auditors) doc.auditors = [Meteor.userId()];",
				"before_update_code": "var checkCompleted = function() {\n\t\tvar CKdatachiusura =  (modifier.$set.datachiusura === undefined) ? doc.datachiusura : modifier.$set.datachiusura;\n\t\tvar CKmemo = (modifier.$set.memo === undefined) ? doc.memo : modifier.$set.memo;\n      //===========================\n        /*\n\t\tvar carenzaNumbers = Carenze.find({activityId: doc._id},{fields: {carenzaId: 1 }}).fetch();  \n        var x = _.each(carenzaNumbers, function(doc){return parseInt(doc.carenzaId.split('_')[3]);});\n        var x1= x.sort(function (a, b) {  return a - b;  });\n        var x2= _.uniq(x1);\n        var CKnumCarenze = ((x1.lenght() === _x2.lenght()) && (_.last(x2) === x1.lenght())) ? true : false;\n      */\n      // ===============================  \n\t\tconsole.log(\"VERIFICARE LA PRESENZA DI BUCHI NELLA NUMERAZIONE DELLE CARENZE\");\n\t\tconsole.log(\"VERIFICARE CHE TUTTE LE VERIFICHE HANNO UNA VALUTAZIONE\");\n\t\tconsole.log(\"VERIFICARE CHE TUTTE LE VERIFICHE FAIL SIANO INDIRIZZATE AD UNA CARENZA\");\n\t\t\t\t\t\t\t\t\n\t//\tif (!!CKdatachiusura && !!CKmemo && !!CKnumCarenze) { modifier.$set.nextreadystatus = true;} else { modifier.$set.nextreadystatus = false;}  \n        if (!!CKdatachiusura && !!CKmemo) { modifier.$set.nextreadystatus = true;} else { modifier.$set.nextreadystatus = false;}\n  console.log ('before update',modifier.$set.nextreadystatus);\n};\n\nif(( doc.status === \"Working in progress\")) {checkCompleted();}\n\n\nif(( modifier.$set.status !== \"Approve\" && doc.status === \"Close\")) {\n\t\t\t\t\t\t\t\t\tmodifier.$set.status = \"Working in progress\";\n\t\t\t\t\t\t\t\t\tcheckCompleted();}\n\n\n\nif(( modifier.$set.status !== \"Archive\" && doc.status === \"Approve\")) {\n\t\t\t\t\t\t\t\t\tmodifier.$set.status = \"Working in progress\"; \n\t\t\t\t\t\t\t\t\tcheckCompleted();} \n\n\nif( modifier.$set.status === \"Approve\") {                 \n  \t\t// Inserisce il numero di audit automaticamente\n\t\t\tvar max = 0;\n            var auditNumbers = Activities.find({status: { \"$in\" : [\"Approve\",\"Archive\"]}},{ fields: { numero: 1 }}).fetch();\n\t\t\t_.each(auditNumbers, function(doc)\t{var intNum = parseInt(doc.numero.split('/')[0]);if(!isNaN(intNum) && intNum > max) max = intNum;});\n\t\t\tmodifier.$set.numero =  (max + 1)+\"/\"+moment().format('YYYY');\n  \t\t// Aggiornare la numerazione delle carenze\n            console.log(\"Assegnato numero verbale di audit\",(max + 1)+\"/\"+moment().format('YYYY'));\n  \n                                                  }\n\n\nif( doc.status === \"Start\") {modifier.$set.status = \"Working in progress\";}\nif( doc.status === \"Archive\") {throw new Meteor.Error(403, \"Audit Archived. You can change it !\");}\n\n\n",
				"before_remove_code": "if( doc.status === \"Archiviato\") {throw new Meteor.Error(403, \"Audit Archiviato: Non più modificabile !\");}",
				"after_remove_code": "//ToDo: dopo la rimozione di Activities vanno rimosse \"carenze\", \"test\", file."
			},
			{
				"name": "risks",
				"type": "collection",
				"fields": [
					{
						"name": "risk",
						"title": "Principali aree di rischio",
						"type": "string",
						"show_in_insert_form": false
					},
					{
						"name": "ICAAP",
						"title": "Principali rischi ICAAP",
						"type": "string",
						"show_in_insert_form": false,
						"show_in_update_form": false
					}
				]
			},
			{
				"name": "organizationunit",
				"type": "collection",
				"fields": [
					{
						"name": "uo",
						"title": "Organization Unit",
						"type": "string",
						"input": "select-multiple"
					},
					{
						"name": "level",
						"title": "OU Level",
						"type": "string"
					}
				]
			},
			{
				"name": "issues",
				"type": "collection",
				"fields": [
					{
						"name": "carenzaId",
						"title": "Issue number",
						"type": "string",
						"default": "{{nextCarenzaNumber}}",
						"required": true,
						"exportable": true,
						"show_in_update_form": false
					},
					{
						"name": "activityId",
						"title": "Activity Id",
						"type": "string",
						"required": true,
						"searchable": false,
						"sortable": false,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "titolo",
						"title": "Issue title",
						"type": "string",
						"required": true
					},
					{
						"name": "company",
						"title": "Concerned companies",
						"type": "string",
						"required": true
					},
					{
						"name": "descrizione",
						"title": "Issue details",
						"type": "string",
						"required": true,
						"exportable": true,
						"input": "textarea",
						"show_in_dataview": false
					},
					{
						"name": "data",
						"title": "Issue date",
						"type": "date",
						"default": "today",
						"required": true,
						"format": "DD-MM-YYYY",
						"exportable": true,
						"input": "datepicker"
					},
					{
						"name": "livello",
						"title": "Issue level",
						"type": "string",
						"required": true,
						"exportable": true,
						"input": "select",
						"input_items": [
							{
								"value": "ridotto",
								"title": "Low"
							},
							{
								"value": "medio",
								"title": "Medium"
							},
							{
								"value": "alto",
								"title": "High"
							},
							{
								"value": "moltoalto",
								"title": "Very high"
							}
						]
					},
					{
						"name": "companies",
						"title": "Companies interested",
						"type": "array",
						"required": true,
						"input": "checkbox",
						"input_items": [
							{
								"value": "alfa",
								"title": "Alfa Company"
							},
							{
								"value": "beta",
								"title": "Beta Company"
							},
							{
								"value": "gamma",
								"title": "Gamma Company"
							},
							{
								"value": "delta",
								"title": "Delta Company"
							},
							{
								"value": "omega",
								"title": "Omega Company"
							}
						]
					},
					{
						"name": "issue_owner",
						"title": "Issue owner",
						"type": "string",
						"required": true
					},
					{
						"name": "tipo",
						"title": "Issue nature",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "-",
								"title": "-"
							},
							{
								"value": "Errore Umano",
								"title": "Errore Umano"
							},
							{
								"value": "Carenza Documentale",
								"title": "Carenza Documentale"
							},
							{
								"value": "Natura",
								"title": "Natura"
							}
						]
					},
					{
						"name": "dbi",
						"title": "External controller",
						"type": "bool",
						"input": "checkbox"
					}
				],
				"owner_field": "ownerId",
				"before_insert_code": "//Meteor.call(\"activitiesUpdate\", doc.activityId,{});",
				"before_update_code": "\n//Meteor.call(\"activitiesUpdate\", doc.activityId,{});\n",
				"before_remove_code": "//Meteor.call(\"activitiesUpdate\", doc.activityId,{});",
				"after_update_code": "if(( modifier.$set.numero !== undefined)) {\n\t\t\t\t\t\t\t\t\tconsole.log(\"RIASSEGNARE L'ID ALLE CARENZE\");\n\t\t\t\t\t\t\t\t\t}"
			},
			{
				"name": "files",
				"type": "file_collection",
				"storage_adapters": [
					"gridfs"
				],
				"owner_field": "ownerId"
			},
			{
				"name": "tests",
				"type": "collection",
				"fields": [
					{
						"name": "numero",
						"title": "Test number",
						"type": "string",
						"default": "{{nextVerificaNumber}}",
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "titolo",
						"title": "Test title",
						"type": "string",
						"default": "{{titleVerifica}}",
						"required": true
					},
					{
						"name": "obiettivo",
						"title": "Test scope",
						"type": "string",
						"default": "{{descriptionVerifica}}",
						"input": "textarea"
					},
					{
						"name": "descrizione",
						"title": "Test description",
						"type": "string",
						"input": "textarea",
						"show_in_dataview": false,
						"show_in_insert_form": false
					},
					{
						"name": "activityId",
						"title": "ActivityId",
						"type": "string",
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "esito",
						"title": "Result",
						"type": "string",
						"input": "select",
						"input_items": [
							{
								"value": "-",
								"title": "-"
							},
							{
								"value": "fail",
								"title": "FAIL"
							},
							{
								"value": "pass",
								"title": "PASS"
							}
						],
						"show_in_insert_form": false
					}
				],
				"owner_field": "ownerId"
			},
			{
				"name": "normative",
				"type": "collection",
				"fields": [
					{
						"name": "law",
						"title": "Normativa",
						"type": "string"
					},
					{
						"name": "int_ext",
						"title": "Int-Ext",
						"type": "string"
					}
				]
			},
			{
				"name": "libtest",
				"type": "collection",
				"fields": [
					{
						"name": "libreria",
						"title": "Libreria",
						"type": "string",
						"searchable": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "descrizione",
						"title": "Descrizione",
						"type": "string",
						"searchable": false,
						"sortable": false,
						"input": "textarea",
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					},
					{
						"name": "area",
						"title": "Area",
						"type": "string",
						"searchable": false,
						"sortable": false,
						"show_in_dataview": false,
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					}
				]
			},
			{
				"name": "branch",
				"type": "collection",
				"fields": [
					{
						"name": "branch",
						"title": "Branch",
						"type": "string",
						"input": "select"
					}
				],
				"owner_field": "ownerId"
			},
			{
				"name": "registrycontrols",
				"type": "collection",
				"fields": [
					{
						"name": "area",
						"title": "Area",
						"type": "string",
						"input_group_class": "col-sm-4 col-md-4"
					},
					{
						"name": "title",
						"title": "Control title",
						"type": "string",
						"input_group_class": "col-sm-4 col-md-4"
					},
					{
						"name": "periodicity",
						"title": "Periodicity",
						"type": "string",
						"input": "radio",
						"input_group_class": "col-sm-4 col-md-4",
						"input_items": [
							{
								"value": "monthly",
								"title": "monthly"
							},
							{
								"value": "quarterly",
								"title": "quarterly"
							},
							{
								"value": "semiannual",
								"title": "semiannual"
							},
							{
								"value": "yearly",
								"title": "yearly"
							}
						]
					},
					{
						"name": "control_description",
						"title": "Control description",
						"type": "string",
						"input": "textarea"
					},
					{
						"name": "controller",
						"title": "Control owner",
						"type": "string",
						"input": "select",
						"input_group_class": "col-sm-4 col-md-4",
						"lookup_query_name": "q_users",
						"lookup_key": "profile.name",
						"lookup_field": "profile.name"
					},
					{
						"name": "charttype",
						"title": "Chart type",
						"type": "string",
						"input": "radio",
						"input_group_class": "col-sm-4 col-md-4",
						"input_items": [
							{
								"value": "line",
								"title": "line"
							},
							{
								"value": "spline",
								"title": "spline"
							},
							{
								"value": "step",
								"title": "step"
							},
							{
								"value": "area",
								"title": "area"
							},
							{
								"value": "area-spline",
								"title": "area-spline"
							},
							{
								"value": "bar",
								"title": "bar"
							},
							{
								"value": "scatter",
								"title": "scatter"
							},
							{
								"value": "pie",
								"title": "pie"
							},
							{
								"value": "donut",
								"title": "donut"
							},
							{
								"value": "gauge",
								"title": "gauge"
							}
						]
					},
					{
						"name": "enabled",
						"title": "Enabled",
						"type": "string",
						"input": "radio",
						"input_group_class": "col-sm-4 col-md-4",
						"input_items": [
							{
								"value": "true",
								"title": "Enable"
							},
							{
								"value": "false",
								"title": "Disable"
							}
						]
					}
				]
			},
			{
				"name": "monitoringdetection",
				"type": "collection",
				"fields": [
					{
						"name": "controlId",
						"title": "Control code",
						"type": "string",
						"required": true,
						"searchable": false,
						"input": "select",
						"input_group_class": "col-sm-4 col-md-4",
						"lookup_query_name": "registrycontrols_list",
						"lookup_query_params": [
							{
								"name": "name",
								"value": "Meteor.user().profile.name"
							}
						],
						"lookup_key": "_id",
						"lookup_field": "title",
						"join_collection": "registrycontrols",
						"join_container": "registrycontrol",
						"join_fields": [
							"title"
						],
						"show_in_dataview": false,
						"show_in_read_only_form": false
					},
					{
						"name": "registrycontrol.title",
						"title": "Title",
						"type": "string",
						"searchable": false,
						"show_in_insert_form": false,
						"show_in_update_form": false
					},
					{
						"name": "date",
						"title": "Date",
						"type": "date",
						"default": "MM/YY",
						"searchable": false,
						"input": "datepicker",
						"input_group_class": "col-sm-4 col-md-4"
					},
					{
						"name": "keyIndicator",
						"title": "Key indicator",
						"type": "string",
						"searchable": false,
						"input_group_class": "col-sm-4 col-md-4"
					},
					{
						"name": "note",
						"title": "Notes",
						"type": "string",
						"searchable": false,
						"input": "textarea"
					},
					{
						"name": "controller",
						"title": "User",
						"type": "string",
						"searchable": false,
						"input_group_class": "col-sm-4 col-md-4",
						"show_in_insert_form": false,
						"show_in_update_form": false,
						"show_in_read_only_form": false
					}
				]
			},
			{
				"name": "auditors",
				"type": "collection",
				"fields": [
					{
						"name": "auditor",
						"title": "Auditor",
						"type": "string",
						"input": "select-multiple",
						"lookup_key": "auditor",
						"lookup_field": "auditor"
					},
					{
						"name": "ruolo",
						"title": "Ruolo",
						"type": "string"
					}
				]
			},
			{
				"name": "processi",
				"type": "collection",
				"fields": [
					{
						"name": "settore",
						"title": "Settore",
						"type": "string"
					},
					{
						"name": "processo",
						"title": "Processo",
						"type": "string"
					},
					{
						"name": "sottoprocesso",
						"title": "Sotto processo",
						"type": "string"
					},
					{
						"name": "fase",
						"title": "Fase",
						"type": "string"
					}
				]
			},
			{
				"name": "profili",
				"type": "collection",
				"fields": [
					{
						"name": "user",
						"type": "string"
					},
					{
						"name": "department",
						"type": "string"
					},
					{
						"name": "whenCreated",
						"type": "string"
					}
				]
			}
		],
		"queries": [
			{
				"name": "admin_users",
				"collection": "users",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "admin_user",
				"collection": "users",
				"find_one": true,
				"filter": "{ \"_id\": \":userId\" }",
				"options": "{}"
			},
			{
				"name": "users_null",
				"collection": "users",
				"find_one": true,
				"filter": "{ \"_id\": null }",
				"options": "{}"
			},
			{
				"name": "current_user_data",
				"collection": "users",
				"find_one": true,
				"filter": "{\"_id\":\"Meteor.userId()\"}",
				"options": "{}"
			},
			{
				"name": "files_all",
				"collection": "files",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "strutture_all",
				"collection": "organizationunit",
				"filter": "{}",
				"options": "{\"sort\":{\"uo\":1}}"
			},
			{
				"name": "risks_all",
				"collection": "risks",
				"filter": "{}",
				"options": "{\"sort\":{\"risk\":1}}"
			},
			{
				"name": "issue",
				"collection": "issues",
				"find_one": true,
				"filter": "{\"_id\":\":carenzaId\"}",
				"options": "{}"
			},
			{
				"name": "activities_list",
				"collection": "activities",
				"filter": "{\"auditors\":\":name\"}",
				"options": "{}"
			},
			{
				"name": "activities_null",
				"collection": "activities",
				"find_one": true,
				"filter": "{\"_id\":null}",
				"options": "{}"
			},
			{
				"name": "activity",
				"collection": "activities",
				"find_one": true,
				"filter": "{\"_id\":\":activityId\"}",
				"options": "{}"
			},
			{
				"name": "issues_list",
				"collection": "issues",
				"filter": "{\"activityId\":\":activityId\"}",
				"options": "{}"
			},
			{
				"name": "normativeext",
				"collection": "normative",
				"filter": "{\"int_ext\":\"external law\"}",
				"options": "{\"sort\":{\"law\":1}}"
			},
			{
				"name": "libtest",
				"collection": "libtest",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "filiali_all",
				"collection": "branch",
				"filter": "{}",
				"options": "{\"sort\":{\"branch\":1}}"
			},
			{
				"name": "user_auditors_all",
				"collection": "users",
				"filter": "{\"roles\":{\"$in\":\"auditor\"}}",
				"options": "{\"sort\":{\"auditor\":1}}"
			},
			{
				"name": "activity_all",
				"collection": "activities",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "normativeint",
				"collection": "normative",
				"filter": "{\"int_ext\":\"internal law\"}",
				"options": "{\"sort\":{\"law\":1}}"
			},
			{
				"name": "processi",
				"collection": "processi",
				"filter": "{\"processo\":{\"$ne\":null}}",
				"options": "{\"sort\":{\"processo\":1}}"
			},
			{
				"name": "sottoprocessi",
				"collection": "processi",
				"filter": "{\"sottoprocesso\":{\"$ne\":null}}",
				"options": "{\"sort\":{\"sottoprocesso\":1}}"
			},
			{
				"name": "activities_no_archived",
				"collection": "activities",
				"filter": "{\"status\":{\"$ne\":\"archived\"}}",
				"options": "{}"
			},
			{
				"name": "profili_all",
				"collection": "profili",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "tests_list",
				"collection": "tests",
				"filter": "{\"activityId\":\":activityId\"}",
				"options": "{}"
			},
			{
				"name": "test_null",
				"collection": "tests",
				"filter": "{\"_id\":null}",
				"options": "{}"
			},
			{
				"name": "test",
				"collection": "tests",
				"find_one": true,
				"filter": "{\"_id\":\":testId\"}",
				"options": "{}"
			},
			{
				"name": "q_users",
				"collection": "users",
				"filter": "{}",
				"options": "{\"profile.name\":true}"
			},
			{
				"name": "monitoring_chart",
				"collection": "monitoringdetection",
				"filter": "{}",
				"options": "{\"sort\":[[\"createdAt\",\"asc\"]]}"
			},
			{
				"name": "registrycontrols_all",
				"collection": "registrycontrols",
				"filter": "{}",
				"options": "{\"sort\":{\"area\":1,\"title\":1}}"
			},
			{
				"name": "registrycontrol",
				"collection": "registrycontrols",
				"find_one": true,
				"filter": "{\"_id\":\":monitoringcontrolId\"}",
				"options": "{}"
			},
			{
				"name": "md_name",
				"collection": "monitoringdetection",
				"filter": "{\"controller\":\":name\"}",
				"options": "{}"
			},
			{
				"name": "monitoringdetection",
				"collection": "monitoringdetection",
				"find_one": true,
				"filter": "{\"_id\":\":monitoringdetectionId\"}",
				"options": "{}"
			},
			{
				"name": "registrycontrols_list",
				"collection": "registrycontrols",
				"filter": "{\"controller\":\":name\",\"enabled\":\"true\"}",
				"options": "{}"
			},
			{
				"name": "md_all",
				"collection": "monitoringdetection",
				"filter": "{}",
				"options": "{}"
			},
			{
				"name": "md_controllid",
				"collection": "monitoringdetection",
				"filter": "{\"controlId\":\":controlId\"}",
				"options": "{}"
			}
		],
		"public_zone": {
			"type": "zone",
			"html": "<template name=\"TEMPLATE_NAME\">  \n\t<section class=\"wrapper\">\n\t\t<div class=\"container-fostrap\">\n\t\t\t<div class=\"content\">\n\t\t\t\t<div class=\"container\">\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t{{#each chart in registrycontrols_all }}\n\t\t\t\t\t\t\t<div class=\"col-xs-2 col-sm-2\">\n\t\t\t\t\t\t\t\t <div class=\"card\">\n\t\t\t\t\t\t\t\t\t {{> c3 data=(chartData chart) id=(chartId chart)}}\n\t\t\t\t\t\t\t\t\t  <div class=\"card-body\">\n\t\t\t\t\t\t\t\t\t\t<h4 class=\"card-title\">{{chart.title}} </h4>\n\t\t\t\t\t\t\t\t\t\t<p class=\"card-content\">{{chart.control_description}}</p>\n\t\t\t\t\t\t\t\t\t \t<div class=\"card-read-more\"><a href=\"http://sulaudit01:3000/monitoringdetection\" class=\"btn btn-link btn-block\">Read More</a></div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{{/each}}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</section>\n</template>\n\n",
			"components": [
				{
					"name": "left_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav",
					"title_icon_class": "fa fa-home",
					"items": [
						{
							"title": "Dashboard",
							"route": "dashboard",
							"icon_class": "fa fa-tachometer"
						},
						{
							"title": "Monitoring detection",
							"route": "monitoring_detection",
							"icon_class": "fa fa-desktop"
						},
						{
							"title": "Docs",
							"route": "docs",
							"icon_class": "fa fa-book"
						}
					],
					"object_type": "menu"
				},
				{
					"name": "right_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav navbar-right",
					"items": [
						{
							"title": "Register",
							"route": "register"
						},
						{
							"title": "Login",
							"route": "login"
						}
					],
					"object_type": "menu"
				}
			],
			"pages": [
				{
					"name": "home_public",
					"type": "page",
					"components": [
						{
							"name": "jumbotron",
							"type": "jumbotron",
							"title": "Audit Tool",
							"text": "Web Application for audits, the main function are:<br />- Track audits activities<br />- Monitoring progress<br />- Archiving documentation<br /><br /> This application is implemented with the support of Group Banca IFIS Internal Audit. The application is realized with the Meteor-Kitchen framework.<br />",
							"button_title": "Continue &raquo;",
							"button_route": "dashboard",
							"object_type": "jumbotron"
						}
					]
				},
				{
					"name": "login",
					"type": "page",
					"template": "login"
				},
				{
					"name": "register",
					"type": "page",
					"template": "register"
				},
				{
					"name": "verify_email",
					"type": "page",
					"template": "verify_email",
					"route_params": [
						"verifyEmailToken"
					]
				},
				{
					"name": "forgot_password",
					"type": "page",
					"template": "forgot_password"
				},
				{
					"name": "reset_password",
					"type": "page",
					"template": "reset_password",
					"route_params": [
						"resetPasswordToken"
					]
				},
				{
					"name": "dashboard",
					"type": "page",
					"query_name": "activity_all",
					"components": [
						{
							"name": "activities",
							"type": "div",
							"query_name": "activity_all",
							"components": [
								{
									"name": "activities",
									"type": "data_view",
									"query_name": "activity_all",
									"details_route": "dashboard.detailactivity",
									"details_route_params": [
										{
											"name": "activityId",
											"value": "this._id"
										}
									],
									"item_actions": [
										{
											"name": "print",
											"title": "Stampa PDF",
											"icon_class": "fa fa-print",
											"action_code": "e.preventDefault();\n       \n/*\nvar jsreport = require(\"jsreport-browser-client-dist\");\nvar activity = Activities.findOne({_id: this._id});\n\nvar issues = Issues.find({activityId: this._id}).fetch();\nvar issuesjson = {issues: []};\nissues.map(function(item) {issuesjson.issues.push(item);});\n\n\nvar tests = Tests.find({activityId: this._id}).fetch();\nvar testsjson = {tests: []};\ntests.map(function(item) {testsjson.tests.push(item);});\n           \nvar data =  $.extend(activity,issuesjson);\nvar data =  $.extend(data,testsjson);\n\n\nconsole.log('Stampa pdf. Dati:',data);\n\njsreport.serverUrl = 'http://'+window.location.hostname+':5488';\nvar request = {\n    template:{\"name\":\"AuditReport\"},\n    \"data\":activity             \n};\njsreport.render('_blank', request); \n\n\nreturn false;\n*/\n\n   var jsreport = require(\"jsreport-browser-client-dist\");\n   var data = Activities.findOne({_id: this._id});\n   Meteor.call(\"additionalData\", this._id, function(e1, r1) { if(e1) { alert('testsList: ',e1); return; }\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      data =  $.extend(data,r1);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  jsreport.serverUrl = 'http://'+window.location.hostname+':5488';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  var request = {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t template:{\"name\":\"AuditReport\"},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \"data\": data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  };\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t      jsreport.render('_blank', request);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  return false;\n\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t);\n\n"
										}
									],
									"fields": [
										{
											"name": "numero",
											"title": "Number",
											"type": "string",
											"default": "*",
											"exportable": true,
											"show_in_insert_form": false
										},
										{
											"name": "tipo",
											"title": "Activity type",
											"type": "string",
											"required": true,
											"exportable": true,
											"input": "radio",
											"input_items": [
												{
													"value": "Audit Filiale",
													"title": "Audit Filiale"
												},
												{
													"value": "Audit",
													"title": "Audit"
												},
												{
													"value": "Informativa",
													"title": "Informativa"
												},
												{
													"value": "Altre attività",
													"title": "Altre attività"
												}
											],
											"array_item_type": "object",
											"show_in_update_form": false
										},
										{
											"name": "titolo",
											"title": "Title",
											"type": "string",
											"required": true,
											"exportable": true
										},
										{
											"name": "data",
											"title": "Start date",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker"
										},
										{
											"name": "auditors",
											"title": "Auditors",
											"type": "array",
											"exportable": true,
											"input": "select-multiple"
										},
										{
											"name": "rischiEsaminati",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "risks_all",
											"lookup_key": "rischio",
											"lookup_field": "rischio",
											"show_in_dataview": false,
											"show_in_insert_form": false
										},
										{
											"name": "company",
											"title": "Companies interested",
											"type": "array"
										},
										{
											"name": "sci",
											"title": "Final evaluetion",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "Positiva",
													"title": "Positiva"
												},
												{
													"value": "Parzialmente positiva +",
													"title": "Parzialmente positiva +"
												},
												{
													"value": "Parzialmente positiva",
													"title": "Parzialmente positiva"
												},
												{
													"value": "Parzialmente positiva -",
													"title": "Parzialmente positiva -"
												},
												{
													"value": "Negativa",
													"title": "Negativa"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "closedate",
											"title": "Close date",
											"type": "date",
											"default": "today",
											"format": "DD-MM-YYYY",
											"input": "datepicker",
											"show_in_insert_form": false
										},
										{
											"name": "status",
											"title": "Status",
											"type": "string",
											"default": "Avviato",
											"exportable": true,
											"input": "select",
											"input_items": [
												{
													"value": "Avviato",
													"title": "Avviato"
												},
												{
													"value": "In corso",
													"title": "In corso"
												},
												{
													"value": "Completato",
													"title": "Completato"
												},
												{
													"value": "Archiviato",
													"title": "Archiviato"
												}
											],
											"array_item_type": "object",
											"show_in_insert_form": false,
											"show_in_update_form": false
										}
									],
									"object_type": "data_view"
								}
							],
							"object_type": "div"
						}
					],
					"pages": [
						{
							"name": "detailactivity",
							"type": "page",
							"query_params": [
								{
									"name": "activityId"
								}
							],
							"components": [
								{
									"name": "detailactivity",
									"type": "form",
									"query_name": "activity",
									"mode": "read_only",
									"close_route": "dashboard",
									"fields": [
										{
											"name": "numero",
											"title": "Numero",
											"type": "string",
											"exportable": true,
											"show_in_insert_form": false
										},
										{
											"name": "status",
											"title": "Status",
											"type": "string",
											"default": "Avviato",
											"exportable": true,
											"input": "select",
											"input_items": [
												{
													"value": "Avviato",
													"title": "Avviato"
												},
												{
													"value": "In corso",
													"title": "In corso"
												},
												{
													"value": "Completato",
													"title": "Completato"
												},
												{
													"value": "Archiviato",
													"title": "Archiviato"
												}
											],
											"array_item_type": "object",
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "tipo",
											"title": "Tipo attività",
											"type": "string",
											"exportable": true,
											"input": "radio",
											"input_items": [
												{
													"value": "Audit Filiale",
													"title": "Audit Filiale"
												},
												{
													"value": "Audit",
													"title": "Audit"
												},
												{
													"value": "Informativa",
													"title": "Informativa"
												},
												{
													"value": "Altre attività",
													"title": "Altre attività"
												}
											],
											"array_item_type": "object",
											"show_in_update_form": false
										},
										{
											"name": "titolo",
											"title": "Titolo",
											"type": "string",
											"exportable": true,
											"show_in_insert_form": false
										},
										{
											"name": "data",
											"title": "Data avvio attività",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker",
											"show_in_insert_form": false
										},
										{
											"name": "auditors",
											"title": "Auditors",
											"type": "array",
											"default": "{{userFullName}}",
											"exportable": true,
											"input": "select-multiple",
											"lookup_key": "auditor",
											"lookup_field": "auditor",
											"show_in_insert_form": false
										},
										{
											"name": "areeRischio",
											"title": "Aree di rischio (ICAAP)",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "risks_all",
											"lookup_key": "ICAAP",
											"lookup_field": "ICAAP",
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "rischiEsaminati",
											"title": "Principali rischi esaminati",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "risks_all",
											"lookup_key": "rischio",
											"lookup_field": "rischio",
											"show_in_insert_form": false
										},
										{
											"name": "normativeint",
											"title": "Riferimenti normativa interna",
											"type": "array",
											"input": "select-multiple",
											"lookup_query_name": "normativeext",
											"lookup_key": "norma",
											"lookup_field": "norma",
											"show_in_insert_form": false
										},
										{
											"name": "normativeext",
											"title": "Riferimenti normativa esterna",
											"type": "array",
											"input": "select-multiple",
											"show_in_insert_form": false
										},
										{
											"name": "processi",
											"title": "Processi",
											"type": "array",
											"input": "select-multiple",
											"lookup_query_name": "processi",
											"lookup_key": "processo",
											"lookup_field": "processo",
											"show_in_insert_form": false
										},
										{
											"name": "sottoprocessi",
											"title": "SottoProcessi",
											"type": "array",
											"input": "select-multiple",
											"lookup_query_name": "sottoprocessi",
											"lookup_key": "sottoprocesso",
											"lookup_field": "sottoprocesso",
											"show_in_insert_form": false
										},
										{
											"name": "memo",
											"title": "Executive Summary",
											"type": "string",
											"input": "textarea",
											"show_in_insert_form": false
										},
										{
											"name": "filiale",
											"title": "Filiale",
											"type": "string",
											"input": "select",
											"lookup_query_name": "filiali_all",
											"lookup_key": "filiale",
											"lookup_field": "filiale",
											"show_in_insert_form": false
										},
										{
											"name": "sci",
											"title": "Valutazione SCI",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "Positiva",
													"title": "Positiva"
												},
												{
													"value": "Parzialmente positiva +",
													"title": "Parzialmente positiva +"
												},
												{
													"value": "Parzialmente positiva",
													"title": "Parzialmente positiva"
												},
												{
													"value": "Parzialmente positiva -",
													"title": "Parzialmente positiva -"
												},
												{
													"value": "Negativa",
													"title": "Negativa"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "rischioResiduo",
											"title": "Valutazione rischio residuo",
											"type": "string",
											"input": "select",
											"input_items": [
												{
													"value": "Alto",
													"title": "Alto"
												},
												{
													"value": "Medio",
													"title": "Medio"
												},
												{
													"value": "Basso",
													"title": "Basso"
												},
												{
													"value": "Non significativo",
													"title": "Non significativo"
												}
											],
											"show_in_insert_form": false
										},
										{
											"name": "datachiusura",
											"title": "Data chiusura attività",
											"type": "date",
											"default": "today",
											"format": "DD/MM/YYYY",
											"input": "datepicker",
											"show_in_insert_form": false
										},
										{
											"name": "nextreadystatus",
											"type": "bool",
											"default": "false",
											"show_in_dataview": false,
											"show_in_insert_form": false,
											"show_in_update_form": false,
											"show_in_read_only_form": false
										}
									],
									"object_type": "form"
								}
							],
							"route_params": [
								"activityId"
							]
						}
					],
					"related_queries": [
						{
							"name": "issues_list"
						},
						{
							"name": "tests_list"
						}
					]
				},
				{
					"name": "monitoring_detection",
					"type": "page",
					"events_code": "\"click .click-enabled\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar item = this;\t\t\n\t\tvar itemId = item ? item._id : null;\n\t\tRouter.go(\"monitoring_detection.details\", mergeObjects(Router.currentRouteParams(), { controlId: this.chart.id.substring(2) }));\n\t\treturn false;\n},\n  \n\"click .card\": function(e, t) {\n\t\te.preventDefault();\n  \t\tconsole.log(e.currentTarget.id);\n  \t\tvar x=Registrycontrols.findOne( { _id: e.currentTarget.id.substring(3) } );\n\t\tSession.set('ModalInfo',{title: x.title, description: x.control_description, periodicity: x.periodicity, area: x.area, controller: x.controller });\n\t\t$(\"#idMyModal\").modal('show');\n}\n  \n ",
					"components": [
						{
							"name": "charts",
							"type": "custom_component",
							"query_name": "registrycontrols_all",
							"html": "<template name=\"TEMPLATE_NAME\">\n\t<section class=\"wrapper\">\n\t\t<div class=\"container-fostrap\">\n\t\t\t<div class=\"row\">\n\t\t\t\t{{#each x in registrycontrols_all }}\n\t\t\t\t\t{{#let chart=(chartData x) }}\n              \t\t  {{#if equals chart.enabled 'true' }}\n                        <div class=\"col-xs-2 col-sm-2\" >\n                            <div class=\"card\" id={{chart.tag}} >\n                               <div class=\"card-title\">\n                                {{ chart.title }}\n                               </div>\n                               <div class=\"img-card\">\n                                  {{#if chart.YesNo }}\t\t\t\t\t\t\n                                     <div style=\"height: 100px;\" id=chart.id>\n\t\t\t\t\t\t\t\t\t   <i class=\"{{chart.yesNo}}\" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t\t\t\t </div>\n                                  {{ else }}\n                                      {{> c3 data=chart.data id=chart.id }}\n                                   {{/if}}\n                               </div>\n                            </div>\n                            {{> MonitoringDetectionChartscard chart=chart}}\t\t\t\t\t\t\t\t\n                        </div>\n              \t\t  {{/if}}\n\t\t\t\t\t{{/let}}\n\t\t\t\t{{/each}}\n\t\t\t</div>\n\t\t</div>\n\t</section>\n  {{> Modal }}\n</template>\n\n\n<template name=\"MonitoringDetectionChartscard\">\n          <div class=\"card-read-more\">\n          {{#if chart.date}}\n              <a class=\"btn btn-xs btn-link btn-block click-enabled\">\n                  <em>Last update  {{ formatDate (chart.date) 'MM/YYYY' }} </em>\n              </a>\n          {{else}}\n              <a class=\"btn btn-xs btn-link btn-block\" disabled>\n                   <em>No data </em>\n              </a>\n          {{/if}}\n          </div>\n</template>\n\n\n<template name=\"Modal\">\n <div class=\"modal fade\" id=\"idMyModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">{{ModalInfo.title}}</h5>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n\t   </div>\n\t   <div class=\"modal-body\">\n\t\t {{ModalInfo.description}}\n         <br>\n         <br>\t\t\n         <p class=\"font-weight-bold\">Periodicty: {{ModalInfo.periodicity}}</p>\n\t\t <p class=\"font-weight-bold\">Area: {{ModalInfo.area}}</p>\n     \t <p class=\"font-weight-bold\">Controller: {{ModalInfo.controller}}</p>\n\t   </div>\n\t   <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n       </div>\n    </div>\n  </div>\n</div>\n</template>",
							"js": "var clientMonitoringdetectionByid = new Mongo.Collection('clientMonitoringdetectionByid');\nMeteor.subscribe(\"MonitoringdetectionByid\");\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  chartData: function(chart) {\n\t\tvar x=clientMonitoringdetectionByid.findOne( { _id: chart._id } );\n\t\tif (!x) { var x = {}; x.keyIndicator = 'n/a'; x.date = '';}\n        var res = {\n               data: {\n                       json: {\n                               data: [x.keyIndicator]\n                             },\n                        type: chart.charttype\t\t\t\t\t\t\n                     },\n\t\t\t\tlegend: { show: false },\n\t\t\t\tsize: {height : 100}\n          \n\t\t\t\t};\n        \t\n\t\tswitch (x.keyIndicator)  {\n\t\t\tcase \"OK\":\n\t\t\t\tvar YesNo = \"fa fa-check fa-5x text-success\";\n\t\t\t\tbreak;\n\t\t\tcase \"KO\":\n\t\t\t\tvar YesNo = \"fa fa-close fa-5x text-danger\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\n        tag1=\"#\";\n\t\tid1=\"id\";\n\t\tid = id1.concat(chart._id);\n\t\ttag= tag1.concat(id);\n\t\treturn { data: res, YesNo: YesNo, id: id , date: x.date, title: chart.title, control_description: chart.control_description, enabled: chart.enabled, tag: tag };    \n   },\n  \n  equals: function(a, b) {\n\t\treturn a === b;\n\t}\n  \n});\n\n\nTemplate.Modal.helpers({\n  ModalInfo: function() {\n\treturn Session.get('ModalInfo');\n  }\n});\n",
							"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
							"gasoline": {
								"type": "gasoline",
								"templates": [
									{
										"name": "TEMPLATE_NAME",
										"type": "template"
									}
								]
							},
							"object_type": "custom_component"
						}
					],
					"pages": [
						{
							"name": "details",
							"type": "page",
							"components": [
								{
									"name": "detail_view",
									"type": "data_view",
									"title": "{{registrycontrol.title}}",
									"query_name": "md_controllid",
									"page_size": "10",
									"object_type": "data_view"
								}
							],
							"route_params": [
								"controlId"
							]
						}
					]
				},
				{
					"name": "docs",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-pills nav-stacked",
							"items": [
								{
									"title": "Audit Tool",
									"route": "docs.audit_tool"
								},
								{
									"title": "Workflow",
									"route": "docs.audit_execution"
								},
								{
									"title": "Audit Framework",
									"route": "docs.framework"
								},
								{
									"title": "Monitoring controls",
									"route": "docs.controlli_continuativi"
								}
							],
							"object_type": "menu"
						}
					],
					"pages": [
						{
							"name": "audit_tool",
							"type": "page",
							"components": [
								{
									"name": "audit_tool",
									"type": "markdown",
									"source": "### Audit activities\n\nThe AuditTool supports the formalization of the main activities performed by the Internal Audit with specific distinct workflows:\n\n\t* Audit\n\t* Audit of branches\n\t* Information\n\t* Other\n\nThe tool also implements allert related to user profiling.\n\n### Requirements\n\n\nThe high level objectives of the application are:\n\n* Automation of the audit plan (release 1.0.0)\n* Structuring information, today destructured inside in word documents.\n* For branch audits, automate the checks section with the cases to be examined according to the \"Alessandro\" drawings.\n* Classify the audit interventions, according to specific attributes (year, area / process covered, author, ...)\n* Provide the progress of current activities\n* Orderly archiving of audit reports and supporting work cards;\n\nSo the base features are:\n\n* Dashboard SAL activity in progress\n* Printing of the audit report\n* Search tools for audit activities according to certain fields\n* System to track the status of the single most relevant audit activity (started, WIP, completed, reviewed, archived)\n* Approval mechanism of the activities carried out and \"freezing\" of the work papers.\n* Administration area to maintain the application;\n* Web application, user friendly;\n* Integration with other systems (eg Car.sci, Active Directory).\n",
									"object_type": "markdown"
								}
							]
						},
						{
							"name": "audit_execution",
							"type": "page",
							"title": "Workflow attività di audit",
							"components": [
								{
									"name": "audit_execution_menu",
									"type": "menu",
									"class": "nav nav-tabs",
									"items": [
										{
											"title": "Scope",
											"route": "docs.audit_execution.ambito"
										},
										{
											"title": "Tests",
											"route": "docs.audit_execution.verifiche"
										},
										{
											"title": "Issues",
											"route": "docs.audit_execution.carenze"
										},
										{
											"title": "Executive Summary",
											"route": "docs.audit_execution.ex_summary"
										},
										{
											"title": "Evaluetions",
											"route": "docs.audit_execution.valutazioni"
										}
									],
									"object_type": "menu"
								}
							],
							"text": "The various phases of the single \"Audit\" activity are shown below.",
							"pages": [
								{
									"name": "ambito",
									"type": "page",
									"components": [
										{
											"name": "plan",
											"type": "markdown",
											"source": "This section records the preliminary information of the activity, for example:\n    \n     Title\n     Identification number of the activity\n     Auditors\n     Start date\n     ....\n    \n\n\n    \n    \n\n\n\n\n\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "verifiche",
									"type": "page",
									"components": [
										{
											"name": "fieldwork",
											"type": "markdown",
											"source": "This section includes the individual verification activities carried out, defining the relative outcome for each\n\nThe tool provides a library of potential tasks to be performed.",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "carenze",
									"type": "page",
									"components": [
										{
											"name": "issues",
											"type": "markdown",
											"source": "In this section the shortcomings are recorded. The tool also allows:\n\n     attach the documents\n     classify the shortcomings\n     ....",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "ex_summary",
									"type": "page",
									"components": [
										{
											"name": "executive_summary",
											"type": "markdown",
											"source": "In this section the auditor is called to formalize the executive summary with the possibility of attaching any documents.",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "valutazioni",
									"type": "page",
									"components": [
										{
											"name": "scorring",
											"type": "markdown",
											"source": "In this section the synthetic evaluation of the activity carried out is formalized.\n\n",
											"object_type": "markdown"
										}
									]
								}
							]
						},
						{
							"name": "framework",
							"type": "page",
							"title": "Framework",
							"components": [
								{
									"name": "framework_menu",
									"type": "menu",
									"class": "nav nav-tabs",
									"items": [
										{
											"title": "Audit universe",
											"route": "docs.framework.audit_universe"
										},
										{
											"title": "Risk Assessmnet",
											"route": "docs.framework.risk_assessmnet"
										},
										{
											"title": "Audit Plan",
											"route": "docs.framework.audit_plan"
										},
										{
											"title": "Audit execution",
											"route": "docs.framework.esecuzione_audit"
										},
										{
											"title": "Issues management",
											"route": "docs.framework.gestione_carenze"
										}
									],
									"object_type": "menu"
								}
							],
							"text": "Below are the key points of the Audit methodology.",
							"pages": [
								{
									"name": "audit_universe",
									"type": "page",
									"components": [
										{
											"name": "audit_universe_mkdown",
											"type": "markdown",
											"source": "### Audit Universe\n\nThe organizational structure contains all the operational, geographical, legal and product elements subject to audit.\n\nThe perimeter of the audit is the basis from which the risk assessment, the annual audit plan and the audit activities are developed.\n\n** Roles involved: RIA **",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "risk_assessmnet",
									"type": "page",
									"components": [
										{
											"name": "risk_universe_mkdown",
											"type": "markdown",
											"source": "### Risk Universe\n\nThe top-down Risk Assessment activity carried out to assess the inherent risk, the internal control system and the residual risk of all the elements identified in the audit perimeter.\nThe result of the Risk Assessment activity is necessary to define the annual audit plan.\n\n** Roles involved: RIA **",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "audit_plan",
									"type": "page",
									"components": [
										{
											"name": "audit_plan_markdown",
											"type": "markdown",
											"source": "### Audit Plan\n\nThe annual audit plan is prepared on the basis of the results of the Risk Assessment activity, on the coverage of past audits, the activities of continuous controls and the comparison with the other control structures of the Bank\n\nThe planning process is carried out during the fourth quarter and is finalized before the beginning of the following year.\n\nThe audit plan consists of all audits to be carried out for each \"auditable\" entity during the subsequent one. Auditors and managers are assigned with the related responsibilities.\n\n** Roles involved: RIA **",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "esecuzione_audit",
									"type": "page",
									"components": [
										{
											"name": "esecuzione_audit_markdown",
											"type": "markdown",
											"source": "### Audit execution\n\nThe conduct of the audit is divided into four sub-phases:\n\n1. notification of the audit,\n2. Planning,\n3. field work\n4. reporting.\n\n** Roles involved: Auditor **\n",
											"object_type": "markdown"
										}
									]
								},
								{
									"name": "gestione_carenze",
									"type": "page",
									"components": [
										{
											"name": "gestione_carenze_markdown",
											"type": "markdown",
											"source": "### Deficiency Management\n\nDuring the audit work, the shortcomings are identified and discussed with the business. If agreed, the deficiencies are recorded and documented in the work papers. The auditor is responsible for ensuring that open deficiencies are resolved consistently with the approved action plan. The auditor updates the deficiency system with follow-up activities.\n\nAs soon as the business closes the deficiency and provides adequate evidence, the auditor should schedule time to review the documentation and validate that the deficiency has been remedied, through additional testing activities. Once the deficiency is validated the auditor definitively closes the deficiency.\n\n** Roles involved: Auditor **\n",
											"object_type": "markdown"
										}
									]
								}
							]
						},
						{
							"name": "controlli_continuativi",
							"type": "page",
							"components": [
								{
									"name": "controlli_continuativi",
									"type": "markdown",
									"source": "# Moitoring controls\n\nThe continuous monitoring / control activity has the objective of contributing to providing the Internal Audit with an updated view of any problematic situations, even if they are already known and followed by the competent corporate structures.\nIn this context, the Internal Audit assesses any direct interventions attributable to in-depth analysis of individual situations that, where appropriate, may give rise to specific audits (in the context of what has already been planned, anticipating activities, or carrying out unplanned activities).",
									"object_type": "markdown"
								}
							]
						}
					]
				},
				{
					"name": "ict_audit_tool",
					"type": "page",
					"query_name": "profili_all",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-pills nav-stacked",
							"items": [
								{
									"title": "A D Users",
									"route": "ict_audit_tool.ad_users"
								},
								{
									"title": "Queryldap",
									"route": "ict_audit_tool.queryldap"
								}
							],
							"object_type": "menu"
						}
					],
					"pages": [
						{
							"name": "ad_users",
							"type": "page",
							"query_name": "profili_all",
							"html": "<template name=\"TEMPLATE_NAME\">\n\t{{> QUERY_LDAP}}\n</template>\n\n\n<template name=\"QUERY_LDAP\">\n\t<h1>\n\t\t\n\t\t\t\tLista users  Active Directory\n\t\t\t\n\t</h1>\n\t<div>\n\t\t<button class=\"btn btn-default\" id=\"users\">\n\t\t\t\n\t\t\t\t\t\tAggiornamento users\n\t\t\t\t\t\n\t\t</button>\n\t\t{{#if profili_all}}\n\t\t\t<table class=\"table table-striped\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDepartment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWhen Changed\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{{#each profili_all}}\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{user}}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        {{department}}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{whenCreated}}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t{{/each}}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t{{else}}\n\t\t\t<h3>\n\t\t\t\t\n\t\t\t\t\t\t\t\tNessun user :(\n\t\t\t\t\t\t\t\n\t\t\t</h3>\n\t\t{{/if}}\n\t</div>\n</template>\n\n",
							"js": "\n\nTemplate.TEMPLATE_NAME.events({\n\n});\n\nTemplate.TEMPLATE_NAME.helpers({\n\n});\n\nTemplate.QUERY_LDAP.events({\n\t\"click #users\": function(e, t) {\n\t\t\n\t\t\t\tMeteor.call(\"ldapquery\", {}, function(e, r) {\n\t\t\t\t    if(e) console.log(\"errore:\",e); \n\t\t\t\t\tconsole.log(\"query OK\");\n\t\t\t\t});      \n\t\t\t\t            \n\t\t\t\n\t}\n});\n\nTemplate.QUERY_LDAP.helpers({\n\tprofili_all: function() {\n\t\t\n\t\t\t\t//console.log('Numero profili rilevati:',Profili.find().count());\n\t\t\t\treturn Profili.find();\n\t\t\t\n\t}\n});",
							"jsx": "/*IMPORTS*/\n\nexport class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<QUERY_LDAP />\n\t\t);\n\t}\n}\n\nexport const TEMPLATE_NAMEContainer = createContainer(function(props) {\n\t/*SUBSCRIPTIONS*/\n}, TEMPLATE_NAME);\n/*IMPORTS*/\n\nexport class QUERY_LDAP extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\tprofili_all() {\n\t\t\n\t\t\t\t//console.log('Numero profili rilevati:',Profili.find().count());\n\t\t\t\treturn Profili.find();\n\t\t\t\n\t}\n\n\tonClickUsers(e) {\n\t\t\n\t\t\t\tMeteor.call(\"ldapquery\", {}, function(e, r) {\n\t\t\t\t    if(e) console.log(\"errore:\",e); \n\t\t\t\t\tconsole.log(\"query OK\");\n\t\t\t\t});      \n\t\t\t\t            \n\t\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>\n\t\t\t\t\t\n\t\t\t\t\t\t\tLista users  Active Directory\n\t\t\t\t\t\t\n\t\t\t\t</h1>\n\t\t\t\t<div>\n\t\t\t\t\t<button className=\"btn btn-default\" id=\"users\" onClick={this.onClickUsers}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tAggiornamento users\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t</button>\n\t\t\t\t\t{this.profili_all() ? (\n\t\t\t\t\t\t<table className=\"table table-striped\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDepartment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th>\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWhen Changed\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tprofili_all.map(function(item, itemIndex) {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={itemIndex}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.user}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        {item.department}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.whenCreated}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<h3>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tNessun user :(\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t</h3>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport const QUERY_LDAPContainer = createContainer(function(props) {\n\t/*SUBSCRIPTIONS*/\n}, QUERY_LDAP);",
							"gasoline": {
								"type": "gasoline",
								"templates": [
									{
										"name": "TEMPLATE_NAME",
										"children": [
											{
												"type": "inclusion",
												"template": "QUERY_LDAP",
												"object_type": "gas_inclusion"
											}
										],
										"type": "template"
									},
									{
										"name": "QUERY_LDAP",
										"children": [
											{
												"children": [
													{
														"type": "text",
														"text": "\n\t\tLista users  Active Directory\n\t",
														"object_type": "gas_text"
													}
												],
												"type": "html",
												"element": "h1",
												"object_type": "gas_html"
											},
											{
												"children": [
													{
														"children": [
															{
																"type": "text",
																"text": "\n\t\t\tAggiornamento users\n\t\t",
																"object_type": "gas_text"
															}
														],
														"type": "html",
														"element": "button",
														"attributes": [
															{
																"name": "class",
																"value": "btn btn-default"
															},
															{
																"name": "id",
																"value": "users"
															}
														],
														"events": [
															{
																"type": "event",
																"event": "onclick",
																"handler": "onClickUsers"
															}
														],
														"object_type": "gas_html"
													},
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [
																									{
																										"type": "text",
																										"text": "\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tUser\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t",
																										"object_type": "gas_text"
																									}
																								],
																								"type": "html",
																								"element": "th",
																								"object_type": "gas_html"
																							},
																							{
																								"children": [
																									{
																										"type": "text",
																										"text": "\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tDepartment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t",
																										"object_type": "gas_text"
																									}
																								],
																								"type": "html",
																								"element": "th",
																								"object_type": "gas_html"
																							},
																							{
																								"children": [
																									{
																										"type": "text",
																										"text": "\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tWhen Changed\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t",
																										"object_type": "gas_text"
																									}
																								],
																								"type": "html",
																								"element": "th",
																								"object_type": "gas_html"
																							}
																						],
																						"type": "html",
																						"element": "tr",
																						"object_type": "gas_html"
																					}
																				],
																				"type": "html",
																				"element": "thead",
																				"object_type": "gas_html"
																			},
																			{
																				"children": [
																					{
																						"children": [
																							{
																								"children": [
																									{
																										"children": [
																											{
																												"type": "text",
																												"text": "\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{user}}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t",
																												"object_type": "gas_text"
																											}
																										],
																										"type": "html",
																										"element": "td",
																										"object_type": "gas_html"
																									},
																									{
																										"children": [
																											{
																												"type": "text",
																												"text": "\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                        {{department}}\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t",
																												"object_type": "gas_text"
																											}
																										],
																										"type": "html",
																										"element": "td",
																										"object_type": "gas_html"
																									},
																									{
																										"children": [
																											{
																												"type": "text",
																												"text": "\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{{whenCreated}}\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t",
																												"object_type": "gas_text"
																											}
																										],
																										"type": "html",
																										"element": "td",
																										"object_type": "gas_html"
																									}
																								],
																								"type": "html",
																								"element": "tr",
																								"object_type": "gas_html"
																							}
																						],
																						"type": "loop",
																						"dataset": "profili_all",
																						"object_type": "gas_loop"
																					}
																				],
																				"type": "html",
																				"element": "tbody",
																				"object_type": "gas_html"
																			}
																		],
																		"type": "html",
																		"element": "table",
																		"attributes": [
																			{
																				"name": "class",
																				"value": "table table-striped"
																			}
																		],
																		"object_type": "gas_html"
																	}
																],
																"type": "condition-true",
																"object_type": "gas_condition_true"
															},
															{
																"children": [
																	{
																		"children": [
																			{
																				"type": "text",
																				"text": "\n\t\t\t\tNessun user :(\n\t\t\t",
																				"object_type": "gas_text"
																			}
																		],
																		"type": "html",
																		"element": "h3",
																		"object_type": "gas_html"
																	}
																],
																"type": "condition-false",
																"object_type": "gas_condition_false"
															}
														],
														"type": "condition",
														"condition": "profili_all",
														"object_type": "gas_condition"
													}
												],
												"type": "html",
												"object_type": "gas_html"
											}
										],
										"type": "template",
										"handlers": [
											{
												"name": "onClickUsers",
												"type": "handler",
												"code": "\n\t\tMeteor.call(\"ldapquery\", {}, function(e, r) {\n\t\t    if(e) console.log(\"errore:\",e); \n\t\t\tconsole.log(\"query OK\");\n\t\t});      \n\t\t            \n\t"
											}
										],
										"helpers": [
											{
												"name": "profili_all",
												"type": "helper",
												"code": "\n\t\t//console.log('Numero profili rilevati:',Profili.find().count());\n\t\treturn Profili.find();\n\t"
											}
										]
									}
								]
							},
							"use_gasoline": true,
							"user_defined_template": true
						},
						{
							"name": "queryldap",
							"type": "page",
							"components": [
								{
									"name": "queryldap",
									"type": "custom_component",
									"html": "<template name=\"TEMPLATE_NAME\">\n   \n  <button class=\"btn btn-default\" id=\"users\">Ldap query</button>\n     \n  <table class=\"table table-striped\">\n    \n   {{#each genericldapquery}}\n    \t\t\n  \t <tr>      \n       <td class=\"col-md-2\">{{@index}}</td>\n       <td class=\"col-md-2\">{{dn}}</td>\n       <td class=\"col-md-2\">{{description}}</td>\n       <td class=\"col-md-2\">{{whenCreated}}</td>       \n     </tr>\n  \t\t\n  {{/each}}\n  \t  \n  </table>  \n    \n</template>\n\n\n\n",
									"js": "Template.TEMPLATE_NAME.events({\n     'click #users': function () {       \n\n          var query = '(&(objectClass=person)(objectClass=user))';\n          //var query = '(&(objectCategory=user)(memberOf=CN=Domain Admins,CN=Users,DC=intranet,DC=ifis,DC=local))';\n       \n          Meteor.call(\"genericldapquery\", query, function(e, r) {\n\t\t\tif(e) console.log(\"errore:\",e); \n\t\t\tconsole.log(\"Called ldap query\",r);\n          });\n    } \n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n      genericldapquery: function () {\n          var k = Ldap.find({ domain_users: { $ne: null }},{ sort: { domain_users: 1 }, limit: 1}).fetch()[0].domain_users;\n \n          return _.flatten(k);            \n      } \n});\n        \n        \n        ",
									"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n}",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"type": "template"
											}
										]
									},
									"object_type": "custom_component"
								}
							]
						}
					]
				}
			]
		},
		"private_zone": {
			"type": "zone",
			"components": [
				{
					"name": "left_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav",
					"items": [
						{
							"title": "Home",
							"route": "home_private",
							"icon_class": "fa fa-home"
						},
						{
							"title": "Monitoring detection",
							"route": "monitoringdetection",
							"icon_class": "fa fa-desktop"
						}
					],
					"object_type": "menu"
				},
				{
					"name": "right_menu",
					"type": "menu",
					"dest_selector": "#menu",
					"class": "nav navbar-nav navbar-right",
					"items": [
						{
							"title": "Admin",
							"route": "admin",
							"icon_class": "fa fa-wrench"
						},
						{
							"title": "{{userEmail}}",
							"icon_class": "fa fa-cog",
							"items": [
								{
									"title": "Settings",
									"route": "user_settings"
								},
								{
									"title": "Logout",
									"route": "logout"
								}
							]
						}
					],
					"object_type": "menu"
				}
			],
			"pages": [
				{
					"name": "home_private",
					"type": "page",
					"title": "Welcome {{userFullName}}!",
					"query_name": "activity_all",
					"components": [
						{
							"name": "audit_view",
							"type": "data_view",
							"title": "Activity list",
							"helpers_code": "\n",
							"query_name": "activities_list",
							"query_params": [
								{
									"name": "name",
									"value": "Meteor.user().profile.name"
								}
							],
							"delete_confirmation_message": "Delete the Audit ? Are you sure ?",
							"page_size": "10",
							"insert_route": "audits.insert_page",
							"details_route": "audits.workflow",
							"edit_route": "audits.workflow",
							"details_route_params": [
								{
									"name": "activityId",
									"value": "this._id"
								}
							],
							"edit_route_params": [
								{
									"name": "activityId",
									"value": "this._id"
								}
							],
							"insert_button_title": "Create a new Audit",
							"update_button_title": "update",
							"fields": [
								{
									"name": "titolo",
									"title": "Title",
									"type": "string",
									"required": true,
									"exportable": true
								},
								{
									"name": "numero",
									"title": "Number",
									"type": "string",
									"default": "{{nextAuditNumber}}",
									"exportable": true,
									"show_in_update_form": false
								},
								{
									"name": "auditors",
									"title": "List Auditor",
									"type": "string",
									"default": "{{userMeteor}}",
									"exportable": true
								},
								{
									"name": "data",
									"title": "Start Audit date",
									"type": "date",
									"default": "today",
									"format": "DD/MM/YYYY",
									"exportable": true,
									"input": "datepicker"
								},
								{
									"name": "branch",
									"title": "Branch",
									"type": "string",
									"exportable": true
								},
								{
									"name": "company",
									"title": "Company",
									"type": "array"
								},
								{
									"name": "status",
									"title": "Status",
									"type": "string",
									"exportable": true,
									"input": "select",
									"array_item_type": "object",
									"show_in_insert_form": false,
									"show_in_update_form": false
								}
							],
							"object_type": "data_view"
						}
					],
					"text": "This is your personal page. From here you can start new audit, and so on...\n",
					"render_subpages": "never",
					"controller_before_action": "UserName = Users.findOne({_id: Meteor.userId() }).profile.name;\nSession.set('UserName', UserName);\n// console.log('Current UserName: ', Session.get('UserName'));\nthis.next();"
				},
				{
					"name": "admin",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-stacked nav-pills",
							"items": [
								{
									"title": "Users",
									"route": "admin.users"
								},
								{
									"title": "Config",
									"route": "admin.config"
								},
								{
									"title": "Monitoring Controls",
									"route": "admin.monitoring_controls"
								}
							],
							"object_type": "menu"
						}
					],
					"roles": [
						"admin"
					],
					"pages": [
						{
							"name": "users",
							"type": "page",
							"components": [
								{
									"name": "view",
									"type": "data_view",
									"title": "Users",
									"query_name": "admin_users",
									"text_if_empty": "No users yet",
									"insert_route": "admin.users.insert",
									"details_route": "admin.users.details",
									"edit_route": "admin.users.edit",
									"details_route_params": [
										{
											"name": "userId",
											"value": "this._id"
										}
									],
									"edit_route_params": [
										{
											"name": "userId",
											"value": "this._id"
										}
									],
									"fields": [
										{
											"name": "profile.name",
											"title": "Name",
											"type": "string"
										},
										{
											"name": "profile.email",
											"title": "E-mail",
											"type": "string"
										},
										{
											"name": "roles",
											"title": "Role",
											"type": "string"
										}
									],
									"object_type": "data_view"
								}
							],
							"roles": [
								"admin"
							],
							"pages": [
								{
									"name": "details",
									"type": "page",
									"components": [
										{
											"name": "details_form",
											"type": "form",
											"title": "User details",
											"query_name": "admin_user",
											"mode": "read_only",
											"close_route": "admin.users",
											"back_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string"
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email"
												},
												{
													"name": "roles",
													"title": "Role",
													"type": "string"
												}
											],
											"object_type": "form"
										}
									],
									"route_params": [
										"userId"
									]
								},
								{
									"name": "insert",
									"type": "page",
									"components": [
										{
											"name": "insert_form",
											"type": "form",
											"title": "Add new user",
											"query_name": "users_null",
											"mode": "insert",
											"submit_route": "admin.users",
											"cancel_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string",
													"required": true
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email",
													"required": true
												},
												{
													"name": "password",
													"title": "Password",
													"type": "string",
													"required": true,
													"input": "password"
												}
											],
											"object_type": "form"
										}
									]
								},
								{
									"name": "edit",
									"type": "page",
									"components": [
										{
											"name": "edit_form",
											"type": "form",
											"title": "Edit user",
											"query_name": "admin_user",
											"mode": "update",
											"submit_route": "admin.users",
											"cancel_route": "admin.users",
											"fields": [
												{
													"name": "profile.name",
													"title": "Name",
													"type": "string",
													"required": true
												},
												{
													"name": "profile.email",
													"title": "E-mail",
													"type": "email",
													"required": true
												},
												{
													"name": "roles",
													"title": "Role",
													"type": "array",
													"input": "radio",
													"input_items": [
														{
															"value": "user",
															"title": "User"
														},
														{
															"value": "auditor",
															"title": "Auditor"
														},
														{
															"value": "admin",
															"title": "Admin"
														},
														{
															"value": "blocked",
															"title": "Blocked"
														}
													]
												}
											],
											"object_type": "form"
										}
									],
									"route_params": [
										"userId"
									]
								}
							]
						},
						{
							"name": "config",
							"type": "page",
							"components": [
								{
									"name": "link",
									"type": "div",
									"components": [
										{
											"name": "link_markdown",
											"type": "markdown",
											"source": "\n### Modifica l'editor avanzato (CKEDITOR)\n\nhttp://localhost:5000/samples/index.html\n\n### Modifica Template PDF(JSrepot)\n\nhttp://localhost:5488/",
											"object_type": "markdown"
										}
									],
									"object_type": "div"
								}
							],
							"html": "Modifica l'editor avanzato (CKEDITOR)\n\nhttp://localhost:5000/samples/index.html\n\nModifica Template PDF(JSrepot)\n\nhttp://localhost:5488/",
							"text": "Qui l'amministratore può:\n\n- modificare attività le già archiviate\n\n- modificare le librerie\n\n- ...\n",
							"roles": [
								"admin"
							],
							"pages": [
								{
									"name": "page",
									"type": "page",
									"html": "<template name=\"TEMPLATE_NAME\">\n\t<div class=\"page-container\" id=\"content\">\n\t\t<button class=\"btn btn-default\">\n\t\t\tTemplate report Pdf\n\t\t</button>\n\t\t<div>\n\t\t\t<button class=\"btn btn-default\">\n\t\t\t\tConfigura Editor\n\t\t\t</button>\n\t\t</div>\n\t</div>\n</template>\n\n",
									"js": "\n\nTemplate.TEMPLATE_NAME.events({\n\t\"click .btn.btn-default, click #content\": function(e, t) {\n\t\tvar ipserver= onClickButton1;\n\t\tconsole.log ('oo', Meteor.call('server-ip'));\n\t},\n\n\t\"click div\": function(e, t) {\n\t\t\n\t}\n});\n\nTemplate.TEMPLATE_NAME.helpers({\n\n});",
									"jsx": "/*IMPORTS*/\n\nexport class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\ttemplatePdf(e) {\n\t\tvar ipserver= onClickButton1;\n\t\tconsole.log ('oo', Meteor.call('server-ip'));\n\t}\n\n\tckeditor(e) {\n\t\t\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"page-container\" id=\"content\" onClick={this.templatePdf}>\n\t\t\t\t<button className=\"btn btn-default\" onClick={this.templatePdf}>\n\t\t\t\t\tTemplate report Pdf\n\t\t\t\t</button>\n\t\t\t\t<div onClick={this.ckeditor}>\n\t\t\t\t\t<button className=\"btn btn-default\">\n\t\t\t\t\t\tConfigura Editor\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport const TEMPLATE_NAMEContainer = createContainer(function(props) {\n\t/*SUBSCRIPTIONS*/\n}, TEMPLATE_NAME);",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"type": "text",
																		"text": "Template report Pdf",
																		"object_type": "gas_text"
																	}
																],
																"type": "html",
																"element": "button",
																"attributes": [
																	{
																		"name": "class",
																		"value": "btn btn-default"
																	}
																],
																"events": [
																	{
																		"type": "event",
																		"event": "onclick",
																		"handler": "templatePdf"
																	}
																],
																"object_type": "gas_html"
															},
															{
																"children": [
																	{
																		"children": [
																			{
																				"type": "text",
																				"text": "Configura Editor",
																				"object_type": "gas_text"
																			}
																		],
																		"type": "html",
																		"element": "button",
																		"attributes": [
																			{
																				"name": "class",
																				"value": "btn btn-default"
																			}
																		],
																		"object_type": "gas_html"
																	}
																],
																"type": "html",
																"events": [
																	{
																		"type": "event",
																		"event": "onclick",
																		"handler": "ckeditor"
																	}
																],
																"object_type": "gas_html"
															}
														],
														"type": "html",
														"attributes": [
															{
																"name": "class",
																"value": "page-container"
															},
															{
																"name": "id",
																"value": "content"
															}
														],
														"events": [
															{
																"type": "event",
																"event": "onclick",
																"handler": "templatePdf"
															}
														],
														"object_type": "gas_html"
													}
												],
												"type": "template",
												"handlers": [
													{
														"name": "templatePdf",
														"type": "handler",
														"code": "var ipserver= onClickButton1;\nconsole.log ('oo', Meteor.call('server-ip'));"
													},
													{
														"name": "ckeditor",
														"type": "handler"
													}
												]
											}
										]
									},
									"use_gasoline": true,
									"user_defined_template": true,
									"roles": [
										"admin",
										"auditor"
									]
								}
							]
						},
						{
							"name": "monitoring_controls",
							"type": "page",
							"components": [
								{
									"name": "view",
									"type": "data_view",
									"title": "Monitoring controls",
									"query_name": "registrycontrols_all",
									"delete_confirmation_message": "Delete the control ? Are you sure?",
									"page_size": "10",
									"insert_route": "admin.monitoring_controls.update",
									"details_route": "admin.monitoring_controls.update",
									"edit_route": "admin.monitoring_controls.update",
									"insert_route_params": [
										{
											"name": "monitoringcontrolId",
											"value": "Random.id([6])"
										}
									],
									"details_route_params": [
										{
											"name": "monitoringcontrolId",
											"value": "this._id"
										}
									],
									"edit_route_params": [
										{
											"name": "monitoringcontrolId",
											"value": "this._id"
										}
									],
									"insert_button_title": "Create a new control",
									"update_button_title": "update",
									"fields": [
										{
											"name": "area",
											"title": "Area",
											"type": "string"
										},
										{
											"name": "title",
											"title": "Control title",
											"type": "string"
										},
										{
											"name": "control_description",
											"title": "Control description",
											"type": "string",
											"input": "textarea"
										},
										{
											"name": "periodicity",
											"title": "Periodicity",
											"type": "string",
											"input": "radio",
											"input_items": [
												{
													"value": "monthly",
													"title": "monthly"
												},
												{
													"value": "quarterly",
													"title": "quarterly"
												},
												{
													"value": "semiannual",
													"title": "semiannual"
												},
												{
													"value": "yearly",
													"title": "yearly"
												}
											]
										},
										{
											"name": "controller",
											"title": "Control owner",
											"type": "string",
											"input": "select",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "q_users",
											"lookup_key": "profile.name",
											"lookup_field": "profile.name"
										},
										{
											"name": "charttype",
											"title": "Chart type",
											"type": "string",
											"input": "radio",
											"input_items": [
												{
													"value": "line",
													"title": "line"
												},
												{
													"value": "spline",
													"title": "spline"
												},
												{
													"value": "step",
													"title": "step"
												},
												{
													"value": "area",
													"title": "area"
												},
												{
													"value": "area-spline",
													"title": "area-spline"
												},
												{
													"value": "bar",
													"title": "bar"
												},
												{
													"value": "scatter",
													"title": "scatter"
												},
												{
													"value": "pie",
													"title": "pie"
												},
												{
													"value": "donut",
													"title": "donut"
												},
												{
													"value": "gauge",
													"title": "gauge"
												}
											]
										},
										{
											"name": "enabled",
											"title": "Enabled",
											"type": "string",
											"input": "radio"
										}
									],
									"object_type": "data_view"
								}
							],
							"roles": [
								"admin"
							],
							"pages": [
								{
									"name": "update",
									"type": "page",
									"components": [
										{
											"name": "form",
											"type": "form",
											"class": "row",
											"title": "Edit Monitoring controls",
											"query_name": "registrycontrol",
											"mode": "update",
											"submit_route": "admin.monitoring_controls",
											"cancel_route": "admin.monitoring_controls",
											"submit_code": "\nif (Session.get('monitoringcontrolId').length === 6) {    \n\tMeteor.call(\"registrycontrolsInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else \n         Meteor.call(\"registrycontrolsUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
											"submit_button_title": "Save",
											"object_type": "form"
										}
									],
									"route_params": [
										"monitoringcontrolId"
									],
									"roles": [
										"admin"
									],
									"controller_after_action": "Session.set('monitoringcontrolId',this.params.monitoringcontrolId);"
								}
							]
						}
					]
				},
				{
					"name": "user_settings",
					"type": "page",
					"components": [
						{
							"name": "side_menu",
							"type": "menu",
							"class": "nav nav-stacked nav-pills",
							"items": [
								{
									"title": "Profile",
									"route": "user_settings.profile"
								},
								{
									"title": "Change password",
									"route": "user_settings.change_pass"
								}
							],
							"object_type": "menu"
						}
					],
					"roles": [
						"user",
						"admin"
					],
					"pages": [
						{
							"name": "profile",
							"type": "page",
							"components": [
								{
									"name": "edit_form",
									"type": "form",
									"title": "Edit your profile",
									"query_name": "current_user_data",
									"mode": "update",
									"submit_route": "user_settings.profile",
									"fields": [
										{
											"name": "profile.name",
											"title": "Name",
											"type": "string",
											"required": true
										},
										{
											"name": "profile.email",
											"title": "E-mail",
											"type": "email",
											"required": true
										},
										{
											"name": "profile.facebook",
											"title": "Facebook URL",
											"type": "string"
										},
										{
											"name": "profile.google",
											"title": "Google+ URL",
											"type": "string"
										},
										{
											"name": "profile.twitter",
											"title": "Twitter ID",
											"type": "string"
										},
										{
											"name": "profile.website",
											"title": "Website URL",
											"type": "string"
										}
									],
									"object_type": "form"
								}
							]
						},
						{
							"name": "change_pass",
							"type": "page",
							"template": "change_pass"
						}
					]
				},
				{
					"name": "logout",
					"type": "page",
					"template": "logout"
				},
				{
					"name": "audits",
					"type": "page",
					"template_rendered_code": "//console.log('audits==>', Session.get( \"activityId\")); \n",
					"html": "<template name=\"TEMPLATE_NAME\">\n\n <ul class=\"list-group\">\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-hourglass-start fa-fw\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-cogs fa-fw\" aria-hidden=\"true\"></i></a></li> \n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-diamond fa-3x\" style=\"color:blue;\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-check fa-fw\" aria-hidden=\"true\"></i></a></li>\n  <li class=\"list-group-item\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-lock fa-fw\" aria-hidden=\"true\"></i></a></li>  \n</ul>\n  \n</template>\n\n",
					"container_class": "container-fluid",
					"pages": [
						{
							"name": "workflow",
							"type": "page",
							"title": "{{title}}",
							"helpers_code": "// Title\n\n'title': function() {\n    if(Session.get('activity').titolo && Session.get('activity').numero)\n\t    { return (Session.get('activity').numero + ' - ' + Session.get('activity').titolo ); }\n                     \n    if(Session.get('activity').titolo && !Session.get('activity').numero)\n        {return Session.get('activity').titolo; }\n                                                   \n\tif(!Session.get('activity').titolo && !Session.get('activity').numero)\n        {return (\"...\"); }\n}\n",
							"query_name": "activity",
							"components": [
								{
									"name": "side_menu",
									"type": "menu",
									"class": "nav nav-stacked nav-pills",
									"query_name": "activity",
									"items": [
										{
											"title": "Scope",
											"route": "audits.workflow.scope",
											"route_params": [
												{
													"name": "activityId",
													"value": "this.params.activityId"
												}
											]
										},
										{
											"title": "Tests",
											"route": "audits.workflow.tests2",
											"route_params": [
												{
													"name": "activityId",
													"value": "this.params.activityId"
												}
											]
										},
										{
											"title": "Issues",
											"route": "audits.workflow.issues",
											"route_params": [
												{
													"name": "activityId",
													"value": "this.params.activityId"
												}
											]
										},
										{
											"title": "Ex. summary",
											"route": "audits.workflow.exsummary",
											"route_params": [
												{
													"name": "activityId",
													"value": "this.params.activityId"
												}
											]
										},
										{
											"title": "Evaluetions",
											"route": "audits.workflow.evaluetions",
											"route_params": [
												{
													"name": "activityId",
													"value": "this.params.activityId"
												}
											]
										}
									],
									"object_type": "menu"
								},
								{
									"name": "status",
									"type": "custom_component",
									"dest_position": "bottom",
									"query_name": "activity",
									"html": "<template name=\"TEMPLATE_NAME\">\n  <div class=\"col-sm-10 col-md-10\"></div>\n        <div class=\"col-sm-2 col-md-2\">\n\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Start\">\n                        <i class=\"fa fa-hourglass-start {{start activity.status }}\" aria-hidden=\"true\"></i>\n                </div>\n\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Working in progress\">\n                        <i class=\"fa fa-cogs {{wip activity.status activity.nextreadystatus }}\" aria-hidden=\"true\">\n                        </i>\n                </div>\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Close\">\n                        <i class=\"fa fa-diamond {{close activity.status activity.nextreadystatus }}\" aria-hidden=\"true\">\n                        </i>\n                </div>\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Approve\">\n                        <i class=\"fa fa-check {{approve activity.status activity.nextreadystatus}}\" aria-hidden=\"true\">\n                        </i>\n                </div>\n                <div class=\"col-sm-2 col-md-2 status_box\" title=\"Status: Archive\">\n                        <i class=\"fa fa-lock {{archive activity.status}}\" aria-hidden=\"true\">\n                        </i>\n                </div>\n        </div>\n</template>\n\n",
									"js": "Template.TEMPLATE_NAME.onRendered(function() {  \n   // Session.set('activity', Activities.findOne({'_id': this.params.activityId}) );\n});\n\n\n\nTemplate.TEMPLATE_NAME.events({  \n  \"click .status_box\": function(event) {\n    event.preventDefault();\n    \n    //console.log($(event.target).attr(\"class\"));\n    \n    var x = $(event.target).attr(\"class\");\n    if (x == \"fa fa-diamond suggested\") {\n        bootbox.dialog({\n                message: \"Do you whant CLOSE the audit? Are you sure?\",\n                title: \"Closed\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;\n                                values.status = \"Close\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity')._id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }        \n\tif (x == \"fa fa-check suggested\") {\n           bootbox.dialog({\n                message: \"Do you whant APPROVE the audit? Are you sure?\",\n                title: \"Approved\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Approve\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity')._id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }\n    if (x == \"fa fa-lock suggested\") {\n           bootbox.dialog({\n                message: \"Do you whant definitivaly archive tha audit? Are you sure?\",\n                title: \"Archived\",\n                animate: false,\n                buttons: {\n                    success: {\n                        label: \"Yes\",\n                        className: \"btn-success\",\n                        callback: function() {              \n                                var values = {} ;      \n                                values.status = \"Archive\";\n                                Meteor.call(\"activitiesUpdate\", Session.get('activity').id ,values, function(err) { if(err) {alert(err.message); } });                     \n                        }\n                },\n                    danger: {\n                        label: \"No\",\n                        className: \"btn-default\"\n                    }\n                }\n        });   \n    }    \n    \n  }\n});\n\n\nTemplate.TEMPLATE_NAME.helpers({\n  \n \"start\": function(status) {return  ( status == \"Start\") ? \"selected\" : \"not-selected\"; },\n \"wip\":   function(status) {return (status == \"Working in progress\") ? \"selected\" : \"not-selected\"; },\n \"close\": function(status, nextreadystatus) {\n                var val;\n                if(status == \"Close\") { val = \"selected\"; } else { val = \"not-selected\"; }\n                if (nextreadystatus && status == \"Working in progress\") { val = \"suggested\"; }\n                return val;\n },\n \"approve\": function(status, nextreadystatus) {\n            var val;\n            if(status == \"Approve\") { val = \"selected\";} else { val = \"not-selected\"; }\n            if (nextreadystatus && status == \"Close\" && Users.isAdmin(Meteor.userId())) { val = \"suggested\"; }\n            return val;\n },\n\n\"archive\": function(status) {\n            var val;\n            if (status == \"Archive\") { val = \"selected\";} else { val = \"not-selected\"; }\n            if (status == \"Approve\") { val = \"suggested\"; }\n            return val;\n   \n   \n     \n }} );\n\n",
									"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});",
									"gasoline": {
										"type": "gasoline",
										"templates": [
											{
												"name": "TEMPLATE_NAME",
												"type": "template"
											}
										]
									},
									"object_type": "custom_component"
								}
							],
							"html": "<template name=\"TEMPLATE_NAME\">\n\t<div class=\"page-container\" id=\"content\">\n\t\t<div class=\"row col-md-10\" id=\"title_row\">\n\t\t\t<div class=\"col-md-12\">\n\t\t\t\t<h2 id=\"page_title\" class=\"pull-left\">\n\t\t\t\t\t<a href=\"#\" id=\"page-back-button\" class=\"btn btn-default\" title=\"back\">\n\t\t\t\t\t\t<span class=\"fa fa-chevron-left\">\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<span id=\"page-title-icon\" class=\"PAGE_TITLE_ICON_CLASS\">\n\t\t\t\t\t</span>\n\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tPAGE_TITLE\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t</h2>\n\t\t\t\t<div id=\"page_menu\" class=\"pull-right\">\n\t\t\t\t\t<a href=\"#\" id=\"page-close-button\" class=\"btn btn-default pull-right\" title=\"Close\">\n\t\t\t\t\t\t<span class=\"fa fa-times\">\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<p id=\"page_text\">\n\t\t\t\n\t\t\t\t\t\tPAGE_TEXT\n\t\t\t\t\t\n\t\t</p>\n\t</div>\n\t<div id=\"background-image\" style=\"background-image: url(BACKGROUND_IMAGE);\">\n\t</div>\n</template>\n\n",
							"js": "\n\nTemplate.TEMPLATE_NAME.events({\n\n});\n\nTemplate.TEMPLATE_NAME.helpers({\n\n});",
							"jsx": "/*IMPORTS*/\n\nexport class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"page-container\" id=\"content\">\n\t\t\t\t\t<div className=\"row col-md-10\" id=\"title_row\">\n\t\t\t\t\t\t<div className=\"col-md-12\">\n\t\t\t\t\t\t\t<h2 id=\"page_title\" className=\"pull-left\">\n\t\t\t\t\t\t\t\t<a href=\"#\" id=\"page-back-button\" className=\"btn btn-default\" title=\"back\">\n\t\t\t\t\t\t\t\t\t<span className=\"fa fa-chevron-left\">\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<span id=\"page-title-icon\" className=\"PAGE_TITLE_ICON_CLASS\">\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tPAGE_TITLE\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t<div id=\"page_menu\" className=\"pull-right\">\n\t\t\t\t\t\t\t\t<a href=\"#\" id=\"page-close-button\" className=\"btn btn-default pull-right\" title=\"Close\">\n\t\t\t\t\t\t\t\t\t<span className=\"fa fa-times\">\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p id=\"page_text\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tPAGE_TEXT\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"background-image\" style=\"background-image: url(BACKGROUND_IMAGE);\">\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport const TEMPLATE_NAMEContainer = createContainer(function(props) {\n\t/*SUBSCRIPTIONS*/\n}, TEMPLATE_NAME);",
							"gasoline": {
								"type": "gasoline",
								"templates": [
									{
										"name": "TEMPLATE_NAME",
										"children": [
											{
												"children": [
													{
														"children": [
															{
																"children": [
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"type": "html",
																						"element": "span",
																						"attributes": [
																							{
																								"name": "class",
																								"value": "fa fa-chevron-left"
																							}
																						],
																						"object_type": "gas_html"
																					}
																				],
																				"type": "html",
																				"element": "a",
																				"attributes": [
																					{
																						"name": "href",
																						"value": "#"
																					},
																					{
																						"name": "id",
																						"value": "page-back-button"
																					},
																					{
																						"name": "class",
																						"value": "btn btn-default"
																					},
																					{
																						"name": "title",
																						"value": "back"
																					}
																				],
																				"object_type": "gas_html"
																			},
																			{
																				"type": "html",
																				"element": "span",
																				"attributes": [
																					{
																						"name": "id",
																						"value": "page-title-icon"
																					},
																					{
																						"name": "class",
																						"value": "PAGE_TITLE_ICON_CLASS"
																					}
																				],
																				"object_type": "gas_html"
																			},
																			{
																				"type": "text",
																				"text": "\n\t\t\t\t\tPAGE_TITLE\n\t\t\t\t",
																				"object_type": "gas_text"
																			}
																		],
																		"type": "html",
																		"element": "h2",
																		"attributes": [
																			{
																				"name": "id",
																				"value": "page_title"
																			},
																			{
																				"name": "class",
																				"value": "pull-left"
																			}
																		],
																		"object_type": "gas_html"
																	},
																	{
																		"children": [
																			{
																				"children": [
																					{
																						"type": "html",
																						"element": "span",
																						"attributes": [
																							{
																								"name": "class",
																								"value": "fa fa-times"
																							}
																						],
																						"object_type": "gas_html"
																					}
																				],
																				"type": "html",
																				"element": "a",
																				"attributes": [
																					{
																						"name": "href",
																						"value": "#"
																					},
																					{
																						"name": "id",
																						"value": "page-close-button"
																					},
																					{
																						"name": "class",
																						"value": "btn btn-default pull-right"
																					},
																					{
																						"name": "title",
																						"value": "Close"
																					}
																				],
																				"object_type": "gas_html"
																			}
																		],
																		"type": "html",
																		"attributes": [
																			{
																				"name": "id",
																				"value": "page_menu"
																			},
																			{
																				"name": "class",
																				"value": "pull-right"
																			}
																		],
																		"object_type": "gas_html"
																	}
																],
																"type": "html",
																"attributes": [
																	{
																		"name": "class",
																		"value": "col-md-12"
																	}
																],
																"object_type": "gas_html"
															}
														],
														"type": "html",
														"attributes": [
															{
																"name": "class",
																"value": "row col-md-10"
															},
															{
																"name": "id",
																"value": "title_row"
															}
														],
														"object_type": "gas_html"
													},
													{
														"children": [
															{
																"type": "text",
																"text": "\n\t\t\tPAGE_TEXT\n\t\t",
																"object_type": "gas_text"
															}
														],
														"type": "html",
														"element": "p",
														"attributes": [
															{
																"name": "id",
																"value": "page_text"
															}
														],
														"object_type": "gas_html"
													}
												],
												"type": "html",
												"attributes": [
													{
														"name": "class",
														"value": "page-container"
													},
													{
														"name": "id",
														"value": "content"
													}
												],
												"object_type": "gas_html"
											},
											{
												"type": "html",
												"attributes": [
													{
														"name": "id",
														"value": "background-image"
													},
													{
														"name": "style",
														"value": "background-image: url(BACKGROUND_IMAGE);"
													}
												],
												"object_type": "gas_html"
											}
										],
										"type": "template"
									}
								]
							},
							"container_class": "container-fluid",
							"route_params": [
								"activityId"
							],
							"pages": [
								{
									"name": "scope",
									"type": "page",
									"title": "Scope",
									"title_icon_class": "fa fa-university",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId');"
										}
									],
									"components": [
										{
											"name": "scope",
											"type": "form",
											"class": "row",
											"query_name": "activity",
											"query_params": [
												{
													"name": "activityId",
													"value": "Session.get('activity')._id"
												}
											],
											"custom_data_code": "\n",
											"mode": "update",
											"submit_route": "audits.workflow",
											"submit_button_title": "Salva",
											"submit_route_params": [
												{
													"name": "activityId",
													"value": "Session.get('activityId')"
												}
											],
											"fields": [
												{
													"name": "status",
													"title": "Status",
													"type": "string",
													"exportable": true,
													"input": "select",
													"input_items": [
														{
															"value": "Avviato",
															"title": "Avviato"
														},
														{
															"value": "In corso",
															"title": "In corso"
														},
														{
															"value": "Completato",
															"title": "Completato"
														},
														{
															"value": "Archiviato",
															"title": "Archiviato"
														}
													],
													"array_item_type": "object",
													"show_in_insert_form": false,
													"show_in_update_form": false
												},
												{
													"name": "tipo",
													"title": "Activity type",
													"type": "string",
													"required": true,
													"exportable": true,
													"input": "radio",
													"input_items": [
														{
															"value": "Audit Filiale",
															"title": "Audit Filiale"
														},
														{
															"value": "Audit",
															"title": "Audit"
														},
														{
															"value": "Informativa",
															"title": "Informativa"
														},
														{
															"value": "Altre attività",
															"title": "Altre attività"
														}
													],
													"array_item_type": "object",
													"show_in_update_form": false
												},
												{
													"name": "titolo",
													"title": "Title",
													"type": "string",
													"required": true,
													"exportable": true
												},
												{
													"name": "obiettivo",
													"title": "Activity objective",
													"type": "string",
													"exportable": true,
													"input": "textarea",
													"show_in_insert_form": false
												},
												{
													"name": "company",
													"title": "Companies",
													"type": "array",
													"required": true,
													"input": "checkbox",
													"input_group_class": "col-sm-4 col-md-4 thumbnail",
													"input_control_class": "rounded",
													"input_items": [
														{
															"value": "Alfa Company",
															"title": "Alfa Company"
														},
														{
															"value": "Beta Company",
															"title": "Beta Company"
														},
														{
															"value": "Gamma Company",
															"title": "Gamma Company"
														},
														{
															"value": "Delta Company",
															"title": "Delta Company"
														},
														{
															"value": "Omega Company",
															"title": "Omega Company"
														}
													]
												},
												{
													"name": "riskArea",
													"title": "Risk area (ICAAP)",
													"type": "array",
													"exportable": true,
													"input": "select-multiple",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "risks_all",
													"lookup_key": "ICAAP",
													"lookup_field": "ICAAP",
													"show_in_insert_form": false,
													"show_in_update_form": false
												},
												{
													"name": "rischiEsaminati",
													"title": "Examinated risks",
													"type": "array",
													"exportable": true,
													"input": "select-multiple",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "risks_all",
													"lookup_key": "risk",
													"lookup_field": "risk",
													"show_in_insert_form": false
												},
												{
													"name": "organizationunits",
													"title": "Organization Units",
													"type": "array",
													"exportable": true,
													"input": "select-multiple",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "strutture_all",
													"lookup_key": "uo",
													"lookup_field": "uo",
													"show_in_insert_form": false
												},
												{
													"name": "numero",
													"title": "Activity number",
													"type": "string",
													"exportable": true,
													"show_in_insert_form": false,
													"show_in_update_form": false
												},
												{
													"name": "normativeint",
													"title": "Internal legislation",
													"type": "array",
													"input": "select-multiple",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "normativeint",
													"lookup_key": "law",
													"lookup_field": "law",
													"show_in_insert_form": false
												},
												{
													"name": "normativeext",
													"title": "External legislation",
													"type": "array",
													"input": "select-multiple",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "normativeext",
													"lookup_key": "law",
													"lookup_field": "law",
													"show_in_insert_form": false
												},
												{
													"name": "processi",
													"title": "Processes",
													"type": "array",
													"input": "select-multiple",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "processi",
													"lookup_key": "processo",
													"lookup_field": "processo",
													"show_in_insert_form": false
												},
												{
													"name": "sottoprocessi",
													"title": "Sub processes",
													"type": "array",
													"input": "select-multiple",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "sottoprocessi",
													"lookup_key": "sottoprocesso",
													"lookup_field": "sottoprocesso",
													"show_in_insert_form": false
												},
												{
													"name": "auditors",
													"title": "Auditors",
													"type": "array",
													"default": "{{userMeteor}}",
													"required": true,
													"exportable": true,
													"input": "select-multiple",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "q_users",
													"lookup_key": "profile.name",
													"lookup_field": "profile.name"
												},
												{
													"name": "branch",
													"title": "Branch",
													"type": "string",
													"input": "select",
													"input_group_class": "col-sm-4 col-md-4",
													"lookup_query_name": "filiali_all",
													"lookup_key": "branch",
													"lookup_field": "branch"
												},
												{
													"name": "data",
													"title": "Audit start date",
													"type": "date",
													"default": "today",
													"format": "DD/MM/YYYY",
													"exportable": true,
													"input": "datepicker",
													"input_group_class": "col-sm-4 col-md-4"
												},
												{
													"name": "nextreadystatus",
													"type": "bool",
													"searchable": false,
													"sortable": false,
													"show_in_dataview": false,
													"show_in_insert_form": false,
													"show_in_update_form": false,
													"show_in_read_only_form": false
												}
											],
											"object_type": "form"
										}
									],
									"template_rendered_code": " ",
									"html": "<template name=\"TEMPLATE_NAME\">\n\n<div class=\"divright\">\n   <ul class=\"list-group\">\n    <li class=\"list-group-item\" title=\"Status: Avviato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-hourglass-start not-selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: In lavorazione\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-cogs not-selected\" aria-hidden=\"true\"></i></a></li> \n    <li class=\"list-group-item\" title=\"Status: Completato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-diamond selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: Approvato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-check not-selected\" aria-hidden=\"true\"></i></a></li>\n    <li class=\"list-group-item\" title=\"Status: Archiviato\"><a class=\"list-group-item\" href=\"#\"><i class=\"fa fa-lock not-selected\" aria-hidden=\"true\"></i></a></li>  \n  </ul>\n </div>  \n</template>\n",
									"container_class": "container-fluid",
									"controller_after_action": "// Setto la variabile di Sessione con l'_id dell'attività corrente\n//Session.set('activityId',this.params.activityId);\n\n// console.log('Current ID activite: ', Session.get('activityId'));\n\n//console.log('status:', Activities.findOne({'_id': Session.get('activityId')}).status);"
								},
								{
									"name": "tests2",
									"type": "page",
									"title": "Tests",
									"title_icon_class": "fa fa-database",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId');"
										}
									],
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"query_name": "tests_list",
											"query_params": [
												{
													"name": "activityId",
													"value": "Session.get('activity')._id"
												}
											],
											"insert_route": "audits.workflow.tests2.update",
											"details_route": "audits.workflow.tests2.update",
											"edit_route": "audits.workflow.tests2.update",
											"insert_route_params": [
												{
													"name": "testId",
													"value": "Random.id([6])"
												}
											],
											"details_route_params": [
												{
													"name": "testId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "testId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Add new test",
											"object_type": "data_view"
										}
									],
									"template_rendered_code": "Session.set('titleVerifica','');\nSession.set('descriptionVerifica','');\n",
									"container_class": "container-fluid",
									"pages": [
										{
											"name": "update",
											"type": "page",
											"query_name": "test",
											"components": [
												{
													"name": "form",
													"type": "form",
													"class": "col-sm-8 col-md-9",
													"title": "Create new test",
													"helpers_code": "\"nextAttivitaNumber\": function() {\n  var max = 0;\n  var attivitaNumbers = Tests.find({activityId: Session.get('activityId')}, {fields: {attivitaId:1}}).fetch();\n  _.each(attivitaNumbers, function(doc) { var intNum = parseInt(doc.attivitaId);\n                                                                               \tif(!isNaN(intNum) && intNum > max) max = intNum; });\n  \t\t\t\t\t\t\t\t\tconsole.log('nextAttivitàNumber');\n                                                                              return (max + 1);\n                                                                               \t},\n\n\"test\":  function() { \n\tif (Session.get('titleVerifica'))\n\t\t\t{var x = ({\"titolo\":Session.get('titleVerifica'),\"obiettivo\":Session.get('descriptionVerifica')});return x;}\n\telse {return Tests.findOne({_id:this.params.testId}); }\n  }",
													"query_name": "test",
													"mode": "update",
													"submit_route": "audits.workflow.tests2",
													"submit_code": "/* mtt note: with this hack code it is possible use only one Form (bypass Insert Form):\n\nif (Session.get('testId').length === 6) {\n\n    values.activityId = Session.get('activityId');\n\tMeteor.call(\"testsInsert\", values, function(e, r) {\n         //console.log(\"testsInsert\",r); \n         if(e) console.log('error',e);\n         else \n         Meteor.call(\"testsUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse\n*/\n\nif (Session.get('testId').length === 6) {\n    values.activityId = Session.get('activity')._id;\n\tMeteor.call(\"testsInsert\", values, function(e, r) {\n         //console.log(\"testsInsert\",r); \n\t\t\tif(e) console.log('error',e);\n\t\t\telse\n\t\t\tSession.set('monitoringdetectionId',r);\n\t\t\tvar cursor = Files.find({'metadata.activityId': Session.get('activity')._id, 'metadata.section': 'test', 'metadata.test': Session.get('testId') });\n\t\t\tcursor.forEach(function(err, doc) {\n\t\t\t\tif (err) throw err;\n\t\t\t\tif (doc) {\n\t\t\t\t\tval={}; val.test = Session.get('testId',r);\n\t\t\t\t\tMeteor.call(\"FilesUpdate\", doc._id, val, function(e, r) { if(e) errorAction(e); else console.log('ok',r);});\n\t\t\t\t}\n\t\t\t});                   \n\t\t\tMeteor.call(\"testsUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
													"submit_button_title": "Save",
													"fields": [
														{
															"name": "numero",
															"title": "Test number",
															"type": "string",
															"default": "{{nextVerificaNumber}}",
															"show_in_dataview": false,
															"show_in_insert_form": false,
															"show_in_update_form": false
														},
														{
															"name": "titolo",
															"title": "Test title",
															"type": "string",
															"default": "{{titleVerifica}}",
															"required": true
														},
														{
															"name": "obiettivo",
															"title": "Test scope",
															"type": "string",
															"default": "{{descriptionVerifica}}",
															"input": "textarea"
														},
														{
															"name": "descrizione",
															"title": "Test description",
															"type": "string",
															"input": "textarea",
															"show_in_dataview": false,
															"show_in_insert_form": false
														},
														{
															"name": "activityId",
															"title": "ActivityId",
															"type": "string",
															"show_in_dataview": false,
															"show_in_insert_form": false,
															"show_in_update_form": false,
															"show_in_read_only_form": false
														},
														{
															"name": "esito",
															"title": "Result",
															"type": "string",
															"input": "select",
															"input_items": [
																{
																	"value": "-",
																	"title": "-"
																},
																{
																	"value": "fail",
																	"title": "FAIL"
																},
																{
																	"value": "pass",
																	"title": "PASS"
																}
															],
															"show_in_insert_form": false
														}
													],
													"object_type": "form"
												},
												{
													"name": "div",
													"type": "div",
													"class": "col-sm-4 col-md-3",
													"components": [
														{
															"name": "attachments",
															"type": "custom_component",
															"query_name": "files_all",
															"html": "<template name=\"TEMPLATE_NAME\">\n <br><br>\n  \n\t<div id=\"dropzone\" class=\"panel panel-default dropzone\">\n            \n       <div class=\"panel-heading no-padding\">\n              <div class=\"custom-file\">\n                  <label class=\"custom-file-label\" for=\"upload\" title=\"Click to attach files\" style=\"cursor: pointer;\">Attachments \n                     <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\" style=\"color: #3399f3;\"></i> \n                  </label>\n                  <input type=\"file\" class=\"custom-file-input\" multiple id=\"upload\">\n              </div>\n        </div>\n\n        <div class=\"panel-body no-padding\">\n              <ul class=\"list-group\">\n                   {{#each allegati}}\n                          <li class=\"list-group-item\">\n                               {{this.name}}\n                                   <span class=\"\">\n                                        <a href=\"{{this.url download=true}}\" class=\"btnDownload\" target=\"_parent\">\n                                              <i class=\"fa fa-cloud-download\" aria-hidden=\"true\"></i>\n                                         </a>\n                                         <label>\n                                              <i class=\"fa fa-trash-o\" style=\"color:red; cursor: pointer;\" aria-hidden=\"true\"></i>\n                                                                <input type=\"button\" value=\"Remove\" class=\"btnRemove\" style=\"display: none;\" />\n                                         </label>\n                                   </span>\n                          </li>\n                    {{else}}No files uploaded. {{/each}}\n              </ul>\n         </div>\n     </div>\n  </template>",
															"js": "Template.TEMPLATE_NAME.onCreated(function() { \n});\n\nTemplate.TEMPLATE_NAME.onDestroyed(function() {\n});\n\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\n\nTemplate.TEMPLATE_NAME.helpers({\n \"allegati\": function() {\n\t// console.log('=>',Files.find()); \n\treturn Files.find({'metadata.activityId':Session.get('activity')._id, 'metadata.section': 'test', 'metadata.test': Session.get('testId') }).fetch();\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n    'change #upload': function(event, temp) {\n      FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);\n        fileObj.metadata = { owner: Meteor.userId(), activityId: Session.get('activity')._id, section: 'test', test: Session.get('testId')};\n       // console.log(Session.get('activityId'),Meteor.userId());\n        Files.insert(fileObj);\n      });\n    },\n \n    'dropped #dropzone': function(event, temp) {\n        FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);\n        fileObj.metadata = { owner: Meteor.userId(), activityId: Session.get('activity')._id, section: 'test',test: Session.get('testId')};\n        var id = Files.insert(fileObj);\n       //console.log(Session.get('activityId'),Meteor.userId());\n      });\n    },\n  \n    'click .btnRemove': function(event, temp) {    \n\t\tevent.preventDefault();\n\t\tvar self = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Delete the file? Are you sure ?\",\n\t\t\ttitle: \"Delete\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n                      COLLECTION_VAR.remove({ _id: self._id });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n    }\n});\n\n",
															"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
															"object_type": "custom_component"
														},
														{
															"name": "collapse",
															"type": "custom_component",
															"query_name": "libtest",
															"html": "<template name=\"TEMPLATE_NAME\">\n\n \t<div class=\"panel-group\" id=\"accordion\" role=\"tablist\" aria-multiselectable=\"true\">\n      \t{{#each a in area}}\n\t\t<div class=\"panel panel-default\">\n\t\t\t<div class=\"panel-heading\" role=\"tab\" id=\"heading\">\n\t\t\t\t<h4 class=\"panel-title\">\n\t\t\t\t\t<a role=\"button\" data-toggle=\"collapse\" data-parent=\"#accordion\" href=\"#{{a.area}}\" aria-expanded=\"true\" aria-controls=\"{{a.area}}\">\n\t\t\t\t\t\t{{a.area}}\n\t\t\t\t\t</a>\n\t\t\t\t</h4>\n\t\t\t</div>\n\n\t\t\t<div id=\"{{a.area}}\" class=\"panel-collapse collapse\" role=\"tabpanel\" aria-labelledby=\"heading\">\n\t\t\t\t<div class=\"panel-body\">\n\t\t\t\t\t{{#each verifica area a.area }}\n\t\t\t\t\t<h6><p class=\"area\" name=\"{{this}}\">\n\t\t\t\t\t\t<a href=\"#\">\n\t\t\t\t\t\t\t{{this}}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</p></h6>\n\t\t\t\t\t{{/each}}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n      \t{{/each}}\n\t</div>\n</template>\n",
															"js": "Template.TEMPLATE_NAME.created = function() {\n\n};\n\nTemplate.TEMPLATE_NAME.destroyed = function() {\n\n};\n\nTemplate.TEMPLATE_NAME.rendered = function() {\n\n};\n\n\nTemplate.TEMPLATE_NAME.helpers({\n\t\"area\": function() {\n\t\tvar myArray = Libtest.find().fetch();\n\t\tvar groupby = _.groupBy(myArray, function(d){ return d.area; });\n\t\tvar map =  _.map(groupby, function(value, key) {return { \"area\": key, \"libreria\": _.pluck(value, 'libreria') }; });\n\t\treturn map;\n\t}\n});\n\n\nTemplate.registerHelper( 'verifica', ( lib, area ) => {\n\t verifiche = _.findWhere(lib,{\"area\": area });\n\t//console.log('verifica',verifiche)\n\treturn verifiche.libreria;\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n\t'click .area': function(e, t) {\n\t\tvar libreria = this.valueOf();\n\t\tSession.set('titleVerifica',libreria);\n\t\tvar description = Libtest.findOne({\"libreria\": libreria}).descrizione;\n\t\tSession.set('descriptionVerifica',description);\n\t}\n});\n",
															"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});",
															"gasoline": {
																"type": "gasoline",
																"templates": [
																	{
																		"name": "TEMPLATE_NAME",
																		"type": "template"
																	}
																]
															},
															"object_type": "custom_component"
														}
													],
													"object_type": "div"
												}
											],
											"template_rendered_code": "Session.set('titleVerifica','');\nSession.set('descriptionVerifica','');",
											"container_class": "container-fluid",
											"route_params": [
												"testId"
											],
											"render_subpages": "auto",
											"controller_after_action": "//Session.set('fieldworkId',this.params.fieldworkId);\n\nSession.set('testId',this.params.testId);\n\n"
										}
									]
								},
								{
									"name": "issues",
									"type": "page",
									"title": "Issues",
									"title_icon_class": "fa fa-bomb",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId');"
										}
									],
									"components": [
										{
											"name": "view",
											"type": "data_view",
											"query_name": "issues_list",
											"query_params": [
												{
													"name": "activityId",
													"value": "Session.get('activityId')"
												}
											],
											"insert_route": "audits.workflow.issues.update",
											"details_route": "audits.workflow.issues.update",
											"edit_route": "audits.workflow.issues.update",
											"insert_route_params": [
												{
													"name": "carenzaId",
													"value": "Random.id([6])"
												}
											],
											"details_route_params": [
												{
													"name": "carenzaId",
													"value": "this._id"
												}
											],
											"edit_route_params": [
												{
													"name": "carenzaId",
													"value": "this._id"
												}
											],
											"insert_button_title": "Add new issue",
											"fields": [
												{
													"name": "carenzaId",
													"title": "Issue number",
													"type": "string",
													"default": "{{nextCarenzaNumber}}",
													"required": true,
													"exportable": true,
													"show_in_update_form": false
												},
												{
													"name": "activityId",
													"title": "Activity Id",
													"type": "string",
													"required": true,
													"searchable": false,
													"sortable": false,
													"show_in_dataview": false,
													"show_in_insert_form": false,
													"show_in_update_form": false,
													"show_in_read_only_form": false
												},
												{
													"name": "titolo",
													"title": "Issue title",
													"type": "string",
													"required": true
												},
												{
													"name": "Company",
													"title": "Concerned companies",
													"type": "string",
													"required": true
												},
												{
													"name": "descrizione",
													"title": "Issue details",
													"type": "string",
													"required": true,
													"exportable": true,
													"input": "textarea",
													"show_in_dataview": false
												},
												{
													"name": "data",
													"title": "Issue date",
													"type": "date",
													"default": "today",
													"required": true,
													"format": "DD-MM-YYYY",
													"exportable": true,
													"input": "datepicker"
												},
												{
													"name": "livello",
													"title": "Issue level",
													"type": "string",
													"required": true,
													"exportable": true,
													"input": "select",
													"input_items": [
														{
															"value": "ridotto",
															"title": "Low"
														},
														{
															"value": "medio",
															"title": "Medium"
														},
														{
															"value": "alto",
															"title": "High"
														},
														{
															"value": "moltoalto",
															"title": "Very high"
														}
													]
												},
												{
													"name": "Companies",
													"title": "Companies interested",
													"type": "array",
													"required": true,
													"input": "checkbox",
													"input_items": [
														{
															"value": "alfa",
															"title": "Alfa Company"
														},
														{
															"value": "beta",
															"title": "Beta Company"
														},
														{
															"value": "gamma",
															"title": "Gamma Company"
														},
														{
															"value": "delta",
															"title": "Delta Company"
														},
														{
															"value": "omega",
															"title": "Omega Company"
														}
													]
												},
												{
													"name": "issue_owner",
													"title": "Issue owner",
													"type": "string",
													"required": true
												},
												{
													"name": "tipo",
													"title": "Issue nature",
													"type": "string",
													"input": "select",
													"input_items": [
														{
															"title": "null"
														},
														{
															"value": "Errore Umano",
															"title": "Errore Umano"
														},
														{
															"value": "Carenza Documentale",
															"title": "Carenza Documentale"
														},
														{
															"value": "Natura",
															"title": "Natura"
														}
													]
												},
												{
													"name": "dbi",
													"title": "External controller",
													"type": "bool",
													"input": "checkbox"
												}
											],
											"object_type": "data_view"
										}
									],
									"container_class": "container-fluid",
									"pages": [
										{
											"name": "update",
											"type": "page",
											"query_name": "issue",
											"components": [
												{
													"name": "form_issue",
													"type": "form",
													"title": "Create new issue",
													"query_name": "issue",
													"mode": "update",
													"submit_route": "audits.workflow.issues",
													"submit_code": "// mtt note: whit this hack code it is possible use only one Form (bypass Insert Form):\n\nif (Session.get('carenzaId').length === 6) {\n  \n    values.activityId = Session.get('activityId');\n\tMeteor.call(\"issuesInsert\", values, function(e, r) {\n        // console.log(\"fieldworksInsert\",r); \n         if(e) console.log('error'); \n         else \n         Meteor.call(\"issuesUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n   });\n}\nelse",
													"submit_button_title": "Save",
													"object_type": "form"
												}
											],
											"container_class": "container-fluid",
											"route_params": [
												"carenzaId"
											],
											"render_subpages": "auto",
											"controller_after_action": "Session.set('carenzaId',this.params.carenzaId);\n"
										}
									]
								},
								{
									"name": "exsummary",
									"type": "page",
									"title": "Executive Summary",
									"title_icon_class": "fa fa-edit",
									"helpers_code": "\n",
									"query_name": "activity",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId');"
										}
									],
									"components": [
										{
											"name": "edit_div",
											"type": "div",
											"components": [
												{
													"name": "edit",
													"type": "custom_component",
													"query_name": "activities_list",
													"html": "<template name=\"TEMPLATE_NAME\">\n\n\t<script> var CKEDITOR_BASEPATH = '/'; </script>\n    <textarea name=\"exsum\" id=\"exsum\"></textarea>\n\n</template>",
													"js": "Template.TEMPLATE_NAME.created = function() { };\n\nTemplate.TEMPLATE_NAME.destroyed = function() {};\n\nTemplate.TEMPLATE_NAME.rendered = function() {\n\t$.when(\n\t\t$.getScript(\"/ckeditor.js\")\n\t).done(function(){\n      \tCKEDITOR.timestamp= +new Date; //obbliga il browser a fare refresh\n\t\tCKEDITOR.replace( 'exsum', {\n\t\t\ton: {\tinstanceReady: function( evt ) {\n              \t\t\tvar exsum = evt.editor.name;\n              \t\t\tvar firstData = Activities.findOne({ _id: Session.get('activityId')}).memo;\n\t\t\t\t\t\tCKEDITOR.instances.exsum.setData(firstData);\n\t\t\t\t\t\tCKEDITOR.instances.exsum.focus();\n\t\t\t\t\t\tvar save_timeout;\n              \n\t\t\t\t\t\tsave_data = function() {                            \n\t\t\t\t\t\t\tclearTimeout(save_timeout);\t\t\t\t\t\t\t\n                            var data = {};\n                          \tdata.memo = CKEDITOR.instances.exsum.getData();\n                          \tif (data.memo != firstData)  { \n                          \t   Meteor.call(\"activitiesUpdate\", Session.get('activityId'), data, function(e, r){if(e){console.log('Error',e);}});\n\t\t\t\t\t\t\t   firstData = data.memo;\n                               //console.log('salva',data.memo);\n                            };\n\t\t\t\t\t\t};\n                      \n\t\t\t\t\t\tCKEDITOR.instances.exsum.on('change',  function() {\n\t\t\t\t\t\t\tclearTimeout(save_timeout);\n\t\t\t\t\t\t\tsave_timeout = setTimeout(save_data, 2000);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});   \n          \n\t});      \n};\n\n\nTemplate.TEMPLATE_NAME.helpers({});\n\n  \nTemplate.TEMPLATE_NAME.events({});\n\n",
													"jsx": "export const TEMPLATE_NAME = React.createClass({\n\trender() {\n\t\treturn (\n\t\t);\n\t}\n});\n",
													"object_type": "custom_component"
												}
											],
											"object_type": "div"
										}
									],
									"container_class": "container-fluid"
								},
								{
									"name": "evaluetions",
									"type": "page",
									"title": "Evaluetions",
									"title_icon_class": "fa fa-balance-scale",
									"helpers_code": "\n",
									"query_name": "activity",
									"query_params": [
										{
											"name": "activityId",
											"value": "Session.get('activityId')"
										}
									],
									"components": [
										{
											"name": "scoring",
											"type": "form",
											"query_name": "activity",
											"query_params": [
												{
													"name": "activityId",
													"value": "Session.get('activityId');"
												}
											],
											"mode": "update",
											"submit_route": "audits.workflow.evaluetions",
											"submit_button_title": "Salva",
											"fields": [
												{
													"name": "sci",
													"title": "Summary evaluetion",
													"type": "string",
													"input": "select",
													"input_items": [
														{
															"value": "Positiva",
															"title": "Positive"
														},
														{
															"value": "Parzialmente positiva +",
															"title": "Partial positive"
														},
														{
															"value": "Parzialmente positiva",
															"title": "Partial"
														},
														{
															"value": "Parzialmente positiva -",
															"title": "Partial negative"
														},
														{
															"value": "Negativa",
															"title": "Negative"
														}
													],
													"show_in_insert_form": false
												},
												{
													"name": "rischioResiduo",
													"title": "Evaluetion residual risk",
													"type": "string",
													"input": "select",
													"input_items": [
														{
															"value": "Alto",
															"title": "High"
														},
														{
															"value": "Medio",
															"title": "Medium"
														},
														{
															"value": "Basso",
															"title": "Low"
														},
														{
															"value": "Non significativo",
															"title": "Not significative"
														}
													],
													"show_in_insert_form": false
												},
												{
													"name": "datachiusura",
													"title": "End audit date",
													"type": "date",
													"default": "today",
													"format": "DD/MM/YYYY",
													"input": "datepicker",
													"show_in_insert_form": false
												}
											],
											"object_type": "form"
										}
									],
									"container_class": "container-fluid"
								}
							],
							"render_subpages": "always",
							"controller_after_action": "// Setto la variabile di Sessione con l'_id dell'attività corrente\n\nSession.set('activity', Activities.findOne({'_id': this.params.activityId}));\n\n//Session.set('activityId', Session.get('activity')._id);\n\n/*\nconsole.log('id' ,Session.get('activity')._id);\nconsole.log('nextreadystatus',Session.get('activity').nextreadystatus);\nconsole.log('status',Session.get('activity').status);\nconsole.log('numero',Session.get('activity').numero);\nconsole.log('titolo',Session.get('activity').titolo);\n*/\n\n"
						},
						{
							"name": "insert_page",
							"type": "page",
							"title": "New Audit",
							"components": [
								{
									"name": "insert_form",
									"type": "form",
									"helpers_code": "\n",
									"query_name": "activities_null",
									"mode": "insert",
									"submit_route": "home_private",
									"fields": [
										{
											"name": "status",
											"title": "Status",
											"type": "string",
											"default": "Avviato",
											"exportable": true,
											"input": "select",
											"array_item_type": "object",
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "tipo",
											"title": "Activity type",
											"type": "string",
											"exportable": true,
											"input": "radio",
											"array_item_type": "object",
											"show_in_dataview": false,
											"show_in_insert_form": false,
											"show_in_update_form": false,
											"show_in_read_only_form": false
										},
										{
											"name": "titolo",
											"title": "Title",
											"type": "string",
											"required": true,
											"exportable": true
										},
										{
											"name": "obiettivo",
											"title": "Activity objective",
											"type": "string",
											"exportable": true,
											"input": "textarea"
										},
										{
											"name": "areeRischio",
											"title": "Risk area (ICAAP)",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"lookup_query_name": "risks_all",
											"lookup_key": "ICAAP",
											"lookup_field": "ICAAP",
											"show_in_insert_form": false
										},
										{
											"name": "rischiEsaminati",
											"title": "Examinated risks",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"input_group_class": "col-sm-6 col-md-6",
											"lookup_query_name": "risks_all",
											"lookup_key": "rischio",
											"lookup_field": "rischio",
											"show_in_insert_form": false
										},
										{
											"name": "strutture",
											"title": "Organization Units",
											"type": "array",
											"exportable": true,
											"input": "select-multiple",
											"input_group_class": "col-sm-6 col-md-6",
											"lookup_query_name": "strutture_all",
											"lookup_key": "uo",
											"lookup_field": "uo",
											"show_in_insert_form": false
										},
										{
											"name": "numero",
											"title": "Activity number",
											"type": "string",
											"exportable": true,
											"input_group_class": "col-sm-6 col-md-6",
											"show_in_insert_form": false,
											"show_in_update_form": false
										},
										{
											"name": "normativeint",
											"title": "Internal legislation",
											"type": "array",
											"input": "select-multiple",
											"input_group_class": "col-sm-6 col-md-6",
											"lookup_query_name": "normativeint",
											"lookup_key": "norma",
											"lookup_field": "norma",
											"show_in_insert_form": false
										},
										{
											"name": "normativeext",
											"title": "External legislation",
											"type": "array",
											"input": "select-multiple",
											"input_group_class": "col-sm-6 col-md-6",
											"lookup_query_name": "normativeext",
											"lookup_key": "norma",
											"lookup_field": "norma",
											"show_in_insert_form": false
										},
										{
											"name": "Company",
											"title": "Companies",
											"type": "array",
											"required": true,
											"input": "checkbox",
											"input_group_class": "col-sm-4 col-md-4 thumbnail",
											"input_items": [
												{
													"value": "Alfa Company",
													"title": "Alfa Company"
												},
												{
													"value": "Beta Company",
													"title": "Beta Company"
												},
												{
													"value": "Gamma Company",
													"title": "Gamma Company"
												},
												{
													"value": "Delta Company",
													"title": "Delta Company"
												},
												{
													"value": "Omega Company",
													"title": "Omega Company"
												}
											]
										},
										{
											"name": "processi",
											"title": "Processes",
											"type": "array",
											"input": "select-multiple",
											"input_group_class": "col-sm-6 col-md-6",
											"lookup_query_name": "processi",
											"lookup_key": "processo",
											"lookup_field": "processo",
											"show_in_insert_form": false
										},
										{
											"name": "sottoprocessi",
											"title": "Sub processes",
											"type": "array",
											"input": "select-multiple",
											"input_group_class": "col-sm-6 col-md-6",
											"lookup_query_name": "sottoprocessi",
											"lookup_key": "sottoprocesso",
											"lookup_field": "sottoprocesso",
											"show_in_insert_form": false
										},
										{
											"name": "auditors",
											"title": "Auditors",
											"type": "array",
											"default": "{{userFullName}}",
											"required": true,
											"exportable": true,
											"input": "select-multiple",
											"input_template_code": "console.log('sono qui');",
											"input_group_class": "col-sm-6 col-md-6",
											"input_control_class": "pippo",
											"lookup_query_name": "q_users",
											"lookup_key": "_id",
											"lookup_field": "profile.name",
											"show_in_insert_form": false,
											"show_in_update_form": false,
											"show_in_read_only_form": false
										},
										{
											"name": "branch",
											"title": "Branch",
											"type": "string",
											"input": "select",
											"input_group_class": "col-sm-4 col-md-4",
											"lookup_query_name": "filiali_all",
											"lookup_key": "filiale",
											"lookup_field": "filiale"
										},
										{
											"name": "data",
											"title": "Audit start date",
											"type": "date",
											"default": "today",
											"required": true,
											"format": "DD/MM/YYYY",
											"exportable": true,
											"input": "datepicker",
											"input_group_class": "col-sm-4 col-md-4"
										}
									],
									"hidden_fields": [
										{
											"name": "status",
											"value": "'Start'"
										},
										{
											"name": "auditors",
											"value": "Meteor.user().profile.name"
										}
									],
									"object_type": "form"
								}
							],
							"container_class": "container-fluid"
						}
					]
				},
				{
					"name": "monitoringdetection",
					"type": "page",
					"components": [
						{
							"name": "view",
							"type": "data_view",
							"title": "Monitoring Detection",
							"query_name": "md_name",
							"query_params": [
								{
									"name": "name",
									"value": "Meteor.user().profile.name"
								}
							],
							"delete_confirmation_message": "Delete the monitoring detection ? Are you sure ?",
							"page_size": "10",
							"insert_route": "monitoringdetection.update",
							"details_route": "monitoringdetection.update",
							"edit_route": "monitoringdetection.update",
							"insert_route_params": [
								{
									"name": "monitoringdetectionId",
									"value": "Random.id([6])"
								}
							],
							"details_route_params": [
								{
									"name": "monitoringdetectionId",
									"value": "this._id"
								}
							],
							"edit_route_params": [
								{
									"name": "monitoringdetectionId",
									"value": "this._id"
								}
							],
							"insert_button_title": "New detection",
							"update_button_title": "update",
							"object_type": "data_view"
						}
					],
					"pages": [
						{
							"name": "update",
							"type": "page",
							"query_params": [
								{
									"name": "name",
									"value": "Meteor.user().profile.name"
								}
							],
							"components": [
								{
									"name": "form",
									"type": "form",
									"class": "col-sm-8 col-md-9",
									"title": "Edit Monitoring Detection",
									"query_name": "monitoringdetection",
									"mode": "update",
									"submit_route": "monitoringdetection",
									"submit_code": "if (Session.get('monitoringdetectionId').length === 6) {    \n\tMeteor.call(\"monitoringdetectionInsert\", values, function(e, r) {\n         if(e) console.log('error'); \n         else\n             Session.set('monitoringdetectionId',r);\n             var cursor = Files.find({'metadata.monitoringDetectionId': Session.get('monitoringdetectionId'), 'metadata.section': 'monitoring_detection'});\n             cursor.forEach(function(err, doc) {\n                if (err) throw err;\n                if (doc) {\n                    val={}; val.monitoringdetectionId = Session.get('monitoringdetectionId',r);\n                    Meteor.call(\"FilesUpdate\", doc._id, val, function(e, r) { if(e) errorAction(e); else console.log('ok',r);});  \n                };\n             });  \n             Meteor.call(\"monitoringdetectionUpdate\", r, values, function(e, r) { if(e) errorAction(e); else submitAction(r); });\n       });\n}\nelse",
									"hidden_fields": [
										{
											"name": "controller",
											"value": "Meteor.user().profile.name"
										}
									],
									"object_type": "form"
								},
								{
									"name": "div",
									"type": "div",
									"class": "col-sm-4 col-md-3",
									"components": [
										{
											"name": "attachment",
											"type": "custom_component",
											"query_name": "files_all",
											"html": "<template name=\"TEMPLATE_NAME\">\n <br><br>\n  \n\t<div id=\"dropzone\" class=\"panel panel-default dropzone\">\n            \n       <div class=\"panel-heading no-padding\">\n              <div class=\"custom-file\">\n                  <label class=\"custom-file-label\" for=\"upload\" title=\"Click to attach files\" style=\"cursor: pointer;\">Attachments \n                     <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\" style=\"color: #3399f3;\"></i> \n                  </label>\n                  <input type=\"file\" class=\"custom-file-input\" multiple id=\"upload\">\n              </div>\n        </div>\n\n        <div class=\"panel-body no-padding\">\n              <ul class=\"list-group\">\n                   {{#each allegati}}\n                          <li class=\"list-group-item\">\n                               {{this.name}}\n                                   <span class=\"\">\n                                        <a href=\"{{this.url download=true}}\" class=\"btnDownload\" target=\"_parent\">\n                                              <i class=\"fa fa-cloud-download\" aria-hidden=\"true\"></i>\n                                         </a>\n                                         <label>\n                                              <i class=\"fa fa-trash-o\" style=\"color:red; cursor: pointer;\" aria-hidden=\"true\"></i>\n                                                                <input type=\"button\" value=\"Remove\" class=\"btnRemove\" style=\"display: none;\" />\n                                         </label>\n                                   </span>\n                          </li>\n                    {{else}}No files uploaded. {{/each}}\n              </ul>\n         </div>\n     </div>\n  </template>\n",
											"js": "Template.TEMPLATE_NAME.onCreated(function() { \n});\n\nTemplate.TEMPLATE_NAME.onDestroyed(function() {\n});\n\n\n\nTemplate.TEMPLATE_NAME.onRendered(function() {  \n    $('#upload').fileinput({\n        showCaption: false,\n        showPreview: false,\n        dropZoneEnabled: false,\n        showUpload: false,\n        showRemove: false,\n      //browseClass: \"btn btn-primary\",\n        browseClass: \"\",\n        browseLabel: \"\",\n      //browseIcon: \"<i class=\\\"fa fa-cloud-upload\\\" aria-hidden=\\\"true\\\" style=\\\"color:#666666\\\"></i>\"\n        browseIcon: \"\"\n\t});\n});\n\n\n\nTemplate.TEMPLATE_NAME.helpers({\n \"allegati\": function() {\n\t// console.log('=>',Files.find()); \n\treturn Files.find({'metadata.monitoringDetectionId': Session.get('monitoringdetectionId'), 'metadata.section': 'monitoring_detection'}).fetch();\n  }\n});\n\n\nTemplate.TEMPLATE_NAME.events({\n    'change #upload': function(event, temp) {\n      FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);        \n        fileObj.metadata = { owner: Meteor.userId(), monitoringDetectionId: Session.get('monitoringdetectionId'), section: 'monitoring_detection'};\n       // console.log(Session.get('activityId'),Meteor.userId());\n        Files.insert(fileObj);\n      });\n    },\n \n    'dropped #dropzone': function(event, temp) {\n        FS.Utility.eachFile(event, function(file) {\n        var fileObj = new FS.File(file);\n        fileObj.metadata = { owner: Meteor.userId(), monitoringDetectionId: Session.get('monitoringdetectionId'), section: 'monitoring_detection'};\n        var id = Files.insert(fileObj);\n       //console.log(Session.get('activityId'),Meteor.userId());\n      });\n    },\n  \n    'click .btnRemove': function(event, temp) {    \n\t\tevent.preventDefault();\n\t\tvar self = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Delete the file? Are you sure ?\",\n\t\t\ttitle: \"Delete\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n                      COLLECTION_VAR.remove({ _id: self._id });\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n    }\n});\n\n",
											"jsx": "export class TEMPLATE_NAME extends Component {\n\n\tconstructor() {\n\t\tsuper();\n\t}\n\n\tcomponentWillMount() {\n\t\t/*TEMPLATE_CREATED_CODE*/\n\t}\n\n\tcomponentWillUnmount() {\n\t\t/*TEMPLATE_DESTROYED_CODE*/\n\t}\n\n\tcomponentDidMount() {\n\t\t/*TEMPLATE_RENDERED_CODE*/\n\n\t\tMeteor.defer(function() {\n\t\t\tglobalOnRendered();\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div></div>\n\t\t);\n\t}\n}",
											"gasoline": {
												"type": "gasoline",
												"templates": [
													{
														"name": "TEMPLATE_NAME",
														"type": "template"
													}
												]
											},
											"object_type": "custom_component"
										}
									],
									"object_type": "div"
								}
							],
							"route_params": [
								"monitoringdetectionId"
							],
							"controller_after_action": "Session.set('monitoringdetectionId',this.params.monitoringdetectionId);\n\n//console.log('after',Session.get('monitoringdetectionId'));"
						}
					]
				}
			]
		},
		"login_with_google": true,
		"server_startup_code": "var fs = require(\"fs\");\nvar os = Npm.require('os');\nvar containerized = require('containerized');\nvar fileMonitor= ['Branch','Libtest','Normative','Risks','Organizationunit','Users','Registrycontrols','Processi'];\n\n\npasswdAD =\"\";\nvar path = \"/tmp/files/lib/\";\n\n\nvar getIp = function() {\n    // Get interfaces\n    var netInterfaces = os.networkInterfaces();\n    // Result\n    var result = [];\n    for (var id in netInterfaces) {\n      var netFace = netInterfaces[id];\n\n      for (var i = 0; i < netFace.length; i++) {\n        var ip = netFace[i];\n        if (ip.internal === false && ip.family === 'IPv4') {\n          result.push(ip);\n        }\n      }\n    }   \n    return result[0].address;\n};\n\n\nconsole.log(\"=> Server IP:\",getIp());\nconsole.log(\"=> MONGO_URL: \", process.env.MONGO_URL);\nconsole.log(\"=> ROOT_URL: \",process.env.ROOT_URL);\nconsole.log(\"=> Path: \", path);\n\n\nif (process.env.passwdAD) {\n\t\tpasswdAD = process.env.passwdAD;\n\t\tconsole.log(\"=> PasswordAD: ..\",passwdAD.substr(4, 1),'..');\n} else {console.log(\"=> Active Direcoty disable\");}\n\n\n\n if (containerized()) {\n    console.log('=> I am running inside a Docker container.');\n} else {\n    console.log('=> I am NOT running inside a Docker container.');\n}\n\n\nvar windows = process.env.OS == 'Windows_NT' ? true : false;\nif (windows){\n\tconsole.log('=> System:', process.env.OS);\n\tpath = \"C://Users//matteo//Documents//GitHub//AuditTool//files//lib//\";\n\t}\nelse {console.log('=> The current server is not on Windows. Linux?');}\n\n\nfunction calendar () {\n\tvar now = Math.floor((moment().unix()));\n    console.log('now:',now);\n}\n\n\n\nvar watt = SyncedCron.add({\n\tname: 'watt',\n\tschedule: function(parser) {return parser.recur().every(20).minute();},\n\tjob: calendar\n});\n\nSyncedCron.config({log: false});\n\nSyncedCron.start();\n\n// ------------------------------------------------------------------------------------------\n// Aggiornamento collections\n// Non essendoci in Meteor un API per recuperare la collection a partire dal relativo nome\n// lato server, ho creato funzioni dedicate per importare il contenuto dei file\n//-------------------------------------------------------------------------------------------\nvar csv = require('csv-parser');\n\n// Function to obtain the Collection from his name\ngetCollection = function (string) {\n  for (var globalObject in this) {\n      if (this[globalObject] instanceof Meteor.Collection) {\n          if (globalObject === string) {\n              return (this[globalObject]);\n              break;\n          };\n      }\n  }\n  return undefined; // if none of the collections match\n};\n\n\n\nfunction uploadCSV (file) {\n    var csvfs = path+file+\".csv\";\n    if (fs.existsSync(csvfs)) {\n        var coll = Promise.await (getCollection(file)) ;\n        var t = Promise.await( coll.remove({}) );\n        if (file!=\"Processi\" && file!=\"Users\") {\n          \n              var h = Promise.await( fs.createReadStream(csvfs).pipe(csv()).on('data', async function (item) { await coll.insert(item); } )\n                                                                            .on('end', async function (item) { await console.log('Data uploaded:', file,' (',coll.find({}).count() ,')');  } ) );\n        }\n        if (file==\"Processi\") {\n              var p = [];\n              var h = Promise.await( fs.createReadStream(csvfs).pipe(csv()).on('data', async function (obj) { await p.push(obj); })\n                                                    .on('end', async function(){if(p.length > 0){\n                                                            var uniqProc = _.map(_.uniq(_.pluck(p, 'processo')), function(num){ return {processo: num}; });\n                                                            var uniqSottProc = _.map(_.uniq(_.pluck(p, 'sottoprocesso')), function(num){ return {sottoprocesso: num}; });\n                                                            await uniqProc.forEach(function(i){ coll.insert(i) });\n                                                            await uniqSottProc.forEach(function(j){coll.insert(j) });\n                                                            console.log('Data uploaded:',file,' (',uniqProc.length,')');\n                                                            console.log('Data uploaded:  sottoprocessi (',uniqSottProc.length,')');\n                                                         }})\n                                    );\n        }\n\t\tif (file==\"Users\" && Users.find().count({}) === 0) {\n        \t\tvar q = [];\n\t\t\t\tvar x = [];\n        \t\tfs.createReadStream(csvfs).pipe(csv()).on('data', function (obj) {q.push(obj); })\n\t\t\t\t\t   \t\t\t\t\t\t\t\t  .on('end', async function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (var i = 0, len = q.length; i < len; i++) { \n                                                                          const x = await (Accounts.createUser({email: q[i].email, roles: [q[i].roles], password : \"a\", profile: { name: q[i].name } }))\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  // console.log(i,x);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \t\t\t \t  }\n  \t\t\t\t\t\t\t\t\t\t\t\t                         console.log('Data uploaded: users (', q.length ,')' );\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t createAuditExample();\n\t\t\t\t\t\t\t\t\t\t\t\t\t   })\n\t\t};\n\n   } else (console.log('File ',file,' not found !'));\n}\n\n\nfunction csvFileToCollection(file) {\n    uploadCSV(file);\n    var csvfs = path+file+\".csv\";\n\tfs.watchFile(csvfs, (curr, prev) => {\n           if(curr.mtime != prev.mtime) { uploadCSV(file); }   \t\t\t\t\t\t                  \n\t});\n}\n  \n\nfileMonitor.forEach(function(f){ csvFileToCollection(f) });\nBranch.insert({branch: \"- Corporate -\"});\n\n\nfunction createAuditExample() {\n  \n  if (Activities.find().count() === 0) {\n            Activities.insert({\n              tipo: \"Audit\",\n              status:\"Working in progress\",\n              company: [\"Beta Company\",\"Omega Company\"],\n              branch:\"Corporate\",\n              nextreadystatus:false,\n              titolo: \"Liquidity\",\n              obiettivo:\"Ordinary audit on liquidity\",\n              areeRischio: ['Credito', 'Operativo'],\n              rischiEsaminati:['Informatico', 'Liquidità'],\n              strutturaId: \"\",\n              auditors: [\"Albert Einstein\", \"Galileo Galilei\"],\n              data: \"12/11/2018\",\n              memo: \"\",\n              sci: \"Parzial negative\",\n              rischioResiduo:\"medio\"\n            });\n\n             Activities.insert({\n              tipo: \"Audit\",\n              status:\"Close\",\n              company: [\"Alfa Companay\"],\n              branch:\"Corporate\",\n              nextreadystatus:false,\n              titolo: \"Purchase process\",\n              obiettivo:\"Audit on procedures of purchases\",\n              areeRischio: ['Operativo'],\n              rischiEsaminati:['Informatico', 'Operativo'],\n              strutturaId: \"\",\n              auditors: [\"Albert Einstein\", \"Galileo Galilei\"],  \t\t\t\t\t  \n              data: \"01/02/2018\",\n              closedate: \"07/06/2018\",\n              numero: \"1/2018\",\n              memo: \"\",\n              sci: \"Parzial positive\",\n              rischioResiduo:\"medium\"\n            });\n    \n// =============================================    \n      var id=Activities.insert({\n        \t  _id: \"11111111111111111\",\n              tipo: \"Audit\",\n              status:\"Close\",\n              branch:\"Corporate\",\n        \t  company: [\"Alfa Company\",\"Gamma Company\",\"Omega Company\"],\n              nextreadystatus:false,\n              titolo: \"Business Continuity Management\",\n              obiettivo:\"The audit, which falls within the audits established by the Audit Plan, has the perimeter of management of the business continuity of the comapany, defined by national Law as: the set of initiatives aimed at to reduce to a level deemed acceptable the damages resulting from accidents or disasters directly or indirectly affecting an operator.\",               \n              areeRischio: ['Internal Regulatory compliance','External Regulatory compliance', 'Business operations'],\n              rischiEsaminati:['Operation risk'],\n              strutturaId: \"Privacy & Security and ICT\",\n              auditors: [\"Albert Einstein\", \"Galileo Galilei\"],  \t\t\t\t\t  \n              data: \"05/04/2018\",\n              numero: \"20/2018\",\n              memo: \"The audit, which falls within the audits established by the Audit Plan, has the perimeter of management of the business continuity of the Alfa Company, defined national law as: the set of initiatives aimed at to reduce to a level deemed acceptable the damages resulting from accidents or disasters directly or indirectly affecting an operator .The Business Continuity Plan (hereinafter also the Plan or PCO) approved by the Board of Directors of Alfa Company at the meeting of February 18, 2018, is valid for all Alfa Company offices present in Holand and for the subsidiary Beta Compant, while the other subsidiaries at the date of approval (Gamma Company and Omega Company) continue to use, up to revocation, their Business Continuity Plan and related annexes updated in the first half of 2017. The person in charge of the O.U. Privacy & Security has been appointed by the Board of Directors of Alfa Comany as the manager of the Operational Continuity Plan and, therefore, in this capacity, it maintains contacts with the Supervisory Authority in the event of a crisis.The Alfa Company Plan aims to describe the organizational and technological measures and arrangements adopted by the Company to guarantee operational continuity and is intended to support the management and management of anomalous situations of seriousness that require specific, non-ordinary measures to their contrast and overcoming. The Plan formalises the Company's Business Continuity objectives as well as the approach, organizational procedures and continuity solutions set up to achieve them. The Company's total PCO also includes the Disaster Recovery Plan prepared to deal with events that entail the unavailability of the Information System.The main internal reference legislation is represented by the Organizational procedure for the insurance continuity of the service, issued in December 2016. This procedure, starting from the identification of the critical business activities, has the objective to determine for each of them organizational controls and business continuity measures commensurate with risk levels. Through the aforementioned process, the Company therefore proposes to limit the probability and impact of a serious interruption of operations and to ensure continuity of service. An adequate Top Management commitment was noted on the issues of Business Continuity: the Copmany's Board of Directors, in addition to approving the PCO and the annual Audit Plan at least annually, is informed of the results of the checks on the adequacy of the Plan. For the operational management of the PCO and its updates, the Manager of the Operational Continuity Plan makes use of a dedicated structure (O.U. Business Continuity). Every year, involving the main organizational units of the Company, the impact analysis (Business Impact Analysis) is performed, in order to identify the risk level of critical business processes, considering all the crisis scenarios envisaged by the relevant legislation.\",\n              sci: \"Parzial positive\",               \n              rischioResiduo:\"Medium\",\n        \t  normativeint: [\"Organizational insurance procedure for the continuity of the service\",\"Group Policy for strategic planning in the ICT field\",\"Operational Continuity Plan, approved by the Alfa Company Board of Directors\"],\n        \t  normativeext: [\"Best practices: Management Practices, Cobit 5.0\", \"National law\"]        \n            });        \n       \t   Tests.insert({\n         \t  numero: \"1\", \n              titolo: \"Policy\",            \n         \t  obiettivo: \"Operational Continuity Management Framework (CO)\",\n         \t  descrizione: \"Verification of the existence and adequacy of a Policy approved by the Board of Directors, which defines: i) business continuity objectives and strategy; ii) ownership of CO management, and related roles and responsibilities.\",\n         \t  activityId: id,\n         \t  esito: \"FAIL\"              \n            });\n           Tests.insert({\n         \t  numero: \"2\", \n              titolo: \"Residual risk\",\n         \t  obiettivo: \"Operational Continuity Management Framework (CO)\",\n         \t  descrizione: \"Verify that the Board of Directors: i) approves the Business Continuity Plan and subsequent amendments, ii) accepts any residual risks not managed by the Plan itself.\",\n         \t  activityId: id,\n         \t  esito: \"FAIL\"              \n            });\n           Tests.insert({\n         \t  numero: \"3\", \n              titolo: \"BIA & DR\",\n         \t  obiettivo: \"Business Impact Analysis (BIA) and Risk Assessment\",\n         \t  descrizione: \"Verify that all critical processes have been identified, the relevant managers, the IT support procedures, the staff involved, and the technological infrastructures used, as well as the time for restoring the process itself.\",\n         \t  activityId: id,\n         \t  esito: \"PASS\"              \n            });\n           Tests.insert({\n         \t  numero: \"4\", \n              titolo: \"Suppliers\",\n         \t  obiettivo: \"Business Impact Analysis (BIA) and Risk Assessment\",\n         \t  descrizione: \"Verify that the constraints deriving from interdependencies were also considered (also between and with suppliers, customers, other operators).\",\n         \t  activityId: id,\n         \t  esito: \"FAIL\"              \n            });\n           Tests.insert({\n         \t  numero: \"5\", \n              titolo: \"Business processes\",\n         \t  obiettivo: \"Business Continuity Plan (BCP)\",\n         \t  descrizione: \"Verify that the BCP includes all critical business processes, and clearly describe the procedures for managing CO in the event of a crisis.\",\n         \t  activityId: id,\n         \t  esito: \"PASS\"              \n            });\n           Tests.insert({\n         \t  numero: \"6\", \n              titolo: \"Declaring crisis\",\n         \t  obiettivo: \"Business Continuity Plan (BCP)\",\n         \t  descrizione: \"Verify that the procedure for declaring a state of crisis has been defined in conjunction with the IT security incident management process\",\n         \t  activityId: id,\n         \t  esito: \"PASS\"              \n            });\n           Tests.insert({\n         \t  numero: \"7\", \n              titolo: \"Procedures Disaster Recovery Plan\",\n         \t  obiettivo: \"Disaster Recovery Plan\",\n         \t  descrizione: \"Verifies that the Disaster Recovery Plan is an integral part of the BCP, and provides indications on how and how to generate copies of the production archives, as well as on the procedures for restoration at alternative sites.\",\n         \t  activityId: id,\n         \t  esito: \"PASS\"              \n            });\n           Tests.insert({\n         \t  numero: \"8\", \n              titolo: \"Recovery capabilities\",\n         \t  obiettivo: \"Disaster Recovery Plan\",\n         \t  descrizione: \"Verify that there is congruence between the current recovery capabilities guaranteed by the Disaster Recovery with the actual business needs of the Bank (as indicated in the BIA), and that the DR Plan is updated with respect to technological and organizational developments.\",\n         \t  activityId: id,\n         \t  esito: \"FAIL\"              \n            });\n           Tests.insert({\n         \t  numero: \"9\", \n              titolo: \"Tests\",\n         \t  obiettivo: \"Risk Monitoring / Test\",\n         \t  descrizione: \"Verifies that: i) the annual Audit Plan is approved by the Board of Directors, ii) comprehensive checks, based on scenarios as realistic as possible, of the restoration of critical business operations in crisis conditions are carried out at least annually.\",\n         \t  activityId: id,\n         \t  esito: \"FAIL\"              \n            });\n           Tests.insert({\n         \t  numero: \"10\", \n              titolo: \"Checks are documented\",\n         \t  obiettivo: \"Reporting\",\n         \t  descrizione: \"Verifies that: i) the results of the checks are documented, brought to the attention of the competent corporate bodies; ii) the BoD is informed at least annually of the results of the controls on the adequacy of the Plan as well as the verification of the CO measures; in case of any deficiencies found, the appropriate corrective actions are started.\",\n         \t  activityId: id,\n         \t  esito: \"PASS\"              \n            });\n    \n           Issues.insert({\n         \t  carenzaId: \"1\",\n              activityId: id,\n              titolo: \"Know how\",\n              company: [\"Alfa company\", \"Beta company\"],\n              descrizione: \"Nel mezzo del cammin di nostra vita mi ritrovai per una selva oscura, ché la diritta via era smarrita. Ahi quanto a dir qual era è cosa dura esta selva selvaggia e aspra e forte che nel pensier rinova la paura!\",\n              data: \"03/06/2018\",\n              livello: \"High\",\n              companies: \"\",\n              issue_owner: \"\",\n              tipo: \"Errore Umano\",\n              dbi: \"Yes\",              \n            });\n           Issues.insert({\n         \t  carenzaId: \"2\",\n              activityId: id,\n              titolo: \"Critical outsourcers\",\n              company: [\"Alfa company\", \"Beta company\"],\n              descrizione: \"Tant' è amara che poco è più morte; ma per trattar del ben ch'i' vi trovai, dirò de l'altre cose ch'i' v'ho scorte. Io non so ben ridir com' i' v'intrai, tant' era pien di sonno a quel punto che la verace via abbandonai.\",\n              data: \"05/06/2018\",\n              livello: \"Low\",\n              companies: \"\",\n              issue_owner: \"\",\n              tipo: \"Uman error\",\n              dbi: \"No\",              \n            });\n        \n //==========================================================   \n            \n   }\n  \n  \n  if (Monitoringdetection.find().count() === 0) {Monitoringdetection.insert({controlId: \"1\",  date: \"/08/09/2018\", keyIndicator:\"72\", note:\"\", controller:\"Galileo Galilei\"  });\n                                         \t   Monitoringdetection.insert({controlId: \"2\",  date: \"07/09/2018\", keyIndicator:\"100\", note:\"nota\", controller:\"Galileo Galilei\" });\n                                         \t   Monitoringdetection.insert({controlId: \"3\",  date: \"11/09/2018\", keyIndicator:\"0\", note:\"nota\", controller:\"Galileo Galilei\"  });\n                                         \t   Monitoringdetection.insert({controlId: \"4\",  date: \"01/9/2018\", keyIndicator:\"23\", note:\"nota\", controller:\"Galileo Galilei\"  });\n                                               Monitoringdetection.insert({controlId: \"61\", date: \"12/9/2018\", keyIndicator:\"14\", note:\"nota\", controller:\"Galileo Galilei\"  });\n                                               Monitoringdetection.insert({controlId: \"200\",date: \"7/7/2017\", keyIndicator:\"32\",  note:\"nota\", controller:\"Galileo Galilei\"  });\n                                               Monitoringdetection.insert({controlId: \"200\",date: \"4/10/2018\", keyIndicator:\"2\", note:\"test non effettuato mancanza dati\", controller:\"Galileo Galilei\"  });\n                                               Monitoringdetection.insert({controlId: \"202\",date: \"1/9/2018\", keyIndicator:\"56\", note:\"nota\", controller:\"Galileo Galilei\"  });\n                                       }; \n\n}\n\n\n\tMeteor.methods({\n\t\t\"additionalData\": function(id) {\n\t\t\tlet tests = Promise.await( Tests.find({activityId: id}).fetch() );\n\t\t   \tlet issues = Promise.await ( Issues.find({activityId: id}).fetch() );\n\t\t   \tvar outputjson = {issues: [], tests: [] } ;\n\t\t    for (let i = 0; i < issues.length; i++) { outputjson.issues.push(issues[i]);}\n\t\t    for (let i = 0; i < tests.length; i++) { outputjson.tests.push(tests[i]);}\n\t\t\treturn  outputjson;\n\t\t},                             \n\t})\n    \n    \n    \n  import {ReactiveAggregate} from 'meteor/jcbernack:reactive-aggregate';\n  var pipeline =[{\n          $group: {\n                  _id: \"$controlId\",\n                  date: { $min: \"$date\" },\n                  controller: { \"$first\": \"$controller\"},\n                  keyIndicator: { \"$first\": \"$keyIndicator\"},\n                  note: { \"$first\": \"$note\"}\n              }\n  }];\n\n   Meteor.publish(\"MonitoringdetectionByid\", function() {\n\t    ReactiveAggregate(this, Monitoringdetection, pipeline, { clientCollection: \"clientMonitoringdetectionByid\" });\n\t});\n\n\n//----------------------------------------------------------------------------------------------------------------\n",
		"on_user_created_code": "if(options.roles) {user.roles = options.roles;}\nuser.profile.username = options.name;\nuser.profile.email = options.email;\n\n// Hack to delete duplicate entries\n// Users.remove({ email: options.email });\n//console.log(options);",
		"stylesheet": "/******************************************/\n/*  */\n/******************************************/\n.wrapper {\n  display: table;\n  height: 100%;\n  width: 100%;\n}\n\n.container-fostrap {\n  display: table-cell;\n  padding: 1em;\n  text-align: center;\n  vertical-align: middle;\n}\n\n.card {\n    display: block;\n  /* ---mtt */\n    height: 100%;\n    position: relative;\n  /* ---mtt */\n    margin-top: 20px;\n    margin-bottom: 25px;\n    line-height: 1.42857143;\n    background-color: #fff;\n    border-radius: 2px;\n    box-shadow: 0 2px 5px 0 rgba(0,0,0,0.16),0 2px 10px 0 rgba(0,0,0,0.12);\n    transition: box-shadow .25s;\n}\n.card:hover {\n  box-shadow: 0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);\n}\n.img-card {\n  width: 100%;\n  height:100%;\n  border-top-left-radius:2px;\n  border-top-right-radius:2px;\n  display:block;\n  overflow: hidden;\n}\n\n.img-card img{\n  width: 100%;\n  height: 200px;\n  object-fit:cover;\n  transition: all .25s ease;\n}\n\n.card-content {\n  padding:10px;\n  font-size: 0.9em;\n  text-align:left;\n  /* ---mtt */\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 8;\n  -webkit-box-orient: vertical;\n  /* ---mtt */\n}\n.card-title {\n  padding-top:4px;\n  padding-left:10px;\n  padding-right:10px;\n  height: 36px;\n  text-align:left;\n  font-size: 0.9em;\n  overflow: hidden;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n}\n\n.card-title a {\n  color: #000;\n  text-decoration: none !important;\n}\n\n.card-read-more {\n    /* ---mtt */\n  position: absolute;\n  bottom: 0; right: 0;  left: 0;\n    /* ---mtt */\n // border-top: 1px solid #D4D4D4;\n}\n.card-read-more a {\n  //text-decoration: none !important;\n  padding:2px;\n//  font-weight:600;\n  //text-transform: uppercase\n}\n\n/******************************************/\n\n\n\n\n.dashboard {\n  \tborder: #cdcdcd medium solid;\n\tborder-radius: 10px;\n    height: 100%;\n  \tfont-size: small;\n}\n\n.no-border [class*=\"-6\"] {\n\tpadding-left:0;\n    padding-right:0;\n}\n\n.divlib {\n    border-style: solid;\n    border-width: 2px;\n  \tborder-radius: 25px;\n  \tfont-size: small;\n}\n\nul.list-group:after {\n  content: \"\";\n}\n\nli.borderless {\n  border: 0 none;\n}\n\n.not-selected {\n  font-size: 12px;\n  list-style-type: none;  \n  opacity: 0.95;\n  color: #dadada;\n  padding: 0;\n}\n\n.selected {\n  \tanimation: \n      fonticon 4s forwards,\n      statusicon 4s forwards;     \n}\n\n.suggested {\n\tcolor: #76f233;\n    cursor: pointer;\n\tfont-size: 16px;\n}\n\n@keyframes statusicon {\n    from { color: #dadada;}\n    to {color: #3399f3;}\n} \n\n@keyframes fonticon {\n  0% {font-size: 12px;}\n  20% {font-size: 14px;}\n  40% {font-size: 16px;}\n  60% {font-size: 18px;}\n  80% {font-size: 20px;}\n  100% {font-size: 22px;}\n}\n",
		"copy_files": [
			{
				"source": "files/favicon.ico",
				"dest": "PUBLIC_DIR/favicon.ico"
			},
			{
				"source": "files\\ckeditor",
				"dest": "PUBLIC_DIR/"
			},
			{
				"source_content": "Meteor.publish(\"activities_list\", function() {\n\tif(Users.isInRoles(this.userId, [\"admin\"])) {\n\t\treturn Activities.find({}, {});\n\t}\t\n\tvar name='';\n\tif (this.userId) { name = Users.findOne({_id:this.userId},{}).profile.name;};\n\t// console.log('auditors:',Activities.find({auditors:name}, {}).fetch());\n    return Activities.find({auditors:name}, {});\n\t// return Activities.find({ownerId:this.userId}, {});\n});\n\nMeteor.publish(\"activities_null\", function() {\n\tif(Users.isInRoles(this.userId, [\"admin\"])) {\n\t\treturn Activities.find({_id:null}, {});\n\t}\n\treturn Activities.find({_id:null,ownerId:this.userId}, {});\n});\n\nMeteor.publish(\"activity\", function(activityId) {\n\tif(Users.isInRoles(this.userId, [\"admin\"])) {\n\t\treturn Activities.find({_id:activityId}, {});\n\t}\n\t//  return Activities.find({_id:activityId,ownerId:this.userId}, {});\n    \treturn Activities.find({_id:activityId}, {});\n});\n\n\nMeteor.publish(\"activity_all\", function() {\n//        if(Users.isInRoles(this.userId, [\"admin\"])) {\n//                return Activities.find({}, {});\n//        }\n//\treturn Activities.find({ownerId:this.userId}, {});\n\treturn Activities.find({}, {});\n});\n\n\n\n",
				"dest": "SERVER_PUBLISH_DIR/activities.js1"
			},
			{
				"source_content": "var pageSession = new ReactiveDict();\n\nTemplate.HomePrivate.onCreated(function() {\n\t\n});\n\nTemplate.HomePrivate.onDestroyed(function() {\n\t\n});\n\nTemplate.HomePrivate.onRendered(function() {\n\t\n\tMeteor.defer(function() {\n\t\tglobalOnRendered();\n\t\t$(\"input[autofocus]\").focus();\n\t});\n});\n\nTemplate.HomePrivate.events({\n\t\n});\n\nTemplate.HomePrivate.helpers({\n\t\n});\n\nvar HomePrivateAuditViewItems = function(cursor) {\n\tif(!cursor) {\n\t\treturn [];\n\t}\n\n\tvar searchString = pageSession.get(\"HomePrivateAuditViewSearchString\");\n\tvar sortBy = pageSession.get(\"HomePrivateAuditViewSortBy\");\n\tvar sortAscending = pageSession.get(\"HomePrivateAuditViewSortAscending\");\n\tif(typeof(sortAscending) == \"undefined\") sortAscending = true;\n\n\tvar raw = cursor.fetch();\n\n\t// filter\n\tvar filtered = [];\n\tif(!searchString || searchString == \"\") {\n\t\tfiltered = raw;\n\t} else {\n\t\tsearchString = searchString.replace(\".\", \"\\\\.\");\n\t\tvar regEx = new RegExp(searchString, \"i\");\n\t\tvar searchFields = [\"titolo\", \"numero\", \"tipo\", \"auditors\", \"data\", \"status\"];\n\t\tfiltered = _.filter(raw, function(item) {\n\t\t\tvar match = false;\n\t\t\t_.each(searchFields, function(field) {\n\t\t\t\tvar value = (getPropertyValue(field, item) || \"\") + \"\";\n\n\t\t\t\tmatch = match || (value && value.match(regEx));\n\t\t\t\tif(match) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn match;\n\t\t});\n\t}\n\n\t// sort\n\tif(sortBy) {\n\t\tfiltered = _.sortBy(filtered, sortBy);\n\n\t\t// descending?\n\t\tif(!sortAscending) {\n\t\t\tfiltered = filtered.reverse();\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\nvar HomePrivateAuditViewExport = function(cursor, fileType) {\n\tvar data = HomePrivateAuditViewItems(cursor);\n\tvar exportFields = [\"titolo\", \"numero\", \"tipo\", \"auditors\", \"data\", \"status\"];\n\n\tvar str = exportArrayOfObjects(data, exportFields, fileType);\n\n\tvar filename = \"export.\" + fileType;\n\n\tdownloadLocalResource(str, filename, \"application/octet-stream\");\n};\n\nTemplate.HomePrivateAuditView.onCreated(function() {\n\t\n});\n\nTemplate.HomePrivateAuditView.onDestroyed(function() {\n\t\n});\n\nTemplate.HomePrivateAuditView.onRendered(function() {\n\tpageSession.set(\"HomePrivateAuditViewStyle\", \"table\");\n\t\n});\n\nTemplate.HomePrivateAuditView.events({\n\t\"submit #dataview-controls\": function(e, t) {\n\t\treturn false;\n\t},\n\n\t\"click #dataview-search-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar form = $(e.currentTarget).parent();\n\t\tif(form) {\n\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\tif(searchInput) {\n\t\t\t\tsearchInput.focus();\n\t\t\t\tvar searchString = searchInput.val();\n\t\t\t\tpageSession.set(\"HomePrivateAuditViewSearchString\", searchString);\n\t\t\t}\n\n\t\t}\n\t\treturn false;\n\t},\n\n\t\"keydown #dataview-search-input\": function(e, t) {\n\t\tif(e.which === 13)\n\t\t{\n\t\t\te.preventDefault();\n\t\t\tvar form = $(e.currentTarget).parent();\n\t\t\tif(form) {\n\t\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\t\tif(searchInput) {\n\t\t\t\t\tvar searchString = searchInput.val();\n\t\t\t\t\tpageSession.set(\"HomePrivateAuditViewSearchString\", searchString);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tif(e.which === 27)\n\t\t{\n\t\t\te.preventDefault();\n\t\t\tvar form = $(e.currentTarget).parent();\n\t\t\tif(form) {\n\t\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\t\tif(searchInput) {\n\t\t\t\t\tsearchInput.val(\"\");\n\t\t\t\t\tpageSession.set(\"HomePrivateAuditViewSearchString\", \"\");\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t\"click #dataview-insert-button\": function(e, t) {\n\t\te.preventDefault();\n      \n      var data = { data: moment().format('MM/DD/YYYY') };\n      var auditors = { auditors: Meteor.user().profile.name };\n      var status =  { status: 'Avviato'};\n      var filiale = { filiale: '-'};\n      //var numero = { numero: ''};\n      //var values = Object.assign(data, auditors, status, numero, filiale);\n      var values = Object.assign(data, auditors, status, filiale);\n      \n      // console.log(\"=>\",values);\n            \n      Meteor.call(\"activitiesInsert\", values, function(e, r) {\n                              //console.log(\"activitiesInsert\",r); \n                              if(e) errorAction(e); \n                              Session.set(\"activityId\",r);    \n                              console.log(\"sessione corrente:\",r);\t\t\n                              Router.go(\"audits.workflow\", { id: r }); });      \n\t},\n  \n\n\t\"click #dataview-export-default\": function(e, t) {\n\t\te.preventDefault();\n\t\tHomePrivateAuditViewExport(this.activities_list, \"csv\");\n\t},\n\n\t\"click #dataview-export-csv\": function(e, t) {\n\t\te.preventDefault();\n\t\tHomePrivateAuditViewExport(this.activities_list, \"csv\");\n\t},\n\n\t\"click #dataview-export-tsv\": function(e, t) {\n\t\te.preventDefault();\n\t\tHomePrivateAuditViewExport(this.activities_list, \"tsv\");\n\t},\n\n\t\"click #dataview-export-json\": function(e, t) {\n\t\te.preventDefault();\n\t\tHomePrivateAuditViewExport(this.activities_list, \"json\");\n\t}\n\t\n});\n\nTemplate.HomePrivateAuditView.helpers({\n\n\t\"insertButtonClass\": function() {\n\t\treturn Activities.userCanInsert(Meteor.userId(), {}) ? \"\" : \"hidden\";\n\t},\n\n\t\"isEmpty\": function() {\n\t\treturn !this.activities_list || this.activities_list.count() == 0;\n\t},\n\t\"isNotEmpty\": function() {\n\t\treturn this.activities_list && this.activities_list.count() > 0;\n\t},\n\t\"isNotFound\": function() {\n\t\treturn this.activities_list && pageSession.get(\"HomePrivateAuditViewSearchString\") && HomePrivateAuditViewItems(this.activities_list).length == 0;\n\t},\n\t\"searchString\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewSearchString\");\n\t},\n\t\"viewAsTable\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewStyle\") == \"table\";\n\t},\n\t\"viewAsBlog\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewStyle\") == \"blog\";\n\t},\n\t\"viewAsList\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewStyle\") == \"list\";\n\t},\n\t\"viewAsGallery\": function() {\n\t\treturn pageSession.get(\"HomePrivateAuditViewStyle\") == \"gallery\";\n\t}\n\n\t\n});\n\n\nTemplate.HomePrivateAuditViewTable.onCreated(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTable.onDestroyed(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTable.onRendered(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTable.events({\n\t\"click .th-sortable\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar oldSortBy = pageSession.get(\"HomePrivateAuditViewSortBy\");\n\t\tvar newSortBy = $(e.target).attr(\"data-sort\");\n\n\t\tpageSession.set(\"HomePrivateAuditViewSortBy\", newSortBy);\n\t\tif(oldSortBy == newSortBy) {\n\t\t\tvar sortAscending = pageSession.get(\"HomePrivateAuditViewSortAscending\") || false;\n\t\t\tpageSession.set(\"HomePrivateAuditViewSortAscending\", !sortAscending);\n\t\t} else {\n\t\t\tpageSession.set(\"HomePrivateAuditViewSortAscending\", true);\n\t\t}\n\t}\n});\n\nTemplate.HomePrivateAuditViewTable.helpers({\n\t\"tableItems\": function() {\n\t\treturn HomePrivateAuditViewItems(this.activities_list);\n\t}\n});\n\n\nTemplate.HomePrivateAuditViewTableItems.onCreated(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTableItems.onDestroyed(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTableItems.onRendered(function() {\n\t\n});\n\nTemplate.HomePrivateAuditViewTableItems.events({\n\t\"click td\": function(e, t) {\n\t\te.preventDefault();\n\t\tSession.set(\"activityId\",this._id);\n\t\tconsole.log(\"sessione corrente:\",this._id,\" - \",this.tipo);\n\t\t\n        Router.go(\"audits.workflow\", { id: this._id, tipo: this.tipo});\n         \n\t\t/**/\n\t\treturn false;\n\t},\n\n\t\"click .inline-checkbox\": function(e, t) {\n\t\te.preventDefault();\n\n\t\tif(!this || !this._id) return false;\n\n\t\tvar fieldName = $(e.currentTarget).attr(\"data-field\");\n\t\tif(!fieldName) return false;\n\n\t\tvar values = {};\n\t\tvalues[fieldName] = !this[fieldName];\n\n\t\tMeteor.call(\"activitiesUpdate\", this._id, values, function(err, res) {\n\t\t\tif(err) {\n\t\t\t\talert(err.message);\n\t\t\t}\n\t\t});\n\n\t\treturn false;\n\t},\n\n\t\"click #delete-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar me = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Vuoi cancellare definitivamente l'Audit? Sei sicuro?\",\n\t\t\ttitle: \"Cancellazione\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tMeteor.call(\"activitiesRemove\", me._id, function(err, res) {\n\t\t\t\t\t\t\tif(err) {\n\t\t\t\t\t\t\t\talert(err.message);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n\t},\n\t\"click #edit-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tSession.set(\"activityId\",this._id);\n\t\tconsole.log(\"sessione corrente:\",this._id,\" - \",this.tipo);\n\t\t\t\n\t\tRouter.go(\"audit_filiale.workflow\", mergeObjects(Router.currentRouteParams(), {activityId: this._id}));\n\t\treturn false;\n\t}\n});\n\nTemplate.HomePrivateAuditViewTableItems.helpers({\n\t\"checked\": function(value) { return value ? \"checked\" : \"\" }, \n\t\"editButtonClass\": function() {\n\t\treturn Activities.userCanUpdate(Meteor.userId(), this) ? \"\" : \"hidden\";\n\t},\n\n\t\"deleteButtonClass\": function() {\n\t\treturn Activities.userCanRemove(Meteor.userId(), this) ? \"\" : \"hidden\";\n\t}\n});",
				"dest": "CLIENT_VIEWS_DIR/home_private/home_private.js1"
			},
			{
				"source_content": "var pageSession = new ReactiveDict();\n\nTemplate.AuditsWorkflowVerifiche.onCreated(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerifiche.onDestroyed(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerifiche.onRendered(function() {\n\tSession.set('titleVerifica','');\n  Session.set('descriptionVerifica','');\n\tMeteor.defer(function() {\n\t\tglobalOnRendered();\n\t\t$(\"input[autofocus]\").focus();\n\t});\n});\n\nTemplate.AuditsWorkflowVerifiche.events({\n\t\n});\n\nTemplate.AuditsWorkflowVerifiche.helpers({\n\n'title': function() {if(Activities.findOne({$and: [{_id: Session.get('activityId')},\n \t\t\t\t\t\t\t\t\t\t\t\t\t{\"titolo\":{$exists: true}},\n                                                   {\"numero\":{$exists: true}}]\n                                          })\n                       )\n\t\t\t\t\t   {return (Activities.findOne({_id: Session.get('activityId')}).numero + ' - ' + Activities.findOne({_id: Session.get('activityId')}).titolo);}\n                     \n\t\t\t\t\tif(Activities.findOne({$and: [{\"titolo\":{$exists: true}},\n                                                  {\"numero\":{$exists: false}}]\n                                           })\n                       )\n                       {return (Activities.findOne({_id: Session.get('activityId')}).titolo);}\n                                                   \n\t\t\t\t\tif(Activities.findOne({$and: [{\"titolo\":{$exists: false}},\n                                                  {\"numero\":{$exists: false}}]\n                                         })\n                       )\n                       {return (\"...\");}\n\t\t\t\t\t}\n});\n\n\nvar AuditsWorkflowVerificheViewItems = function(cursor) {\n\tif(!cursor) {\n\t\treturn [];\n\t}\n\n\tvar searchString = pageSession.get(\"AuditsWorkflowVerificheViewSearchString\");\n\tvar sortBy = pageSession.get(\"AuditsWorkflowVerificheViewSortBy\");\n\tvar sortAscending = pageSession.get(\"AuditsWorkflowVerificheViewSortAscending\");\n\tif(typeof(sortAscending) == \"undefined\") sortAscending = true;\n\n\tvar raw = cursor.fetch();\n\n\t// filter\n\tvar filtered = [];\n\tif(!searchString || searchString == \"\") {\n\t\tfiltered = raw;\n\t} else {\n\t\tsearchString = searchString.replace(\".\", \"\\\\.\");\n\t\tvar regEx = new RegExp(searchString, \"i\");\n\t\tvar searchFields = [\"numero\", \"titolo\", \"obiettivo\", \"descrizione\", \"activityId\", \"esito\"];\n\t\tfiltered = _.filter(raw, function(item) {\n\t\t\tvar match = false;\n\t\t\t_.each(searchFields, function(field) {\n\t\t\t\tvar value = (getPropertyValue(field, item) || \"\") + \"\";\n\n\t\t\t\tmatch = match || (value && value.match(regEx));\n\t\t\t\tif(match) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn match;\n\t\t});\n\t}\n\n\t// sort\n\tif(sortBy) {\n\t\tfiltered = _.sortBy(filtered, sortBy);\n\n\t\t// descending?\n\t\tif(!sortAscending) {\n\t\t\tfiltered = filtered.reverse();\n\t\t}\n\t}\n\n\treturn filtered;\n};\n\nvar AuditsWorkflowVerificheViewExport = function(cursor, fileType) {\n\tvar data = AuditsWorkflowVerificheViewItems(cursor);\n\tvar exportFields = [];\n\n\tvar str = exportArrayOfObjects(data, exportFields, fileType);\n\n\tvar filename = \"export.\" + fileType;\n\n\tdownloadLocalResource(str, filename, \"application/octet-stream\");\n};\n\nTemplate.AuditsWorkflowVerificheView.onCreated(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheView.onDestroyed(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheView.onRendered(function() {\n\tpageSession.set(\"AuditsWorkflowVerificheViewStyle\", \"table\");\n\t\n});\n\nTemplate.AuditsWorkflowVerificheView.events({\n\t\"submit #dataview-controls\": function(e, t) {\n\t\treturn false;\n\t},\n\n\t\"click #dataview-search-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar form = $(e.currentTarget).parent();\n\t\tif(form) {\n\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\tif(searchInput) {\n\t\t\t\tsearchInput.focus();\n\t\t\t\tvar searchString = searchInput.val();\n\t\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSearchString\", searchString);\n\t\t\t}\n\n\t\t}\n\t\treturn false;\n\t},\n\n\t\"keydown #dataview-search-input\": function(e, t) {\n\t\tif(e.which === 13)\n\t\t{\n\t\t\te.preventDefault();\n\t\t\tvar form = $(e.currentTarget).parent();\n\t\t\tif(form) {\n\t\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\t\tif(searchInput) {\n\t\t\t\t\tvar searchString = searchInput.val();\n\t\t\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSearchString\", searchString);\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tif(e.which === 27)\n\t\t{\n\t\t\te.preventDefault();\n\t\t\tvar form = $(e.currentTarget).parent();\n\t\t\tif(form) {\n\t\t\t\tvar searchInput = form.find(\"#dataview-search-input\");\n\t\t\t\tif(searchInput) {\n\t\t\t\t\tsearchInput.val(\"\");\n\t\t\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSearchString\", \"\");\n\t\t\t\t}\n\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t\"click #dataview-insert-button\": function(e, t) {\n\t\te.preventDefault();\n\t\t// ---\n\t\t// Router.go(\"audits.workflow.fieldworks.update\", mergeObjects(Router.currentRouteParams(), {singolaAttivitaId: this._id}));\n\n\t\t\tMeteor.call(\"fieldworksInsert\", {activityId: Session.get(\"activityId\")}, function(e, r) {\n\t\t\t\t//console.log(\"fieldworksInsert\",r); \n\t\t\t\tif(e) errorAction(e); \n\t\t\t\telse Router.go(\"audits.workflow.verifiche.update\", mergeObjects(Router.currentRouteParams(), {singolaAttivitaId: r}) );});\n// ---\n\n\t},\n\n\t\"click #dataview-export-default\": function(e, t) {\n\t\te.preventDefault();\n\t\tAuditsWorkflowVerificheViewExport(this.singola_attivita_list, \"csv\");\n\t},\n\n\t\"click #dataview-export-csv\": function(e, t) {\n\t\te.preventDefault();\n\t\tAuditsWorkflowVerificheViewExport(this.singola_attivita_list, \"csv\");\n\t},\n\n\t\"click #dataview-export-tsv\": function(e, t) {\n\t\te.preventDefault();\n\t\tAuditsWorkflowVerificheViewExport(this.singola_attivita_list, \"tsv\");\n\t},\n\n\t\"click #dataview-export-json\": function(e, t) {\n\t\te.preventDefault();\n\t\tAuditsWorkflowVerificheViewExport(this.singola_attivita_list, \"json\");\n\t}\n\n\t\n});\n\nTemplate.AuditsWorkflowVerificheView.helpers({\n\n\t\"insertButtonClass\": function() {\n\t\treturn Fieldworks.userCanInsert(Meteor.userId(), {}) ? \"\" : \"hidden\";\n\t},\n\n\t\"isEmpty\": function() {\n\t\treturn !this.singola_attivita_list || this.singola_attivita_list.count() == 0;\n\t},\n\t\"isNotEmpty\": function() {\n\t\treturn this.singola_attivita_list && this.singola_attivita_list.count() > 0;\n\t},\n\t\"isNotFound\": function() {\n\t\treturn this.singola_attivita_list && pageSession.get(\"AuditsWorkflowVerificheViewSearchString\") && AuditsWorkflowVerificheViewItems(this.singola_attivita_list).length == 0;\n\t},\n\t\"searchString\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewSearchString\");\n\t},\n\t\"viewAsTable\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewStyle\") == \"table\";\n\t},\n\t\"viewAsBlog\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewStyle\") == \"blog\";\n\t},\n\t\"viewAsList\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewStyle\") == \"list\";\n\t},\n\t\"viewAsGallery\": function() {\n\t\treturn pageSession.get(\"AuditsWorkflowVerificheViewStyle\") == \"gallery\";\n\t}\n\n\t\n});\n\n\nTemplate.AuditsWorkflowVerificheViewTable.onCreated(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTable.onDestroyed(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTable.onRendered(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTable.events({\n\t\"click .th-sortable\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar oldSortBy = pageSession.get(\"AuditsWorkflowVerificheViewSortBy\");\n\t\tvar newSortBy = $(e.target).attr(\"data-sort\");\n\n\t\tpageSession.set(\"AuditsWorkflowVerificheViewSortBy\", newSortBy);\n\t\tif(oldSortBy == newSortBy) {\n\t\t\tvar sortAscending = pageSession.get(\"AuditsWorkflowVerificheViewSortAscending\") || false;\n\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSortAscending\", !sortAscending);\n\t\t} else {\n\t\t\tpageSession.set(\"AuditsWorkflowVerificheViewSortAscending\", true);\n\t\t}\n\t}\n});\n\nTemplate.AuditsWorkflowVerificheViewTable.helpers({\n\t\"tableItems\": function() {\n\t\treturn AuditsWorkflowVerificheViewItems(this.singola_attivita_list);\n\t}\n});\n\n\nTemplate.AuditsWorkflowVerificheViewTableItems.onCreated(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTableItems.onDestroyed(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTableItems.onRendered(function() {\n\t\n});\n\nTemplate.AuditsWorkflowVerificheViewTableItems.events({\n\t\"click td\": function(e, t) {\n\t\te.preventDefault();\n\t\t\n\t\tRouter.go(\"audits.workflow.verifiche.update\", mergeObjects(Router.currentRouteParams(), {singolaAttivitaId: this._id}));\n\t\treturn false;\n\t},\n\n\t\"click .inline-checkbox\": function(e, t) {\n\t\te.preventDefault();\n\n\t\tif(!this || !this._id) return false;\n\n\t\tvar fieldName = $(e.currentTarget).attr(\"data-field\");\n\t\tif(!fieldName) return false;\n\n\t\tvar values = {};\n\t\tvalues[fieldName] = !this[fieldName];\n\n\t\tMeteor.call(\"fieldworksUpdate\", this._id, values, function(err, res) {\n\t\t\tif(err) {\n\t\t\t\talert(err.message);\n\t\t\t}\n\t\t});\n\n\t\treturn false;\n\t},\n\n\t\"click #delete-button\": function(e, t) {\n\t\te.preventDefault();\n\t\tvar me = this;\n\t\tbootbox.dialog({\n\t\t\tmessage: \"Delete? Are you sure?\",\n\t\t\ttitle: \"Delete\",\n\t\t\tanimate: false,\n\t\t\tbuttons: {\n\t\t\t\tsuccess: {\n\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\tclassName: \"btn-success\",\n\t\t\t\t\tcallback: function() {\n\t\t\t\t\t\tMeteor.call(\"fieldworksRemove\", me._id, function(err, res) {\n\t\t\t\t\t\t\tif(err) {\n\t\t\t\t\t\t\t\talert(err.message);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdanger: {\n\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\tclassName: \"btn-default\"\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn false;\n\t},\n\t\"click #edit-button\": function(e, t) {\n\t\te.preventDefault();\n\t\t/**/\n\t\treturn false;\n\t}\n});\n\nTemplate.AuditsWorkflowVerificheViewTableItems.helpers({\n\t\"checked\": function(value) { return value ? \"checked\" : \"\" }, \n\t\"editButtonClass\": function() {\n\t\treturn Fieldworks.userCanUpdate(Meteor.userId(), this) ? \"\" : \"hidden\";\n\t},\n\n\t\"deleteButtonClass\": function() {\n\t\treturn Fieldworks.userCanRemove(Meteor.userId(), this) ? \"\" : \"hidden\";\n\t}\n});\n",
				"dest": "CLIENT_VIEWS_DIR/audits/workflow/verifiche/verifiche.js1"
			},
			{
				"source_content": "Meteor.methods({\n  \"ldapquery\": function(data) {\n  \n    if (process.env.passwdAD) {   \n\t\tconst bound = Meteor.bindEnvironment((callback) => {callback();});\n        var ActiveDirectory = require('activedirectory2');\n        var config = {url: 'ldap://192.168.208.75',\n                          baseDN: 'dc=intranet,dc=ifis,dc=local',\n                          username: 'matteo.setti@bancaifis.it',\n                          password : passwdAD,               \n                          attributes: {\n                                    user: [\n                                      'dn', 'distinguishedName',\n                                      'userPrincipalName', 'sAMAccountName', 'mail',\n                                      'lockoutTime', 'whenCreated', 'pwdLastSet', 'userAccountControl',\n                                      'employeeID', 'sn', 'givenName', 'initials', 'cn', 'displayName',\n                                      'comment', 'description', 'department', 'title', 'directReports'\n                                    ],\n                                    group: [\n                                      'dn', 'cn', 'description', 'distinguishedName', 'objectCategory'\n                                    ]\n                                  }                          \n                           };\n        var ad = new ActiveDirectory(config);\n      \n        var query = '(&(objectClass=person)(objectClass=user))';\n    \n        var opts = {\n                includeMembership : [ 'group', 'user' ], // Optionally can use 'all'\n                includeDeleted : false\n        };\n\n        console.log(\"Interrogazione active directory\");\n    \n         ad.find(query, function(err, results) {\n             // Wrap callback into Fiber\n             // https://forums.meteor.com/t/meteor-code-must-always-run-within-a-fiber-try-wrapping-callbacks-that-you-pass-to-non-meteor-libraries-with-meteor-bindenvironmen/40099\n             bound(() => {                 \n                  if ((err) || (! results)) {\n                    console.log('ERROR: ' + JSON.stringify(err));\n                    return;\n                  }\n                \n                  console.log('Groups');\n                  _.each(results.groups, function(group) {\n                    console.log('  ' + group.cn);                    \n                  });\n                \n                  Profili.remove({});\n               \n                  console.log('Users');\n                  _.each(results.users, function(user) {                   \n                   Profili.insert({user: user.cn, department: user.department, whenCreated: user.whenCreated});      \n                  });\n                  \n             });   \n         });\n      }\n      else {console.log('Active Directory disable');}\n    },  \n// ==================================================================  \n  \n   genericldapquery(query) {           \n    if (process.env.passwdAD) {   \n\t\tconst bound = Meteor.bindEnvironment((callback) => {callback();});\n        var ActiveDirectory = require('activedirectory2');\n        var config = {url: 'ldap://192.168.208.75',\n                          baseDN: 'dc=intranet,dc=ifis,dc=local',\n                          username: 'matteo.setti@bancaifis.it',\n                          password : passwdAD,               \n                          attributes: {\n                                      user: [\n                                        'dn', 'distinguishedName',\n                                        'userPrincipalName', 'sAMAccountName', 'mail',\n                                        'lockoutTime', 'whenCreated', 'pwdLastSet', 'userAccountControl',\n                                        'employeeID', 'sn', 'givenName', 'initials', 'cn', 'displayName',\n                                        'comment', 'description', 'department', 'title', 'directReports'],\n                                      group: ['dn', 'cn', 'description', 'distinguishedName', 'objectCategory']\n                                      }                          \n                      };\n      \n        var ad = new ActiveDirectory(config);\n            \t\n        console.log(\"query:\",query); \n      \n        var opts = {\n                includeMembership : [ 'group', 'user' ], // Optionally can use 'all'\n                includeDeleted : false\n        };\n\n        console.log(\"Interrogazione active directory\");   \n      \n        ad.find(query, function(err, results) {    \n             // Wrap callback into Fiber\n             // https://forums.meteor.com/t/meteor-code-must-always-run-within-a-fiber-try-wrapping-callbacks-that-you-pass-to-non-meteor-libraries-with-meteor-bindenvironmen/40099\n             bound(() => {\n                  if ((err) || (! results)) {\n                    console.log('ERROR: ' + JSON.stringify(err));\n                  } else { console.log('results:',results); Ldap.insert({domain_users: results});};\n             });\n         });\n      }\n      else {console.log('Active Directory disable');}\n    }       \n});\n",
				"dest": "SERVER_METHODS_DIR/my-methods.js"
			},
			{
				"source_content": "Meteor.publish(\"q_users\", function() {\n      \n        return Users.find({}, {fields:{\"profile.name\": true}} );      \n});",
				"dest": "SERVER_PUBLISH_DIR/users_collection.js"
			}
		],
		"packages": {
			"meteor": [
				"littledata:synced-cron",
				"raix:ui-dropped-event",
				"msavin:mongol",
				"random",
				"perak:c3",
				"jcbernack:reactive-aggregate"
			],
			"npm": [
				"csv-parser",
				"activedirectory2",
				"jsreport-browser-client-dist",
				"containerized"
			]
		}
	}
}